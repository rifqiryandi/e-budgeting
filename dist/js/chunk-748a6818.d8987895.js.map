{"version":3,"sources":["webpack:///./src/components/ExampleForm.vue","webpack:///./src/components/Table.vue","webpack:///./node_modules/datatables.net-vue3/dist/datatables.net-vue3.mjs","webpack:///./node_modules/datatables.net-bs5/js/dataTables.bootstrap5.mjs","webpack:///./node_modules/datatables.net-responsive-bs5/js/responsive.bootstrap5.mjs","webpack:///./src/components/Table.vue?2326","webpack:///./src/components/ExampleForm.vue?2c69","webpack:///./node_modules/datatables.net/js/jquery.dataTables.js","webpack:///./src/components/Table.vue?d985","webpack:///./node_modules/datatables.net-bs5/js/dataTables.bootstrap5.js","webpack:///./node_modules/datatables.net-responsive/js/dataTables.responsive.js","webpack:///./node_modules/datatables.net/js/jquery.dataTables.mjs"],"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_createVNode","_component_tableView","_hoisted_6","_component_DataTable","data","$data","columns","option","responsive","autoWidth","y","d","C","name","inheritAttrs","s","E","props","ajax","options","emits","expose","i","r","c","a","w","f","e","value","slice","o","n","p","m","t","toArray","l","includes","row","add","I","g","remove","rows","invalidate","draw","deep","Error","on","emit","event","dt","destroy","ref_key","ref","$attrs","style","width","$slots","P","install","component","extend","defaults","dom","renderer","ext","classes","sWrapper","sFilterInput","sLengthSelect","sProcessing","sPageButton","pageButton","bootstrap","settings","host","idx","buttons","page","pages","btnDisplay","btnClass","activeEl","api","Api","oClasses","lang","oLanguage","oPaginate","aria","oAria","paginate","attach","container","ien","node","button","clickHandler","preventDefault","currentTarget","hasClass","action","length","Array","isArray","sFirst","sPrevious","sNext","sLast","disabled","indexOf","sTableId","append","iTabIndex","html","appendTo","oApi","_fnBindAction","hostEl","find","document","activeElement","paginationEl","children","empty","addClass","undefined","trigger","modal","_display","Responsive","display","_original","_modal","_bs","window","bs","Modal","update","render","fn","header","detach","show","DataTable","use","DataTablesCore","DataTableLib","components","title","type","meta","methods","mounted","__exports__","tableView","factory","$","_ext","_Api","_api_register","_api_registerPlural","selector","this","sSelector","oOpts","_","traditional","_fnSettingsFromNode","iApiIndex","fnAddData","redraw","isPlainObject","flatten","fnAdjustColumnSizing","bRedraw","adjust","scroll","oScroll","sX","sY","_fnScrollDraw","fnClearTable","clear","fnClose","nTr","child","hide","fnDeleteRow","target","callback","aoData","call","fnDestroy","fnDraw","complete","fnFilter","sInput","iColumn","bRegex","bSmart","bShowGlobal","bCaseInsensitive","search","column","fnGetData","src","col","nodeName","toLowerCase","cell","fnGetNodes","iRow","nodes","fnGetPosition","toUpperCase","index","columnVisible","fnIsOpen","isShown","fnOpen","mHtml","sClass","fnPageChange","mAction","fnSetColumnVis","iCol","bShow","visible","fnSettings","fnSort","aaSort","order","fnSortListener","nNode","fnCallback","listener","fnUpdate","mData","mRow","bAction","fnVersionCheck","_that","emptyInit","len","internal","_fnExternApiFunc","each","iLen","oInit","_fnExtend","sId","getAttribute","bInitHandedOff","$this","_fnCompatOpts","_fnCompatCols","_fnCamelToHungarian","allSettings","nTable","nTHead","parentNode","nTFoot","bRetrieve","bDestroy","oInstance","_fnLog","id","splice","_unique","oSettings","models","push","dataTable","_fnLanguageCompat","aLengthMenu","iDisplayLength","_fnMap","oFeatures","_fnCallbackReg","fnDrawCallback","fnServerParams","fnStateSaveParams","fnStateLoadParams","fnStateLoaded","fnRowCallback","fnCreatedRow","fnHeaderCallback","fnFooterCallback","fnInitComplete","fnPreDrawCallback","rowIdFn","_fnGetObjectDataFn","rowId","_fnBrowserDetect","sTable","iInitDisplayStart","iDisplayStart","_iDisplayStart","iDeferLoading","bDeferLoading","tmp","_iRecordsDisplay","_iRecordsTotal","sUrl","dataType","url","success","json","_fnCallbackFire","_fnInitialise","error","asStripeClasses","sStripeOdd","sStripeEven","stripeClasses","rowOne","eq","inArray","map","el","removeClass","join","asDestroyStripes","aoColumnsInit","anThs","nThead","getElementsByTagName","_fnDetectHeader","aoHeader","_fnGetUniqueThs","aoColumns","_fnAddColumn","_fnApplyColumnDefs","aoColumnDefs","oDef","_fnColumnOptions","sort","filter","_isArrayHost","features","loadedInit","aaSorting","sorting","asSorting","_fnSortingClasses","bSort","bSorted","aSort","_fnSortFlatten","sortedColumns","val","dir","_fnSortAria","_fnDataSource","bDeferRender","captions","_captionSide","css","thead","tbody","insertAfter","nTBody","tfoot","sNoFooter","aoFooter","aaData","_fnAddData","_fnAddTr","aiDisplay","aiDisplayMaster","bInitialised","_fnSaveState","bStateSave","_fnLoadState","_re_dic","_re_new_lines","_re_html","_re_date","_re_escape_regex","RegExp","_re_formatted_numeric","_empty","_intVal","integer","parseInt","isNaN","isFinite","_numToDecimal","num","decimalPoint","_fnEscapeRegex","replace","_isNumber","formatted","strType","parseFloat","_isHtml","_htmlNumeric","_stripHtml","_pluck","prop","prop2","out","_pluck_order","_range","start","end","_removeEmpty","_areAllUnique","sorted","last","j","k","again","_flatten","_includes","_fnHungarianMap","match","newKey","hungarian","key","_hungarianMap","user","force","hungarianKey","charAt","defaultDecimal","sDecimal","_addNumericSort","zeroRecords","sZeroRecords","sEmptyTable","sLoadingRecords","sInfoThousands","sThousands","decimal","arg","Object","prototype","toString","String","trim","util","throttle","freq","timer","frequency","that","now","Date","args","arguments","clearTimeout","setTimeout","apply","escapeRegex","set","source","setData","b","arrayNotation","funcNotation","innerSrc","_fnSplitObjNotation","aLast","__reArray","__reFn","jLen","get","fetchData","substring","_fnCompatMap","knew","old","init","sScrollX","scrollX","searchCols","aoSearchCols","oSearch","dataSort","aDataSort","__browser","browser","position","top","left","scrollLeft","height","overflow","outer","inner","barWidth","offsetWidth","clientWidth","bScrollOversize","bScrollbarLeft","Math","round","offset","bBounding","getBoundingClientRect","oBrowser","iBarWidth","_fnReduce","inc","isSet","hasOwnProperty","nTh","oDefaults","oCol","oColumn","createElement","sTitle","innerHTML","aoPreSearchCols","oOptions","th","sWidthOrig","attr","mDataProp","sType","_sManualType","className","origClass","iDataSort","mDataSrc","mRender","attrTest","_bAttrSrc","_setter","rowData","innerData","fnSetData","_fnSetObjectDataFn","_rowReadObject","bSortable","sSortableNone","bAsc","bDesc","sSortingClass","sSortableAsc","sSortingClassJUI","sSortJUIAscAllowed","sSortableDesc","sSortJUIDescAllowed","sSortable","sSortJUI","_fnAdjustColumnSizing","bAutoWidth","_fnCalculateColumnWidths","sWidth","_fnVisibleToColumnIndex","iMatch","aiVis","_fnGetColumns","_fnColumnIndexToVisible","iPos","_fnVisbleColumns","vis","bVisible","sParam","_fnColumnTypes","jen","ken","detectedType","cache","types","detect","_fnGetCellData","aoColDefs","aoCols","kLen","def","aTargets","targets","aDataIn","anTds","oData","oRow","_aData","aIds","_fnCreateTr","trs","_fnGetRowElements","cells","_fnNodeToDataIndex","_DT_RowIndex","_fnNodeToColumnIndex","anCells","rowIdx","colIdx","iDraw","defaultContent","sDefaultContent","cellData","iDrawError","fomatters","_fnSetCellData","str","_fnGetDataMaster","_fnClearTable","_fnDeleteIndex","iTarget","iTargetIndex","_fnInvalidate","cellWrite","childNodes","removeChild","firstChild","_aSortData","_aFilterData","cols","_fnRowAttributes","contents","tds","td","objectRead","setter","cellProcess","nextSibling","rowNode","nTrIn","nTd","create","sCellType","_DT_CellIndex","appendChild","fnCreatedCell","tr","DT_RowClass","split","__rowc","concat","DT_RowAttr","DT_RowData","_fnBuildHead","createHeader","_fnSortAttachListener","_fnRenderer","sHeaderTH","sFooterTH","nTf","_fnDrawHead","aoSource","bIncludeHidden","nLocalTr","iRowspan","iColspan","aoLocal","aApplied","iColumns","_fnDraw","ajaxComplete","_fnStart","aPreDraw","anRows","iRowCount","iStripes","oLang","bServerSide","iDisplayEnd","fnDisplayEnd","bDrawing","_fnProcessingDisplay","bDestroying","_fnAjaxUpdate","iStart","iEnd","iDataIndex","nRow","sStripe","_sRowStripe","sZero","fnRecordsTotal","sRowEmpty","body","bFiltered","_fnReDraw","holdPosition","bFilter","_fnSort","_fnFilterComplete","oPreviousSearch","_drawHold","_fnAddOptionsHtml","table","holding","insertBefore","insert","nHolding","nTableWrapper","nTableReinsertBefore","featureNode","cOption","nNewNode","cNext","sAttr","aDom","sDom","sJUIHeader","sJUIFooter","aSplit","substr","parent","bPaginate","bLengthChange","_fnFeatureHtmlLength","_fnFeatureHtmlFilter","bProcessing","_fnFeatureHtmlProcessing","_fnFeatureHtmlTable","bInfo","_fnFeatureHtmlInfo","_fnFeatureHtmlPaginate","feature","aoFeatures","cFeature","fnInit","aanFeatures","replaceWith","aLayout","nCell","iColShifted","bUnique","nTrs","fnShiftCol","nHeader","aReturn","unique","bSortCellsTop","fnRecordsDisplay","_fnBuildAjax","rbracket","ajaxData","instance","status","jqXHR","_fnAjaxDataSrc","sError","newData","baseAjax","sServerMethod","xhr","thrown","ret","readyState","oAjaxData","fnServerData","sAjaxSource","_fnAjaxParameters","_fnAjaxUpdateDraw","dataProp","columnSearch","columnCount","preSearch","preColSearch","displayStart","displayLength","_iDisplayLength","param","sSearch","regex","sName","searchable","bSearchable","orderable","legacy","compat","modern","recordsTotal","recordsFiltered","_bInitComplete","_fnInitComplete","write","dataSrc","sAjaxDataProp","tableId","language","previousSearch","input","sFilter","searchFn","return","searchDelay","jqFilter","sSearchPlaceholder","_fnThrottle","keyCode","ev","oInput","iForce","oPrevSearch","aoPrevSearch","fnSaveFilter","oFilter","fnRegex","bEscapeRegex","_fnFilter","_fnFilterColumn","_fnFilterCustom","filters","displayRows","merge","searchStr","smart","caseInsensitive","rpSearch","_fnFilterCreateSearch","test","invalidated","prevSearch","displayMaster","filtered","_fnFilterData","_sFilterRow","word","__filter_div","__filter_div_textContent","textContent","filterData","wasInvalidated","innerText","_fnSearchToCamel","obj","_fnSearchToHung","tid","sInfo","aoDrawCallback","_fnUpdateInfo","max","total","sInfoEmpty","sInfoFiltered","sInfoPostFix","_fnInfoMacros","fnInfoCallback","formatter","fnFormatNumber","all","ceil","iAjaxStart","deferLoading","_fnStringToCss","aData","_fnLengthChange","_fnLengthOverflow","menu","d2","lengths","select","Option","div","sLength","sLengthMenu","outerHTML","sPaginationType","plugin","pager","sPaging","visRecords","_fnPageChange","records","floor","changed","scrollY","caption","captionSide","headerClone","cloneNode","footerClone","footer","_div","size","scroller","sScrollWrapper","sScrollHead","border","sScrollHeadInner","sXInner","removeAttr","sScrollBody","sScrollFoot","sScrollFootInner","scrollHead","scrollBody","scrollFoot","bCollapse","nScrollHead","nScrollBody","nScrollFoot","headerTrgEls","footerTrgEls","headerSrcEls","footerSrcEls","headerCopy","footerCopy","correction","sanityWidth","scrollXInner","divHeader","divHeaderStyle","divHeaderInner","divHeaderInnerStyle","divHeaderTable","divBodyEl","divBody","divBodyStyle","divFooter","divFooterInner","divFooterTable","tableEl","tableStyle","ie67","headerWidths","footerWidths","headerContent","footerContent","zeroOut","nSizer","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","scrollBarVis","scrollHeight","clientHeight","clone","prependTo","_fnApplyToChildren","outerWidth","offsetHeight","getComputedStyle","nToSize","iOuterWidth","bScrolling","padding","scrollTop","an1","an2","nNode1","nNode2","nodeType","__re_html_remove","columnIdx","visibleColumns","headerCells","tableWidthAttr","tableContainer","userInputs","styleWidth","_fnConvertToWidth","tmpTable","margin","_fnGetWidestNode","sContentPadding","holder","right","bounding","_reszEvt","bindResize","sInstance","_fnGetMaxLenString","maxIdx","srcCol","fixed","aaSortingFixed","fixedObj","nestedSort","pre","post","_idx","sortCol","aiOrig","oExtSort","formatters","_fnSortData","x","dataA","dataB","label","nextSort","ariaTitle","removeAttribute","setAttribute","sSortAscending","sSortDescending","_fnSortListener","nextSortIdx","next","bSortMulti","sortIdx","attachTo","shiftKey","oldSort","aLastSort","sortClass","sSortColumn","bSortClasses","customData","customSort","sSortDataType","_bLoadingState","state","time","oSavedState","fnStateSaveCallback","loaded","_fnImplementState","fnStateLoadCallback","abStateLoad","duration","iStateDuration","oLoadedState","level","msg","tn","console","log","sErrMode","errMode","alert","mappedName","extender","breakRefs","which","sStore","callbackArr","eventName","reverse","Event","parents","result","__apiStruct","__arrayProto","_toSettings","mixed","jq","tables","context","ctxSettings","opts","any","count","ctx","iterator","alwaysNew","items","item","apiInst","_selector_row_indexes","apiSelector","lastIndexOf","pluck","pop","reduce","reduceRight","shift","to$","toJQuery","unshift","scope","__dt_wrapper","struct","methodScoping","struc","methodExt","propExt","register","method","heir","registerPlural","pluralName","singularName","__table_selector","paging","info","__reload","one","abort","resetPaging","_selector_run","selectFn","res","selectorType","_selector_opts","_selector_first","inst","displayFiltered","displayFilteredMap","__row_selector","run","sel","selInt","cellIdx","closest","rowObj","hash","thatIdx","loopRow","loopCells","newRows","modRows","namespace","stateSaveParamsEvent","destroyEvent","idFn","ids","_detailsShow","childRows","off","every","__details_add","klass","addRow","created","colSpan","_details","__details_state","__details_remove","__details_display","__details_events","drawEvent","colvisEvent","_emp","_child_obj","_child_mth","__re_column_selector","__columnData","r1","r2","__column_selector","names","visColumns","jqResult","__setColumnVis","calc","__cell_selector","allCells","fnSelector","rowSelector","columnSelector","internalOpts","cellsNoOpts","selected","caseInsen","module","root","is","jquery","versionCheck","version","iThis","iThat","aThis","aThat","isDataTable","fnIsDataTable","head","foot","fnTables","camelToHungarian","jqRows","jqTable","jqTbody","jqWrapper","orig","removedMethod","sDestroyWidth","arg1","arg2","arg3","arg4","token","plural","resolved","toFormat","JSON","parse","sessionStorage","localStorage","getItem","location","pathname","setItem","stringify","min","builder","oJUIClasses","sVersion","afnFiltering","aTypes","ofnSearch","oSort","afnSortData","oStdClasses","oPagination","extPagination","_numbers","numbers","numbers_length","half","DT_el","simple","full","simple_numbers","full_numbers","first_last_numbers","tabIndex","disabledClass","sPageButtonDisabled","sPageButtonActive","tag","pagingTag","parsed","string","__numericReplace","decimalPlace","re1","re2","Infinity","ts","sSortAsc","sSortDesc","jqueryui","sSortJUIWrapper","sSortIcon","sSortJUIAsc","sSortJUIDesc","__htmlEscapeEntities","__mld","momentFn","luxonFn","dateFn","moment","luxon","__mlWarning","__mldObj","format","locale","utc","isValid","DateTime","fromFormat","fromISO","setLocale","__mlHelper","localeString","from","to","typeName","valueOf","local","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","__thousands","__decimal","Intl","NumberFormat","formatToParts","datetime","date","number","thousands","precision","prefix","postfix","negative","flo","toFixed","abs","intPart","floatPart","text","_fnCalculateEnd","dataTableSettings","dataTableExt","childNodeStore","current","details","_constructor","dtPrivateSettings","oldWindowWidth","innerWidth","_responsive","_resize","_setColumnVis","breakpoints","_classLogic","_resizeAuto","_detailsInit","_timer","_redrawChildren","curr","rowIds","_detailsDisplay","_controlClass","_childNodes","_childNodesRestore","store","parentChildren","_columnsVisiblity","breakpoint","priority","auto","minWidth","includeIn","requiredWidth","scrolling","bar","widthAvailable","usedWidth","control","showControl","never","responsivePriority","dataPriority","operator","matched","_find","classNames","brokenPoint","re","columnsVis","firstVisible","_detailsObj","triggerHandler","_tabIndexes","click","targetIdx","dtCol","columnIndex","orthogonal","hidden","rowIndex","forceRedraw","oldVis","collapsedClass","toggleClass","recordsDisplay","isEmptyObject","clonedTable","clonedHeader","clonedBody","clonedFooter","footerCells","inserted","_responsiveOnlyHidden","v","showHide","indexes","removeData","childRow","childRowImmediate","hasHidden","close","stopPropagation","prepend","listHiddenNodes","ul","found","listHidden","tableAll","tableClass","li"],"mappings":"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","file":"js/chunk-748a6818.d8987895.js","sourcesContent":["<template>\n  <div class=\"card card-default\">\n    <div class=\"card-header\">\n      <h3 class=\"card-title\">Data User</h3>\n\n      <div class=\"card-tools\">\n        <button type=\"button\" class=\"btn btn-tool\" data-card-widget=\"collapse\">\n          <i class=\"fas fa-minus\"></i>\n        </button>\n        <!-- <button type=\"button\" class=\"btn btn-tool\" data-card-widget=\"remove\">\n          <i class=\"fas fa-times\"></i>\n        </button> -->\n      </div>\n    </div>\n    <!-- /.card-header -->\n    <div class=\"card-body\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <tableView></tableView>\n        </div>\n      </div>\n    </div>\n    <!-- /.card-body -->\n    <div class=\"card-footer\"></div>\n  </div>\n</template>\n\n<script>\nimport tableView from \"./Table.vue\";\nexport default {\n  components: {\n    tableView,\n  },\n};\n</script>\n\n<style></style>\n","<template lang=\"\">\n  <div>\n    <DataTable\n      :data=\"data\"\n      :columns=\"columns\"\n      class=\"display table table-striped table-bordered\"\n      :option=\"{ responsive: true, autoWidth: true }\"\n    >  \n    </DataTable>\n  </div>\n</template>\n<script>\n// import TutorialDataService from \"../services/TutorialDataService\";\n\nimport DataTable from \"datatables.net-vue3\";\nimport DataTableLib from \"datatables.net-bs5\";\nimport DataTablesCore from \"datatables.net\";\nimport \"datatables.net-responsive-bs5\";\nDataTable.use(DataTablesCore);\nDataTable.use(DataTableLib);\n\nexport default {\n  name: \"tes-comp\",\n  components: {\n    DataTable,\n  },\n  data() {\n    return {\n      data: null,\n      columns: [\n        {\n          title:\"NO\",\n          data:null,\n          render:function(data,type,row,meta) {\n            return `${meta.row+1}`\n          }\n        },\n        {\n          title:\"Nama\",\n          data:'name'\n        }\n      ],\n    };\n  },\n  methods: {\n    // retrieveTutorials() {\n    //   TutorialDataService.getAll()\n    //     .then((response) => {\n    //       this.data = response.data.data;\n    //       console.log(response.data.data);\n    //     })\n    //     .catch((e) => {\n    //       console.log(e);\n    //     });\n    // },\n  },\n  mounted() {\n    // this.retrieveTutorials();\n  },\n};\n</script>\n<style>\n  @import '../../node_modules/datatables.net-bs5/css/dataTables.bootstrap5.min.css';\n</style>\n","import { defineComponent as h, ref as u, watch as k, onMounted as x, getCurrentInstance as D, unref as _, onBeforeUnmount as j, setBlockTracking as v, createElementVNode as b, mergeProps as S, renderSlot as A } from \"vue\";\nconst y = [\n  \"childRow\",\n  \"column-sizing\",\n  \"column-visibility\",\n  \"destroy\",\n  \"draw\",\n  \"error\",\n  \"init\",\n  \"length\",\n  \"order\",\n  \"page\",\n  \"preDraw\",\n  \"preInit\",\n  \"preXhr\",\n  \"processing\",\n  \"requestChild\",\n  \"search\",\n  \"stateLoadParams\",\n  \"stateLoaded\",\n  \"stateSaveParams\",\n  \"xhr\",\n  \"autoFill\",\n  \"preAutoFill\",\n  \"buttons-action\",\n  \"buttons-processing\",\n  \"column-reorder\",\n  \"key\",\n  \"key-blur\",\n  \"key-focus\",\n  \"key-refocus\",\n  \"key-return-submit\",\n  \"responsive-display\",\n  \"responsive-resize\",\n  \"rowgroup-datasrc\",\n  \"pre-row-reorder\",\n  \"row-reorder\",\n  \"row-reordered\",\n  \"dtsb-inserted\",\n  \"deselect\",\n  \"select\",\n  \"select-blur\",\n  \"selectItems\",\n  \"selectStyle\",\n  \"user-select\",\n  \"stateRestore-change\"\n];\nlet d;\nconst C = {\n  name: \"Datatables.netVue\",\n  inheritAttrs: !1,\n  use(s) {\n    d = s;\n  }\n}, E = /* @__PURE__ */ h({\n  ...C,\n  props: {\n    ajax: null,\n    columns: null,\n    data: null,\n    options: null\n  },\n  emits: y,\n  setup(s, { expose: i }) {\n    const r = s, c = u(null), a = u(), w = u([]);\n    k(\n      () => r.data,\n      (e) => {\n        var o, n, p, m;\n        let t = (o = a.value) == null ? void 0 : o.data().toArray();\n        for (let l of e)\n          t != null && t.includes(l) || (n = a.value) == null || n.row.add(l);\n        if (typeof t < \"u\")\n          for (let l of t)\n            e.includes(l) || (p = a.value) == null || p.row((I, g) => g === l).remove();\n        (m = a.value) == null || m.rows().invalidate().draw(!1), f(e);\n      },\n      {\n        deep: !0\n      }\n    ), x(() => {\n      const e = D();\n      let t = r.options || {};\n      if (r.data && (t.data = r.data, f(t.data)), r.columns && (t.columns = r.columns), r.ajax && (t.ajax = r.ajax), !d)\n        throw new Error(\n          \"DataTables library not set. See https://datatables.net/tn/19 for details.\"\n        );\n      a.value = new d(_(c), t);\n      for (let o of y)\n        a.value && e && a.value.on(o, (n) => {\n          e.emit(o, { event: n, dt: a });\n        });\n    }), j(() => {\n      var e;\n      (e = a.value) == null || e.destroy(!0);\n    });\n    function f(e) {\n      w.value = e.value ? e.value.slice() : e.slice();\n    }\n    return i({\n      dt: a\n    }), (e, t) => t[0] || (v(-1), t[0] = b(\"div\", { class: \"datatable\" }, [\n      b(\"table\", S({\n        ref_key: \"table\",\n        ref: c\n      }, e.$attrs, { style: { width: \"100%\" } }), [\n        A(e.$slots, \"default\")\n      ], 16)\n    ]), v(1), t[0]);\n  }\n}), P = /* @__PURE__ */ (() => {\n  const s = E;\n  return s.install = (i) => {\n    i.component(\"Datatables.netVue\", s);\n  }, s;\n})();\nexport {\n  P as default\n};\n","/*! DataTables Bootstrap 5 integration\n * 2020 SpryMedia Ltd - datatables.net/license\n */\n\nimport $ from 'jquery';\nimport DataTable from 'datatables.net';\n\n\n/**\n * DataTables integration for Bootstrap 5. This requires Bootstrap 5 and\n * DataTables 1.10 or newer.\n *\n * This file sets the defaults and adds options to DataTables to style its\n * controls using Bootstrap. See http://datatables.net/manual/styling/bootstrap\n * for further information.\n */\n\n/* Set the defaults for DataTables initialisation */\n$.extend( true, DataTable.defaults, {\n\tdom:\n\t\t\"<'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'f>>\" +\n\t\t\"<'row dt-row'<'col-sm-12'tr>>\" +\n\t\t\"<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>\",\n\trenderer: 'bootstrap'\n} );\n\n\n/* Default class modification */\n$.extend( DataTable.ext.classes, {\n\tsWrapper:      \"dataTables_wrapper dt-bootstrap5\",\n\tsFilterInput:  \"form-control form-control-sm\",\n\tsLengthSelect: \"form-select form-select-sm\",\n\tsProcessing:   \"dataTables_processing card\",\n\tsPageButton:   \"paginate_button page-item\"\n} );\n\n\n/* Bootstrap paging button renderer */\nDataTable.ext.renderer.pageButton.bootstrap = function ( settings, host, idx, buttons, page, pages ) {\n\tvar api     = new DataTable.Api( settings );\n\tvar classes = settings.oClasses;\n\tvar lang    = settings.oLanguage.oPaginate;\n\tvar aria = settings.oLanguage.oAria.paginate || {};\n\tvar btnDisplay, btnClass;\n\n\tvar attach = function( container, buttons ) {\n\t\tvar i, ien, node, button;\n\t\tvar clickHandler = function ( e ) {\n\t\t\te.preventDefault();\n\t\t\tif ( !$(e.currentTarget).hasClass('disabled') && api.page() != e.data.action ) {\n\t\t\t\tapi.page( e.data.action ).draw( 'page' );\n\t\t\t}\n\t\t};\n\n\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tbutton = buttons[i];\n\n\t\t\tif ( Array.isArray( button ) ) {\n\t\t\t\tattach( container, button );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbtnDisplay = '';\n\t\t\t\tbtnClass = '';\n\n\t\t\t\tswitch ( button ) {\n\t\t\t\t\tcase 'ellipsis':\n\t\t\t\t\t\tbtnDisplay = '&#x2026;';\n\t\t\t\t\t\tbtnClass = 'disabled';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'first':\n\t\t\t\t\t\tbtnDisplay = lang.sFirst;\n\t\t\t\t\t\tbtnClass = button + (page > 0 ?\n\t\t\t\t\t\t\t'' : ' disabled');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'previous':\n\t\t\t\t\t\tbtnDisplay = lang.sPrevious;\n\t\t\t\t\t\tbtnClass = button + (page > 0 ?\n\t\t\t\t\t\t\t'' : ' disabled');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'next':\n\t\t\t\t\t\tbtnDisplay = lang.sNext;\n\t\t\t\t\t\tbtnClass = button + (page < pages-1 ?\n\t\t\t\t\t\t\t'' : ' disabled');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'last':\n\t\t\t\t\t\tbtnDisplay = lang.sLast;\n\t\t\t\t\t\tbtnClass = button + (page < pages-1 ?\n\t\t\t\t\t\t\t'' : ' disabled');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbtnDisplay = button + 1;\n\t\t\t\t\t\tbtnClass = page === button ?\n\t\t\t\t\t\t\t'active' : '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif ( btnDisplay ) {\n\t\t\t\t\tvar disabled = btnClass.indexOf('disabled') !== -1;\n\n\t\t\t\t\tnode = $('<li>', {\n\t\t\t\t\t\t\t'class': classes.sPageButton+' '+btnClass,\n\t\t\t\t\t\t\t'id': idx === 0 && typeof button === 'string' ?\n\t\t\t\t\t\t\t\tsettings.sTableId +'_'+ button :\n\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.append( $('<a>', {\n\t\t\t\t\t\t\t\t'href': disabled ? null : '#',\n\t\t\t\t\t\t\t\t'aria-controls': settings.sTableId,\n\t\t\t\t\t\t\t\t'aria-disabled': disabled ? 'true' : null,\n\t\t\t\t\t\t\t\t'aria-label': aria[ button ],\n\t\t\t\t\t\t\t\t'aria-role': 'link',\n\t\t\t\t\t\t\t\t'aria-current': btnClass === 'active' ? 'page' : null,\n\t\t\t\t\t\t\t\t'data-dt-idx': button,\n\t\t\t\t\t\t\t\t'tabindex': settings.iTabIndex,\n\t\t\t\t\t\t\t\t'class': 'page-link'\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t.html( btnDisplay )\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.appendTo( container );\n\n\t\t\t\t\tsettings.oApi._fnBindAction(\n\t\t\t\t\t\tnode, {action: button}, clickHandler\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tvar hostEl = $(host);\n\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t// inside an iframe or frame. \n\tvar activeEl;\n\n\ttry {\n\t\t// Because this approach is destroying and recreating the paging\n\t\t// elements, focus is lost on the select button which is bad for\n\t\t// accessibility. So we want to restore focus once the draw has\n\t\t// completed\n\t\tactiveEl = hostEl.find(document.activeElement).data('dt-idx');\n\t}\n\tcatch (e) {}\n\n\tvar paginationEl = hostEl.children('ul.pagination');\n\n\tif (paginationEl.length) {\n\t\tpaginationEl.empty();\n\t}\n\telse {\n\t\tpaginationEl = hostEl.html('<ul/>').children('ul').addClass('pagination');\n\t}\n\n\tattach(\n\t\tpaginationEl,\n\t\tbuttons\n\t);\n\n\tif ( activeEl !== undefined ) {\n\t\thostEl.find('[data-dt-idx='+activeEl+']').trigger('focus');\n\t}\n};\n\n\nexport default DataTable;\n","/*! Bootstrap 5 integration for DataTables' Responsive\n * © SpryMedia Ltd - datatables.net/license\n */\n\nimport $ from 'jquery';\nimport DataTable from 'datatables.net-bs5';\nimport Responsive from 'datatables.net-responsive';\n\n\nvar _display = DataTable.Responsive.display;\nvar _original = _display.modal;\nvar _modal = $(\n\t'<div class=\"modal fade dtr-bs-modal\" role=\"dialog\">'+\n\t\t'<div class=\"modal-dialog\" role=\"document\">'+\n\t\t\t'<div class=\"modal-content\">'+\n\t\t\t\t'<div class=\"modal-header\">'+\n\t\t\t\t\t'<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>'+\n\t\t\t\t'</div>'+\n\t\t\t\t'<div class=\"modal-body\"/>'+\n\t\t\t'</div>'+\n\t\t'</div>'+\n\t'</div>'\n);\nvar modal;\n\n// Note this could be undefined at the time of initialisation - the\n// DataTable.Responsive.bootstrap function can be used to set a different\n// bootstrap object\nvar _bs = window.bootstrap;\n\nDataTable.Responsive.bootstrap = function (bs) {\n\t_bs = bs;\n}\n\n_display.modal = function ( options ) {\n\tif (! modal) {\n\t\tmodal = new _bs.Modal(_modal[0]);\n\t}\n\n\treturn function ( row, update, render ) {\n\t\tif ( ! $.fn.modal ) {\n\t\t\t_original( row, update, render );\n\t\t}\n\t\telse {\n\t\t\tif ( ! update ) {\n\t\t\t\tif ( options && options.header ) {\n\t\t\t\t\tvar header = _modal.find('div.modal-header');\n\t\t\t\t\tvar button = header.find('button').detach();\n\t\t\t\t\t\n\t\t\t\t\theader\n\t\t\t\t\t\t.empty()\n\t\t\t\t\t\t.append( '<h4 class=\"modal-title\">'+options.header( row )+'</h4>' )\n\t\t\t\t\t\t.append( button );\n\t\t\t\t}\n\n\t\t\t\t_modal.find( 'div.modal-body' )\n\t\t\t\t\t.empty()\n\t\t\t\t\t.append( render() );\n\n\t\t\t\t_modal\n\t\t\t\t\t.appendTo( 'body' )\n\t\t\t\t\t.modal();\n\n\t\t\t\tmodal.show();\n\t\t\t}\n\t\t}\n\t};\n};\n\n\nexport default DataTable;\n","import { render } from \"./Table.vue?vue&type=template&id=461f1a24&lang=true\"\nimport script from \"./Table.vue?vue&type=script&lang=js\"\nexport * from \"./Table.vue?vue&type=script&lang=js\"\n\nimport \"./Table.vue?vue&type=style&index=0&id=461f1a24&lang=css\"\n\nimport exportComponent from \"/Applications/NODE JS POS/vue/kantorpos/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./ExampleForm.vue?vue&type=template&id=6abcb0ff\"\nimport script from \"./ExampleForm.vue?vue&type=script&lang=js\"\nexport * from \"./ExampleForm.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Applications/NODE JS POS/vue/kantorpos/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/*! DataTables 1.13.4\n * ©2008-2023 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     DataTables\n * @description Paginate, search and order HTML tables\n * @version     1.13.4\n * @author      SpryMedia Ltd\n * @contact     www.datatables.net\n * @copyright   SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n\n/*jslint evil: true, undef: true, browser: true */\n/*globals $,require,jQuery,define,_selector_run,_selector_opts,_selector_first,_selector_row_indexes,_ext,_Api,_api_register,_api_registerPlural,_re_new_lines,_re_html,_re_formatted_numeric,_re_escape_regex,_empty,_intVal,_numToDecimal,_isNumber,_isHtml,_htmlNumeric,_pluck,_pluck_order,_range,_stripHtml,_unique,_fnBuildAjax,_fnAjaxUpdate,_fnAjaxParameters,_fnAjaxUpdateDraw,_fnAjaxDataSrc,_fnAddColumn,_fnColumnOptions,_fnAdjustColumnSizing,_fnVisibleToColumnIndex,_fnColumnIndexToVisible,_fnVisbleColumns,_fnGetColumns,_fnColumnTypes,_fnApplyColumnDefs,_fnHungarianMap,_fnCamelToHungarian,_fnLanguageCompat,_fnBrowserDetect,_fnAddData,_fnAddTr,_fnNodeToDataIndex,_fnNodeToColumnIndex,_fnGetCellData,_fnSetCellData,_fnSplitObjNotation,_fnGetObjectDataFn,_fnSetObjectDataFn,_fnGetDataMaster,_fnClearTable,_fnDeleteIndex,_fnInvalidate,_fnGetRowElements,_fnCreateTr,_fnBuildHead,_fnDrawHead,_fnDraw,_fnReDraw,_fnAddOptionsHtml,_fnDetectHeader,_fnGetUniqueThs,_fnFeatureHtmlFilter,_fnFilterComplete,_fnFilterCustom,_fnFilterColumn,_fnFilter,_fnFilterCreateSearch,_fnEscapeRegex,_fnFilterData,_fnFeatureHtmlInfo,_fnUpdateInfo,_fnInfoMacros,_fnInitialise,_fnInitComplete,_fnLengthChange,_fnFeatureHtmlLength,_fnFeatureHtmlPaginate,_fnPageChange,_fnFeatureHtmlProcessing,_fnProcessingDisplay,_fnFeatureHtmlTable,_fnScrollDraw,_fnApplyToChildren,_fnCalculateColumnWidths,_fnThrottle,_fnConvertToWidth,_fnGetWidestNode,_fnGetMaxLenString,_fnStringToCss,_fnSortFlatten,_fnSort,_fnSortAria,_fnSortListener,_fnSortAttachListener,_fnSortingClasses,_fnSortData,_fnSaveState,_fnLoadState,_fnSettingsFromNode,_fnLog,_fnMap,_fnBindAction,_fnCallbackReg,_fnCallbackFire,_fnLengthOverflow,_fnRenderer,_fnDataSource,_fnRowAttributes*/\n\n(function( factory ) {\n\t\"use strict\";\n\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\t// jQuery's factory checks for a global window - if it isn't present then it\n\t\t// returns a factory function that expects the window object\n\t\tvar jq = require('jquery');\n\n\t\tif (typeof window !== 'undefined') {\n\t\t\tmodule.exports = function (root, $) {\n\t\t\t\tif ( ! root ) {\n\t\t\t\t\t// CommonJS environments without a window global must pass a\n\t\t\t\t\t// root. This will give an error otherwise\n\t\t\t\t\troot = window;\n\t\t\t\t}\n\n\t\t\t\tif ( ! $ ) {\n\t\t\t\t\t$ = jq( root );\n\t\t\t\t}\n\n\t\t\t\treturn factory( $, root, root.document );\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\treturn factory( jq, window, window.document );\n\t\t}\n\t}\n\telse {\n\t\t// Browser\n\t\twindow.DataTable = factory( jQuery, window, document );\n\t}\n}\n(function( $, window, document, undefined ) {\n\t\"use strict\";\n\n\t\n\tvar DataTable = function ( selector, options )\n\t{\n\t\t// Check if called with a window or jQuery object for DOM less applications\n\t\t// This is for backwards compatibility\n\t\tif (DataTable.factory(selector, options)) {\n\t\t\treturn DataTable;\n\t\t}\n\t\n\t\t// When creating with `new`, create a new DataTable, returning the API instance\n\t\tif (this instanceof DataTable) {\n\t\t\treturn $(selector).DataTable(options);\n\t\t}\n\t\telse {\n\t\t\t// Argument switching\n\t\t\toptions = selector;\n\t\t}\n\t\n\t\t/**\n\t\t * Perform a jQuery selector action on the table's TR elements (from the tbody) and\n\t\t * return the resulting jQuery object.\n\t\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t\t *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter\n\t\t *    criterion (\"applied\") or all TR elements (i.e. no filter).\n\t\t *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.\n\t\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t\t *    'original' whereby the original order the data was read into the table is used.\n\t\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t\t *  @returns {object} jQuery object, filtered by the given selector.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Highlight every second row\n\t\t *      oTable.$('tr:odd').css('backgroundColor', 'blue');\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Filter to rows with 'Webkit' in them, add a background colour and then\n\t\t *      // remove the filter, thus highlighting the 'Webkit' rows only.\n\t\t *      oTable.fnFilter('Webkit');\n\t\t *      oTable.$('tr', {\"search\": \"applied\"}).css('backgroundColor', 'blue');\n\t\t *      oTable.fnFilter('');\n\t\t *    } );\n\t\t */\n\t\tthis.$ = function ( sSelector, oOpts )\n\t\t{\n\t\t\treturn this.api(true).$( sSelector, oOpts );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Almost identical to $ in operation, but in this case returns the data for the matched\n\t\t * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes\n\t\t * rather than any descendants, so the data can be obtained for the row/cell. If matching\n\t\t * rows are found, the data returned is the original data array/object that was used to\n\t\t * create the row (or a generated array if from a DOM source).\n\t\t *\n\t\t * This method is often useful in-combination with $ where both functions are given the\n\t\t * same parameters and the array indexes will match identically.\n\t\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t\t *  @param {string} [oOpts.filter=none] Select elements that meet the current filter\n\t\t *    criterion (\"applied\") or all elements (i.e. no filter).\n\t\t *  @param {string} [oOpts.order=current] Order of the data in the processed array.\n\t\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t\t *    'original' whereby the original order the data was read into the table is used.\n\t\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t\t *  @returns {array} Data for the matched elements. If any elements, as a result of the\n\t\t *    selector, were not TR, TD or TH elements in the DataTable, they will have a null\n\t\t *    entry in the array.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Get the data from the first row in the table\n\t\t *      var data = oTable._('tr:first');\n\t\t *\n\t\t *      // Do something useful with the data\n\t\t *      alert( \"First cell is: \"+data[0] );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Filter to 'Webkit' and get all data for\n\t\t *      oTable.fnFilter('Webkit');\n\t\t *      var data = oTable._('tr', {\"search\": \"applied\"});\n\t\t *\n\t\t *      // Do something with the data\n\t\t *      alert( data.length+\" rows matched the search\" );\n\t\t *    } );\n\t\t */\n\t\tthis._ = function ( sSelector, oOpts )\n\t\t{\n\t\t\treturn this.api(true).rows( sSelector, oOpts ).data();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Create a DataTables Api instance, with the currently selected tables for\n\t\t * the Api's context.\n\t\t * @param {boolean} [traditional=false] Set the API instance's context to be\n\t\t *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was\n\t\t *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),\n\t\t *   or if all tables captured in the jQuery object should be used.\n\t\t * @return {DataTables.Api}\n\t\t */\n\t\tthis.api = function ( traditional )\n\t\t{\n\t\t\treturn traditional ?\n\t\t\t\tnew _Api(\n\t\t\t\t\t_fnSettingsFromNode( this[ _ext.iApiIndex ] )\n\t\t\t\t) :\n\t\t\t\tnew _Api( this );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Add a single new row or multiple rows of data to the table. Please note\n\t\t * that this is suitable for client-side processing only - if you are using\n\t\t * server-side processing (i.e. \"bServerSide\": true), then to add data, you\n\t\t * must add it to the data source, i.e. the server-side, through an Ajax call.\n\t\t *  @param {array|object} data The data to be added to the table. This can be:\n\t\t *    <ul>\n\t\t *      <li>1D array of data - add a single row with the data provided</li>\n\t\t *      <li>2D array of arrays - add multiple rows in a single call</li>\n\t\t *      <li>object - data object when using <i>mData</i></li>\n\t\t *      <li>array of objects - multiple data objects when using <i>mData</i></li>\n\t\t *    </ul>\n\t\t *  @param {bool} [redraw=true] redraw the table or not\n\t\t *  @returns {array} An array of integers, representing the list of indexes in\n\t\t *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to\n\t\t *    the table.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    // Global var for counter\n\t\t *    var giCount = 2;\n\t\t *\n\t\t *    $(document).ready(function() {\n\t\t *      $('#example').dataTable();\n\t\t *    } );\n\t\t *\n\t\t *    function fnClickAddRow() {\n\t\t *      $('#example').dataTable().fnAddData( [\n\t\t *        giCount+\".1\",\n\t\t *        giCount+\".2\",\n\t\t *        giCount+\".3\",\n\t\t *        giCount+\".4\" ]\n\t\t *      );\n\t\t *\n\t\t *      giCount++;\n\t\t *    }\n\t\t */\n\t\tthis.fnAddData = function( data, redraw )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\t/* Check if we want to add multiple rows or not */\n\t\t\tvar rows = Array.isArray(data) && ( Array.isArray(data[0]) || $.isPlainObject(data[0]) ) ?\n\t\t\t\tapi.rows.add( data ) :\n\t\t\t\tapi.row.add( data );\n\t\t\n\t\t\tif ( redraw === undefined || redraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t\n\t\t\treturn rows.flatten().toArray();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * This function will make DataTables recalculate the column sizes, based on the data\n\t\t * contained in the table and the sizes applied to the columns (in the DOM, CSS or\n\t\t * through the sWidth parameter). This can be useful when the width of the table's\n\t\t * parent element changes (for example a window resize).\n\t\t *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable( {\n\t\t *        \"sScrollY\": \"200px\",\n\t\t *        \"bPaginate\": false\n\t\t *      } );\n\t\t *\n\t\t *      $(window).on('resize', function () {\n\t\t *        oTable.fnAdjustColumnSizing();\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\tthis.fnAdjustColumnSizing = function ( bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).columns.adjust();\n\t\t\tvar settings = api.settings()[0];\n\t\t\tvar scroll = settings.oScroll;\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw( false );\n\t\t\t}\n\t\t\telse if ( scroll.sX !== \"\" || scroll.sY !== \"\" ) {\n\t\t\t\t/* If not redrawing, but scrolling, we want to apply the new column sizes anyway */\n\t\t\t\t_fnScrollDraw( settings );\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Quickly and simply clear a table\n\t\t *  @param {bool} [bRedraw=true] redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)\n\t\t *      oTable.fnClearTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnClearTable = function( bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).clear();\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * The exact opposite of 'opening' a row, this function will close any rows which\n\t\t * are currently 'open'.\n\t\t *  @param {node} nTr the table row to 'close'\n\t\t *  @returns {int} 0 on success, or 1 if failed (can't find the row)\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnClose = function( nTr )\n\t\t{\n\t\t\tthis.api( true ).row( nTr ).child.hide();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Remove a row for the table\n\t\t *  @param {mixed} target The index of the row from aoData to be deleted, or\n\t\t *    the TR element you want to delete\n\t\t *  @param {function|null} [callBack] Callback function\n\t\t *  @param {bool} [redraw=true] Redraw the table or not\n\t\t *  @returns {array} The row that was deleted\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Immediately remove the first row\n\t\t *      oTable.fnDeleteRow( 0 );\n\t\t *    } );\n\t\t */\n\t\tthis.fnDeleteRow = function( target, callback, redraw )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\tvar rows = api.rows( target );\n\t\t\tvar settings = rows.settings()[0];\n\t\t\tvar data = settings.aoData[ rows[0][0] ];\n\t\t\n\t\t\trows.remove();\n\t\t\n\t\t\tif ( callback ) {\n\t\t\t\tcallback.call( this, settings, data );\n\t\t\t}\n\t\t\n\t\t\tif ( redraw === undefined || redraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t\n\t\t\treturn data;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Restore the table to it's original state in the DOM by removing all of DataTables\n\t\t * enhancements, alterations to the DOM structure of the table and event listeners.\n\t\t *  @param {boolean} [remove=false] Completely remove the table from the DOM\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      // This example is fairly pointless in reality, but shows how fnDestroy can be used\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnDestroy();\n\t\t *    } );\n\t\t */\n\t\tthis.fnDestroy = function ( remove )\n\t\t{\n\t\t\tthis.api( true ).destroy( remove );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Redraw the table\n\t\t *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)\n\t\t *      oTable.fnDraw();\n\t\t *    } );\n\t\t */\n\t\tthis.fnDraw = function( complete )\n\t\t{\n\t\t\t// Note that this isn't an exact match to the old call to _fnDraw - it takes\n\t\t\t// into account the new data, but can hold position.\n\t\t\tthis.api( true ).draw( complete );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Filter the input based on data\n\t\t *  @param {string} sInput String to filter the table on\n\t\t *  @param {int|null} [iColumn] Column to limit filtering to\n\t\t *  @param {bool} [bRegex=false] Treat as regular expression or not\n\t\t *  @param {bool} [bSmart=true] Perform smart filtering or not\n\t\t *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)\n\t\t *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sometime later - filter...\n\t\t *      oTable.fnFilter( 'test string' );\n\t\t *    } );\n\t\t */\n\t\tthis.fnFilter = function( sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\tif ( iColumn === null || iColumn === undefined ) {\n\t\t\t\tapi.search( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tapi.column( iColumn ).search( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\t\t}\n\t\t\n\t\t\tapi.draw();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the data for the whole table, an individual row or an individual cell based on the\n\t\t * provided parameters.\n\t\t *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as\n\t\t *    a TR node then the data source for the whole row will be returned. If given as a\n\t\t *    TD/TH cell node then iCol will be automatically calculated and the data for the\n\t\t *    cell returned. If given as an integer, then this is treated as the aoData internal\n\t\t *    data index for the row (see fnGetPosition) and the data for that row used.\n\t\t *  @param {int} [col] Optional column index that you want the data of.\n\t\t *  @returns {array|object|string} If mRow is undefined, then the data for all rows is\n\t\t *    returned. If mRow is defined, just data for that row, and is iCol is\n\t\t *    defined, only data for the designated cell is returned.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    // Row data\n\t\t *    $(document).ready(function() {\n\t\t *      oTable = $('#example').dataTable();\n\t\t *\n\t\t *      oTable.$('tr').click( function () {\n\t\t *        var data = oTable.fnGetData( this );\n\t\t *        // ... do something with the array / object of data for the row\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Individual cell data\n\t\t *    $(document).ready(function() {\n\t\t *      oTable = $('#example').dataTable();\n\t\t *\n\t\t *      oTable.$('td').click( function () {\n\t\t *        var sData = oTable.fnGetData( this );\n\t\t *        alert( 'The cell clicked on had the value of '+sData );\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetData = function( src, col )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\tif ( src !== undefined ) {\n\t\t\t\tvar type = src.nodeName ? src.nodeName.toLowerCase() : '';\n\t\t\n\t\t\t\treturn col !== undefined || type == 'td' || type == 'th' ?\n\t\t\t\t\tapi.cell( src, col ).data() :\n\t\t\t\t\tapi.row( src ).data() || null;\n\t\t\t}\n\t\t\n\t\t\treturn api.data().toArray();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get an array of the TR nodes that are used in the table's body. Note that you will\n\t\t * typically want to use the '$' API method in preference to this as it is more\n\t\t * flexible.\n\t\t *  @param {int} [iRow] Optional row index for the TR element you want\n\t\t *  @returns {array|node} If iRow is undefined, returns an array of all TR elements\n\t\t *    in the table's body, or iRow is defined, just the TR element requested.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Get the nodes from the table\n\t\t *      var nNodes = oTable.fnGetNodes( );\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetNodes = function( iRow )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\treturn iRow !== undefined ?\n\t\t\t\tapi.row( iRow ).node() :\n\t\t\t\tapi.rows().nodes().flatten().toArray();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the array indexes of a particular cell from it's DOM element\n\t\t * and column index including hidden columns\n\t\t *  @param {node} node this can either be a TR, TD or TH in the table's body\n\t\t *  @returns {int} If nNode is given as a TR, then a single index is returned, or\n\t\t *    if given as a cell, an array of [row index, column index (visible),\n\t\t *    column index (all)] is given.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      $('#example tbody td').click( function () {\n\t\t *        // Get the position of the current data from the node\n\t\t *        var aPos = oTable.fnGetPosition( this );\n\t\t *\n\t\t *        // Get the data array for this row\n\t\t *        var aData = oTable.fnGetData( aPos[0] );\n\t\t *\n\t\t *        // Update the data array and return the value\n\t\t *        aData[ aPos[1] ] = 'clicked';\n\t\t *        this.innerHTML = 'clicked';\n\t\t *      } );\n\t\t *\n\t\t *      // Init DataTables\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetPosition = function( node )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\tvar nodeName = node.nodeName.toUpperCase();\n\t\t\n\t\t\tif ( nodeName == 'TR' ) {\n\t\t\t\treturn api.row( node ).index();\n\t\t\t}\n\t\t\telse if ( nodeName == 'TD' || nodeName == 'TH' ) {\n\t\t\t\tvar cell = api.cell( node ).index();\n\t\t\n\t\t\t\treturn [\n\t\t\t\t\tcell.row,\n\t\t\t\t\tcell.columnVisible,\n\t\t\t\t\tcell.column\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Check to see if a row is 'open' or not.\n\t\t *  @param {node} nTr the table row to check\n\t\t *  @returns {boolean} true if the row is currently open, false otherwise\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnIsOpen = function( nTr )\n\t\t{\n\t\t\treturn this.api( true ).row( nTr ).child.isShown();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * This function will place a new row directly after a row which is currently\n\t\t * on display on the page, with the HTML contents that is passed into the\n\t\t * function. This can be used, for example, to ask for confirmation that a\n\t\t * particular record should be deleted.\n\t\t *  @param {node} nTr The table row to 'open'\n\t\t *  @param {string|node|jQuery} mHtml The HTML to put into the row\n\t\t *  @param {string} sClass Class to give the new TD cell\n\t\t *  @returns {node} The row opened. Note that if the table row passed in as the\n\t\t *    first parameter, is not found in the table, this method will silently\n\t\t *    return.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnOpen = function( nTr, mHtml, sClass )\n\t\t{\n\t\t\treturn this.api( true )\n\t\t\t\t.row( nTr )\n\t\t\t\t.child( mHtml, sClass )\n\t\t\t\t.show()\n\t\t\t\t.child()[0];\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Change the pagination - provides the internal logic for pagination in a simple API\n\t\t * function. With this function you can have a DataTables table go to the next,\n\t\t * previous, first or last pages.\n\t\t *  @param {string|int} mAction Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\n\t\t *    or page number to jump to (integer), note that page 0 is the first page.\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnPageChange( 'next' );\n\t\t *    } );\n\t\t */\n\t\tthis.fnPageChange = function ( mAction, bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).page( mAction );\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw(false);\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Show a particular column\n\t\t *  @param {int} iCol The column whose display should be changed\n\t\t *  @param {bool} bShow Show (true) or hide (false) the column\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Hide the second column after initialisation\n\t\t *      oTable.fnSetColumnVis( 1, false );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSetColumnVis = function ( iCol, bShow, bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).column( iCol ).visible( bShow );\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.columns.adjust().draw();\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the settings for a particular table for external manipulation\n\t\t *  @returns {object} DataTables settings object. See\n\t\t *    {@link DataTable.models.oSettings}\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      var oSettings = oTable.fnSettings();\n\t\t *\n\t\t *      // Show an example parameter from the settings\n\t\t *      alert( oSettings._iDisplayStart );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSettings = function()\n\t\t{\n\t\t\treturn _fnSettingsFromNode( this[_ext.iApiIndex] );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Sort the table by a particular column\n\t\t *  @param {int} iCol the data index to sort on. Note that this will not match the\n\t\t *    'display index' if you have hidden data entries\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sort immediately with columns 0 and 1\n\t\t *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSort = function( aaSort )\n\t\t{\n\t\t\tthis.api( true ).order( aaSort ).draw();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Attach a sort listener to an element for a given column\n\t\t *  @param {node} nNode the element to attach the sort listener to\n\t\t *  @param {int} iColumn the column that a click on this node will sort on\n\t\t *  @param {function} [fnCallback] callback function when sort is run\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sort on column 1, when 'sorter' is clicked on\n\t\t *      oTable.fnSortListener( document.getElementById('sorter'), 1 );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSortListener = function( nNode, iColumn, fnCallback )\n\t\t{\n\t\t\tthis.api( true ).order.listener( nNode, iColumn, fnCallback );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Update a table cell or row - this method will accept either a single value to\n\t\t * update the cell with, an array of values with one element for each column or\n\t\t * an object in the same format as the original data source. The function is\n\t\t * self-referencing in order to make the multi column updates easier.\n\t\t *  @param {object|array|string} mData Data to update the cell/row with\n\t\t *  @param {node|int} mRow TR element you want to update or the aoData index\n\t\t *  @param {int} [iColumn] The column to update, give as null or undefined to\n\t\t *    update a whole row.\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @param {bool} [bAction=true] Perform pre-draw actions or not\n\t\t *  @returns {int} 0 on success, 1 on error\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell\n\t\t *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row\n\t\t *    } );\n\t\t */\n\t\tthis.fnUpdate = function( mData, mRow, iColumn, bRedraw, bAction )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\tif ( iColumn === undefined || iColumn === null ) {\n\t\t\t\tapi.row( mRow ).data( mData );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tapi.cell( mRow, iColumn ).data( mData );\n\t\t\t}\n\t\t\n\t\t\tif ( bAction === undefined || bAction ) {\n\t\t\t\tapi.columns.adjust();\n\t\t\t}\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t\treturn 0;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Provide a common method for plug-ins to check the version of DataTables being used, in order\n\t\t * to ensure compatibility.\n\t\t *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note that the\n\t\t *    formats \"X\" and \"X.Y\" are also acceptable.\n\t\t *  @returns {boolean} true if this version of DataTables is greater or equal to the required\n\t\t *    version, or false if this version of DataTales is not suitable\n\t\t *  @method\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      alert( oTable.fnVersionCheck( '1.9.0' ) );\n\t\t *    } );\n\t\t */\n\t\tthis.fnVersionCheck = _ext.fnVersionCheck;\n\t\t\n\t\n\t\tvar _that = this;\n\t\tvar emptyInit = options === undefined;\n\t\tvar len = this.length;\n\t\n\t\tif ( emptyInit ) {\n\t\t\toptions = {};\n\t\t}\n\t\n\t\tthis.oApi = this.internal = _ext.internal;\n\t\n\t\t// Extend with old style plug-in API methods\n\t\tfor ( var fn in DataTable.ext.internal ) {\n\t\t\tif ( fn ) {\n\t\t\t\tthis[fn] = _fnExternApiFunc(fn);\n\t\t\t}\n\t\t}\n\t\n\t\tthis.each(function() {\n\t\t\t// For each initialisation we want to give it a clean initialisation\n\t\t\t// object that can be bashed around\n\t\t\tvar o = {};\n\t\t\tvar oInit = len > 1 ? // optimisation for single table case\n\t\t\t\t_fnExtend( o, options, true ) :\n\t\t\t\toptions;\n\t\n\t\t\t/*global oInit,_that,emptyInit*/\n\t\t\tvar i=0, iLen, j, jLen, k, kLen;\n\t\t\tvar sId = this.getAttribute( 'id' );\n\t\t\tvar bInitHandedOff = false;\n\t\t\tvar defaults = DataTable.defaults;\n\t\t\tvar $this = $(this);\n\t\t\t\n\t\t\t\n\t\t\t/* Sanity check */\n\t\t\tif ( this.nodeName.toLowerCase() != 'table' )\n\t\t\t{\n\t\t\t\t_fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t/* Backwards compatibility for the defaults */\n\t\t\t_fnCompatOpts( defaults );\n\t\t\t_fnCompatCols( defaults.column );\n\t\t\t\n\t\t\t/* Convert the camel-case defaults to Hungarian */\n\t\t\t_fnCamelToHungarian( defaults, defaults, true );\n\t\t\t_fnCamelToHungarian( defaults.column, defaults.column, true );\n\t\t\t\n\t\t\t/* Setting up the initialisation object */\n\t\t\t_fnCamelToHungarian( defaults, $.extend( oInit, $this.data() ), true );\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t/* Check to see if we are re-initialising a table */\n\t\t\tvar allSettings = DataTable.settings;\n\t\t\tfor ( i=0, iLen=allSettings.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tvar s = allSettings[i];\n\t\t\t\n\t\t\t\t/* Base check on table node */\n\t\t\t\tif (\n\t\t\t\t\ts.nTable == this ||\n\t\t\t\t\t(s.nTHead && s.nTHead.parentNode == this) ||\n\t\t\t\t\t(s.nTFoot && s.nTFoot.parentNode == this)\n\t\t\t\t) {\n\t\t\t\t\tvar bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n\t\t\t\t\tvar bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n\t\t\t\n\t\t\t\t\tif ( emptyInit || bRetrieve )\n\t\t\t\t\t{\n\t\t\t\t\t\treturn s.oInstance;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( bDestroy )\n\t\t\t\t\t{\n\t\t\t\t\t\ts.oInstance.fnDestroy();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t_fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* If the element we are initialising has the same ID as a table which was previously\n\t\t\t\t * initialised, but the table nodes don't match (from before) then we destroy the old\n\t\t\t\t * instance by simply deleting it. This is under the assumption that the table has been\n\t\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n\t\t\t\t */\n\t\t\t\tif ( s.sTableId == this.id )\n\t\t\t\t{\n\t\t\t\t\tallSettings.splice( i, 1 );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Ensure the table has an ID - required for accessibility */\n\t\t\tif ( sId === null || sId === \"\" )\n\t\t\t{\n\t\t\t\tsId = \"DataTables_Table_\"+(DataTable.ext._unique++);\n\t\t\t\tthis.id = sId;\n\t\t\t}\n\t\t\t\n\t\t\t/* Create the settings object for this table and set some of the default parameters */\n\t\t\tvar oSettings = $.extend( true, {}, DataTable.models.oSettings, {\n\t\t\t\t\"sDestroyWidth\": $this[0].style.width,\n\t\t\t\t\"sInstance\":     sId,\n\t\t\t\t\"sTableId\":      sId\n\t\t\t} );\n\t\t\toSettings.nTable = this;\n\t\t\toSettings.oApi   = _that.internal;\n\t\t\toSettings.oInit  = oInit;\n\t\t\t\n\t\t\tallSettings.push( oSettings );\n\t\t\t\n\t\t\t// Need to add the instance after the instance after the settings object has been added\n\t\t\t// to the settings array, so we can self reference the table instance if more than one\n\t\t\toSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();\n\t\t\t\n\t\t\t// Backwards compatibility, before we apply all the defaults\n\t\t\t_fnCompatOpts( oInit );\n\t\t\t_fnLanguageCompat( oInit.oLanguage );\n\t\t\t\n\t\t\t// If the length menu is given, but the init display length is not, use the length menu\n\t\t\tif ( oInit.aLengthMenu && ! oInit.iDisplayLength )\n\t\t\t{\n\t\t\t\toInit.iDisplayLength = Array.isArray( oInit.aLengthMenu[0] ) ?\n\t\t\t\t\toInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];\n\t\t\t}\n\t\t\t\n\t\t\t// Apply the defaults and init options to make a single init object will all\n\t\t\t// options defined from defaults and instance options.\n\t\t\toInit = _fnExtend( $.extend( true, {}, defaults ), oInit );\n\t\t\t\n\t\t\t\n\t\t\t// Map the initialisation options onto the settings object\n\t\t\t_fnMap( oSettings.oFeatures, oInit, [\n\t\t\t\t\"bPaginate\",\n\t\t\t\t\"bLengthChange\",\n\t\t\t\t\"bFilter\",\n\t\t\t\t\"bSort\",\n\t\t\t\t\"bSortMulti\",\n\t\t\t\t\"bInfo\",\n\t\t\t\t\"bProcessing\",\n\t\t\t\t\"bAutoWidth\",\n\t\t\t\t\"bSortClasses\",\n\t\t\t\t\"bServerSide\",\n\t\t\t\t\"bDeferRender\"\n\t\t\t] );\n\t\t\t_fnMap( oSettings, oInit, [\n\t\t\t\t\"asStripeClasses\",\n\t\t\t\t\"ajax\",\n\t\t\t\t\"fnServerData\",\n\t\t\t\t\"fnFormatNumber\",\n\t\t\t\t\"sServerMethod\",\n\t\t\t\t\"aaSorting\",\n\t\t\t\t\"aaSortingFixed\",\n\t\t\t\t\"aLengthMenu\",\n\t\t\t\t\"sPaginationType\",\n\t\t\t\t\"sAjaxSource\",\n\t\t\t\t\"sAjaxDataProp\",\n\t\t\t\t\"iStateDuration\",\n\t\t\t\t\"sDom\",\n\t\t\t\t\"bSortCellsTop\",\n\t\t\t\t\"iTabIndex\",\n\t\t\t\t\"fnStateLoadCallback\",\n\t\t\t\t\"fnStateSaveCallback\",\n\t\t\t\t\"renderer\",\n\t\t\t\t\"searchDelay\",\n\t\t\t\t\"rowId\",\n\t\t\t\t[ \"iCookieDuration\", \"iStateDuration\" ], // backwards compat\n\t\t\t\t[ \"oSearch\", \"oPreviousSearch\" ],\n\t\t\t\t[ \"aoSearchCols\", \"aoPreSearchCols\" ],\n\t\t\t\t[ \"iDisplayLength\", \"_iDisplayLength\" ]\n\t\t\t] );\n\t\t\t_fnMap( oSettings.oScroll, oInit, [\n\t\t\t\t[ \"sScrollX\", \"sX\" ],\n\t\t\t\t[ \"sScrollXInner\", \"sXInner\" ],\n\t\t\t\t[ \"sScrollY\", \"sY\" ],\n\t\t\t\t[ \"bScrollCollapse\", \"bCollapse\" ]\n\t\t\t] );\n\t\t\t_fnMap( oSettings.oLanguage, oInit, \"fnInfoCallback\" );\n\t\t\t\n\t\t\t/* Callback functions which are array driven */\n\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoServerParams',       oInit.fnServerParams,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams,   'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams,   'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded,       'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback,       'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow,        'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback,    'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback,    'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback,   'user' );\n\t\t\t\n\t\t\toSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );\n\t\t\t\n\t\t\t/* Browser support detection */\n\t\t\t_fnBrowserDetect( oSettings );\n\t\t\t\n\t\t\tvar oClasses = oSettings.oClasses;\n\t\t\t\n\t\t\t$.extend( oClasses, DataTable.ext.classes, oInit.oClasses );\n\t\t\t$this.addClass( oClasses.sTable );\n\t\t\t\n\t\t\t\n\t\t\tif ( oSettings.iInitDisplayStart === undefined )\n\t\t\t{\n\t\t\t\t/* Display start point, taking into account the save saving */\n\t\t\t\toSettings.iInitDisplayStart = oInit.iDisplayStart;\n\t\t\t\toSettings._iDisplayStart = oInit.iDisplayStart;\n\t\t\t}\n\t\t\t\n\t\t\tif ( oInit.iDeferLoading !== null )\n\t\t\t{\n\t\t\t\toSettings.bDeferLoading = true;\n\t\t\t\tvar tmp = Array.isArray( oInit.iDeferLoading );\n\t\t\t\toSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;\n\t\t\t\toSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;\n\t\t\t}\n\t\t\t\n\t\t\t/* Language definitions */\n\t\t\tvar oLanguage = oSettings.oLanguage;\n\t\t\t$.extend( true, oLanguage, oInit.oLanguage );\n\t\t\t\n\t\t\tif ( oLanguage.sUrl )\n\t\t\t{\n\t\t\t\t/* Get the language definitions from a file - because this Ajax call makes the language\n\t\t\t\t * get async to the remainder of this function we use bInitHandedOff to indicate that\n\t\t\t\t * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\n\t\t\t\t */\n\t\t\t\t$.ajax( {\n\t\t\t\t\tdataType: 'json',\n\t\t\t\t\turl: oLanguage.sUrl,\n\t\t\t\t\tsuccess: function ( json ) {\n\t\t\t\t\t\t_fnCamelToHungarian( defaults.oLanguage, json );\n\t\t\t\t\t\t_fnLanguageCompat( json );\n\t\t\t\t\t\t$.extend( true, oLanguage, json, oSettings.oInit.oLanguage );\n\t\t\t\n\t\t\t\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings]);\n\t\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t\t},\n\t\t\t\t\terror: function () {\n\t\t\t\t\t\t// Error occurred loading language file, continue on as best we can\n\t\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\tbInitHandedOff = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings]);\n\t\t\t}\n\t\t\t\n\t\t\t/*\n\t\t\t * Stripes\n\t\t\t */\n\t\t\tif ( oInit.asStripeClasses === null )\n\t\t\t{\n\t\t\t\toSettings.asStripeClasses =[\n\t\t\t\t\toClasses.sStripeOdd,\n\t\t\t\t\toClasses.sStripeEven\n\t\t\t\t];\n\t\t\t}\n\t\t\t\n\t\t\t/* Remove row stripe classes if they are already on the table row */\n\t\t\tvar stripeClasses = oSettings.asStripeClasses;\n\t\t\tvar rowOne = $this.children('tbody').find('tr').eq(0);\n\t\t\tif ( $.inArray( true, $.map( stripeClasses, function(el, i) {\n\t\t\t\treturn rowOne.hasClass(el);\n\t\t\t} ) ) !== -1 ) {\n\t\t\t\t$('tbody tr', this).removeClass( stripeClasses.join(' ') );\n\t\t\t\toSettings.asDestroyStripes = stripeClasses.slice();\n\t\t\t}\n\t\t\t\n\t\t\t/*\n\t\t\t * Columns\n\t\t\t * See if we should load columns automatically or use defined ones\n\t\t\t */\n\t\t\tvar anThs = [];\n\t\t\tvar aoColumnsInit;\n\t\t\tvar nThead = this.getElementsByTagName('thead');\n\t\t\tif ( nThead.length !== 0 )\n\t\t\t{\n\t\t\t\t_fnDetectHeader( oSettings.aoHeader, nThead[0] );\n\t\t\t\tanThs = _fnGetUniqueThs( oSettings );\n\t\t\t}\n\t\t\t\n\t\t\t/* If not given a column array, generate one with nulls */\n\t\t\tif ( oInit.aoColumns === null )\n\t\t\t{\n\t\t\t\taoColumnsInit = [];\n\t\t\t\tfor ( i=0, iLen=anThs.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\taoColumnsInit.push( null );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\taoColumnsInit = oInit.aoColumns;\n\t\t\t}\n\t\t\t\n\t\t\t/* Add the columns */\n\t\t\tfor ( i=0, iLen=aoColumnsInit.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\t_fnAddColumn( oSettings, anThs ? anThs[i] : null );\n\t\t\t}\n\t\t\t\n\t\t\t/* Apply the column definitions */\n\t\t\t_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {\n\t\t\t\t_fnColumnOptions( oSettings, iCol, oDef );\n\t\t\t} );\n\t\t\t\n\t\t\t/* HTML5 attribute detection - build an mData object automatically if the\n\t\t\t * attributes are found\n\t\t\t */\n\t\t\tif ( rowOne.length ) {\n\t\t\t\tvar a = function ( cell, name ) {\n\t\t\t\t\treturn cell.getAttribute( 'data-'+name ) !== null ? name : null;\n\t\t\t\t};\n\t\t\t\n\t\t\t\t$( rowOne[0] ).children('th, td').each( function (i, cell) {\n\t\t\t\t\tvar col = oSettings.aoColumns[i];\n\t\t\t\n\t\t\t\t\tif (! col) {\n\t\t\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\n\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\tif ( col.mData === i ) {\n\t\t\t\t\t\tvar sort = a( cell, 'sort' ) || a( cell, 'order' );\n\t\t\t\t\t\tvar filter = a( cell, 'filter' ) || a( cell, 'search' );\n\t\t\t\n\t\t\t\t\t\tif ( sort !== null || filter !== null ) {\n\t\t\t\t\t\t\tcol.mData = {\n\t\t\t\t\t\t\t\t_:      i+'.display',\n\t\t\t\t\t\t\t\tsort:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\t\ttype:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\t\tfilter: filter !== null ? i+'.@data-'+filter : undefined\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcol._isArrayHost = true;\n\t\t\t\n\t\t\t\t\t\t\t_fnColumnOptions( oSettings, i );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\t\n\t\t\tvar features = oSettings.oFeatures;\n\t\t\tvar loadedInit = function () {\n\t\t\t\t/*\n\t\t\t\t * Sorting\n\t\t\t\t * @todo For modularisation (1.11) this needs to do into a sort start up handler\n\t\t\t\t */\n\t\t\t\n\t\t\t\t// If aaSorting is not defined, then we use the first indicator in asSorting\n\t\t\t\t// in case that has been altered, so the default sort reflects that option\n\t\t\t\tif ( oInit.aaSorting === undefined ) {\n\t\t\t\t\tvar sorting = oSettings.aaSorting;\n\t\t\t\t\tfor ( i=0, iLen=sorting.length ; i<iLen ; i++ ) {\n\t\t\t\t\t\tsorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* Do a first pass on the sorting classes (allows any size changes to be taken into\n\t\t\t\t * account, and also will apply sorting disabled classes if disabled\n\t\t\t\t */\n\t\t\t\t_fnSortingClasses( oSettings );\n\t\t\t\n\t\t\t\tif ( features.bSort ) {\n\t\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\t\t\t\tif ( oSettings.bSorted ) {\n\t\t\t\t\t\t\tvar aSort = _fnSortFlatten( oSettings );\n\t\t\t\t\t\t\tvar sortedColumns = {};\n\t\t\t\n\t\t\t\t\t\t\t$.each( aSort, function (i, val) {\n\t\t\t\t\t\t\t\tsortedColumns[ val.src ] = val.dir;\n\t\t\t\t\t\t\t} );\n\t\t\t\n\t\t\t\t\t\t\t_fnCallbackFire( oSettings, null, 'order', [oSettings, aSort, sortedColumns] );\n\t\t\t\t\t\t\t_fnSortAria( oSettings );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\n\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\t\t\tif ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {\n\t\t\t\t\t\t_fnSortingClasses( oSettings );\n\t\t\t\t\t}\n\t\t\t\t}, 'sc' );\n\t\t\t\n\t\t\t\n\t\t\t\t/*\n\t\t\t\t * Final init\n\t\t\t\t * Cache the header, body and footer as required, creating them if needed\n\t\t\t\t */\n\t\t\t\n\t\t\t\t// Work around for Webkit bug 83867 - store the caption-side before removing from doc\n\t\t\t\tvar captions = $this.children('caption').each( function () {\n\t\t\t\t\tthis._captionSide = $(this).css('caption-side');\n\t\t\t\t} );\n\t\t\t\n\t\t\t\tvar thead = $this.children('thead');\n\t\t\t\tif ( thead.length === 0 ) {\n\t\t\t\t\tthead = $('<thead/>').appendTo($this);\n\t\t\t\t}\n\t\t\t\toSettings.nTHead = thead[0];\n\t\t\t\n\t\t\t\tvar tbody = $this.children('tbody');\n\t\t\t\tif ( tbody.length === 0 ) {\n\t\t\t\t\ttbody = $('<tbody/>').insertAfter(thead);\n\t\t\t\t}\n\t\t\t\toSettings.nTBody = tbody[0];\n\t\t\t\n\t\t\t\tvar tfoot = $this.children('tfoot');\n\t\t\t\tif ( tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\") ) {\n\t\t\t\t\t// If we are a scrolling table, and no footer has been given, then we need to create\n\t\t\t\t\t// a tfoot element for the caption element to be appended to\n\t\t\t\t\ttfoot = $('<tfoot/>').appendTo($this);\n\t\t\t\t}\n\t\t\t\n\t\t\t\tif ( tfoot.length === 0 || tfoot.children().length === 0 ) {\n\t\t\t\t\t$this.addClass( oClasses.sNoFooter );\n\t\t\t\t}\n\t\t\t\telse if ( tfoot.length > 0 ) {\n\t\t\t\t\toSettings.nTFoot = tfoot[0];\n\t\t\t\t\t_fnDetectHeader( oSettings.aoFooter, oSettings.nTFoot );\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* Check if there is data passing into the constructor */\n\t\t\t\tif ( oInit.aaData ) {\n\t\t\t\t\tfor ( i=0 ; i<oInit.aaData.length ; i++ ) {\n\t\t\t\t\t\t_fnAddData( oSettings, oInit.aaData[ i ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( oSettings.bDeferLoading || _fnDataSource( oSettings ) == 'dom' ) {\n\t\t\t\t\t/* Grab the data from the page - only do this when deferred loading or no Ajax\n\t\t\t\t\t * source since there is no point in reading the DOM data if we are then going\n\t\t\t\t\t * to replace it with Ajax data\n\t\t\t\t\t */\n\t\t\t\t\t_fnAddTr( oSettings, $(oSettings.nTBody).children('tr') );\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* Copy the data index array */\n\t\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\t\n\t\t\t\t/* Initialisation complete - table can be drawn */\n\t\t\t\toSettings.bInitialised = true;\n\t\t\t\n\t\t\t\t/* Check if we need to initialise the table (it might not have been handed off to the\n\t\t\t\t * language processor)\n\t\t\t\t */\n\t\t\t\tif ( bInitHandedOff === false ) {\n\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\t/* Must be done after everything which can be overridden by the state saving! */\n\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState, 'state_save' );\n\t\t\t\n\t\t\tif ( oInit.bStateSave )\n\t\t\t{\n\t\t\t\tfeatures.bStateSave = true;\n\t\t\t\t_fnLoadState( oSettings, oInit, loadedInit );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tloadedInit();\n\t\t\t}\n\t\t\t\n\t\t} );\n\t\t_that = null;\n\t\treturn this;\n\t};\n\t\n\t\n\t/*\n\t * It is useful to have variables which are scoped locally so only the\n\t * DataTables functions can access them and they don't leak into global space.\n\t * At the same time these functions are often useful over multiple files in the\n\t * core and API, so we list, or at least document, all variables which are used\n\t * by DataTables as private variables here. This also ensures that there is no\n\t * clashing of variable names and that they can easily referenced for reuse.\n\t */\n\t\n\t\n\t// Defined else where\n\t//  _selector_run\n\t//  _selector_opts\n\t//  _selector_first\n\t//  _selector_row_indexes\n\t\n\tvar _ext; // DataTable.ext\n\tvar _Api; // DataTable.Api\n\tvar _api_register; // DataTable.Api.register\n\tvar _api_registerPlural; // DataTable.Api.registerPlural\n\t\n\tvar _re_dic = {};\n\tvar _re_new_lines = /[\\r\\n\\u2028]/g;\n\tvar _re_html = /<.*?>/g;\n\t\n\t// This is not strict ISO8601 - Date.parse() is quite lax, although\n\t// implementations differ between browsers.\n\tvar _re_date = /^\\d{2,4}[\\.\\/\\-]\\d{1,2}[\\.\\/\\-]\\d{1,2}([T ]{1}\\d{1,2}[:\\.]\\d{2}([\\.:]\\d{2})?)?$/;\n\t\n\t// Escape regular expression special characters\n\tvar _re_escape_regex = new RegExp( '(\\\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-' ].join('|\\\\') + ')', 'g' );\n\t\n\t// http://en.wikipedia.org/wiki/Foreign_exchange_market\n\t// - \\u20BD - Russian ruble.\n\t// - \\u20a9 - South Korean Won\n\t// - \\u20BA - Turkish Lira\n\t// - \\u20B9 - Indian Rupee\n\t// - R - Brazil (R$) and South Africa\n\t// - fr - Swiss Franc\n\t// - kr - Swedish krona, Norwegian krone and Danish krone\n\t// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n\t// - Ƀ - Bitcoin\n\t// - Ξ - Ethereum\n\t//   standards as thousands separators.\n\tvar _re_formatted_numeric = /['\\u00A0,$£€¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfkɃΞ]/gi;\n\t\n\t\n\tvar _empty = function ( d ) {\n\t\treturn !d || d === true || d === '-' ? true : false;\n\t};\n\t\n\t\n\tvar _intVal = function ( s ) {\n\t\tvar integer = parseInt( s, 10 );\n\t\treturn !isNaN(integer) && isFinite(s) ? integer : null;\n\t};\n\t\n\t// Convert from a formatted number with characters other than `.` as the\n\t// decimal place, to a Javascript number\n\tvar _numToDecimal = function ( num, decimalPoint ) {\n\t\t// Cache created regular expressions for speed as this function is called often\n\t\tif ( ! _re_dic[ decimalPoint ] ) {\n\t\t\t_re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );\n\t\t}\n\t\treturn typeof num === 'string' && decimalPoint !== '.' ?\n\t\t\tnum.replace( /\\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :\n\t\t\tnum;\n\t};\n\t\n\t\n\tvar _isNumber = function ( d, decimalPoint, formatted ) {\n\t\tlet type = typeof d;\n\t\tvar strType = type === 'string';\n\t\n\t\tif ( type === 'number' || type === 'bigint') {\n\t\t\treturn true;\n\t\t}\n\t\n\t\t// If empty return immediately so there must be a number if it is a\n\t\t// formatted string (this stops the string \"k\", or \"kr\", etc being detected\n\t\t// as a formatted number for currency\n\t\tif ( _empty( d ) ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tif ( decimalPoint && strType ) {\n\t\t\td = _numToDecimal( d, decimalPoint );\n\t\t}\n\t\n\t\tif ( formatted && strType ) {\n\t\t\td = d.replace( _re_formatted_numeric, '' );\n\t\t}\n\t\n\t\treturn !isNaN( parseFloat(d) ) && isFinite( d );\n\t};\n\t\n\t\n\t// A string without HTML in it can be considered to be HTML still\n\tvar _isHtml = function ( d ) {\n\t\treturn _empty( d ) || typeof d === 'string';\n\t};\n\t\n\t\n\tvar _htmlNumeric = function ( d, decimalPoint, formatted ) {\n\t\tif ( _empty( d ) ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tvar html = _isHtml( d );\n\t\treturn ! html ?\n\t\t\tnull :\n\t\t\t_isNumber( _stripHtml( d ), decimalPoint, formatted ) ?\n\t\t\t\ttrue :\n\t\t\t\tnull;\n\t};\n\t\n\t\n\tvar _pluck = function ( a, prop, prop2 ) {\n\t\tvar out = [];\n\t\tvar i=0, ien=a.length;\n\t\n\t\t// Could have the test in the loop for slightly smaller code, but speed\n\t\t// is essential here\n\t\tif ( prop2 !== undefined ) {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[i] && a[i][ prop ] ) {\n\t\t\t\t\tout.push( a[i][ prop ][ prop2 ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[i] ) {\n\t\t\t\t\tout.push( a[i][ prop ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\t// Basically the same as _pluck, but rather than looping over `a` we use `order`\n\t// as the indexes to pick from `a`\n\tvar _pluck_order = function ( a, order, prop, prop2 )\n\t{\n\t\tvar out = [];\n\t\tvar i=0, ien=order.length;\n\t\n\t\t// Could have the test in the loop for slightly smaller code, but speed\n\t\t// is essential here\n\t\tif ( prop2 !== undefined ) {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[ order[i] ][ prop ] ) {\n\t\t\t\t\tout.push( a[ order[i] ][ prop ][ prop2 ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tout.push( a[ order[i] ][ prop ] );\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\tvar _range = function ( len, start )\n\t{\n\t\tvar out = [];\n\t\tvar end;\n\t\n\t\tif ( start === undefined ) {\n\t\t\tstart = 0;\n\t\t\tend = len;\n\t\t}\n\t\telse {\n\t\t\tend = start;\n\t\t\tstart = len;\n\t\t}\n\t\n\t\tfor ( var i=start ; i<end ; i++ ) {\n\t\t\tout.push( i );\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\tvar _removeEmpty = function ( a )\n\t{\n\t\tvar out = [];\n\t\n\t\tfor ( var i=0, ien=a.length ; i<ien ; i++ ) {\n\t\t\tif ( a[i] ) { // careful - will remove all falsy values!\n\t\t\t\tout.push( a[i] );\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\tvar _stripHtml = function ( d ) {\n\t\treturn d.replace( _re_html, '' );\n\t};\n\t\n\t\n\t/**\n\t * Determine if all values in the array are unique. This means we can short\n\t * cut the _unique method at the cost of a single loop. A sorted array is used\n\t * to easily check the values.\n\t *\n\t * @param  {array} src Source array\n\t * @return {boolean} true if all unique, false otherwise\n\t * @ignore\n\t */\n\tvar _areAllUnique = function ( src ) {\n\t\tif ( src.length < 2 ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tvar sorted = src.slice().sort();\n\t\tvar last = sorted[0];\n\t\n\t\tfor ( var i=1, ien=sorted.length ; i<ien ; i++ ) {\n\t\t\tif ( sorted[i] === last ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tlast = sorted[i];\n\t\t}\n\t\n\t\treturn true;\n\t};\n\t\n\t\n\t/**\n\t * Find the unique elements in a source array.\n\t *\n\t * @param  {array} src Source array\n\t * @return {array} Array of unique items\n\t * @ignore\n\t */\n\tvar _unique = function ( src )\n\t{\n\t\tif ( _areAllUnique( src ) ) {\n\t\t\treturn src.slice();\n\t\t}\n\t\n\t\t// A faster unique method is to use object keys to identify used values,\n\t\t// but this doesn't work with arrays or objects, which we must also\n\t\t// consider. See jsperf.com/compare-array-unique-versions/4 for more\n\t\t// information.\n\t\tvar\n\t\t\tout = [],\n\t\t\tval,\n\t\t\ti, ien=src.length,\n\t\t\tj, k=0;\n\t\n\t\tagain: for ( i=0 ; i<ien ; i++ ) {\n\t\t\tval = src[i];\n\t\n\t\t\tfor ( j=0 ; j<k ; j++ ) {\n\t\t\t\tif ( out[j] === val ) {\n\t\t\t\t\tcontinue again;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tout.push( val );\n\t\t\tk++;\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t// Surprisingly this is faster than [].concat.apply\n\t// https://jsperf.com/flatten-an-array-loop-vs-reduce/2\n\tvar _flatten = function (out, val) {\n\t\tif (Array.isArray(val)) {\n\t\t\tfor (var i=0 ; i<val.length ; i++) {\n\t\t\t\t_flatten(out, val[i]);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tout.push(val);\n\t\t}\n\t  \n\t\treturn out;\n\t}\n\t\n\tvar _includes = function (search, start) {\n\t\tif (start === undefined) {\n\t\t\tstart = 0;\n\t\t}\n\t\n\t\treturn this.indexOf(search, start) !== -1;\t\n\t};\n\t\n\t// Array.isArray polyfill.\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\n\tif (! Array.isArray) {\n\t    Array.isArray = function(arg) {\n\t        return Object.prototype.toString.call(arg) === '[object Array]';\n\t    };\n\t}\n\t\n\tif (! Array.prototype.includes) {\n\t\tArray.prototype.includes = _includes;\n\t}\n\t\n\t// .trim() polyfill\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trim\n\tif (!String.prototype.trim) {\n\t  String.prototype.trim = function () {\n\t    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\t  };\n\t}\n\t\n\tif (! String.prototype.includes) {\n\t\tString.prototype.includes = _includes;\n\t}\n\t\n\t/**\n\t * DataTables utility methods\n\t * \n\t * This namespace provides helper methods that DataTables uses internally to\n\t * create a DataTable, but which are not exclusively used only for DataTables.\n\t * These methods can be used by extension authors to save the duplication of\n\t * code.\n\t *\n\t *  @namespace\n\t */\n\tDataTable.util = {\n\t\t/**\n\t\t * Throttle the calls to a function. Arguments and context are maintained\n\t\t * for the throttled function.\n\t\t *\n\t\t * @param {function} fn Function to be called\n\t\t * @param {integer} freq Call frequency in mS\n\t\t * @return {function} Wrapped function\n\t\t */\n\t\tthrottle: function ( fn, freq ) {\n\t\t\tvar\n\t\t\t\tfrequency = freq !== undefined ? freq : 200,\n\t\t\t\tlast,\n\t\t\t\ttimer;\n\t\n\t\t\treturn function () {\n\t\t\t\tvar\n\t\t\t\t\tthat = this,\n\t\t\t\t\tnow  = +new Date(),\n\t\t\t\t\targs = arguments;\n\t\n\t\t\t\tif ( last && now < last + frequency ) {\n\t\t\t\t\tclearTimeout( timer );\n\t\n\t\t\t\t\ttimer = setTimeout( function () {\n\t\t\t\t\t\tlast = undefined;\n\t\t\t\t\t\tfn.apply( that, args );\n\t\t\t\t\t}, frequency );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlast = now;\n\t\t\t\t\tfn.apply( that, args );\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Escape a string such that it can be used in a regular expression\n\t\t *\n\t\t *  @param {string} val string to escape\n\t\t *  @returns {string} escaped string\n\t\t */\n\t\tescapeRegex: function ( val ) {\n\t\t\treturn val.replace( _re_escape_regex, '\\\\$1' );\n\t\t},\n\t\n\t\t/**\n\t\t * Create a function that will write to a nested object or array\n\t\t * @param {*} source JSON notation string\n\t\t * @returns Write function\n\t\t */\n\t\tset: function ( source ) {\n\t\t\tif ( $.isPlainObject( source ) ) {\n\t\t\t\t/* Unlike get, only the underscore (global) option is used for for\n\t\t\t\t * setting data since we don't know the type here. This is why an object\n\t\t\t\t * option is not documented for `mData` (which is read/write), but it is\n\t\t\t\t * for `mRender` which is read only.\n\t\t\t\t */\n\t\t\t\treturn DataTable.util.set( source._ );\n\t\t\t}\n\t\t\telse if ( source === null ) {\n\t\t\t\t// Nothing to do when the data source is null\n\t\t\t\treturn function () {};\n\t\t\t}\n\t\t\telse if ( typeof source === 'function' ) {\n\t\t\t\treturn function (data, val, meta) {\n\t\t\t\t\tsource( data, 'set', val, meta );\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if ( typeof source === 'string' && (source.indexOf('.') !== -1 ||\n\t\t\t\t\t  source.indexOf('[') !== -1 || source.indexOf('(') !== -1) )\n\t\t\t{\n\t\t\t\t// Like the get, we need to get data from a nested object\n\t\t\t\tvar setData = function (data, val, src) {\n\t\t\t\t\tvar a = _fnSplitObjNotation( src ), b;\n\t\t\t\t\tvar aLast = a[a.length-1];\n\t\t\t\t\tvar arrayNotation, funcNotation, o, innerSrc;\n\t\t\n\t\t\t\t\tfor ( var i=0, iLen=a.length-1 ; i<iLen ; i++ ) {\n\t\t\t\t\t\t// Protect against prototype pollution\n\t\t\t\t\t\tif (a[i] === '__proto__' || a[i] === 'constructor') {\n\t\t\t\t\t\t\tthrow new Error('Cannot set prototype values');\n\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t// Check if we are dealing with an array notation request\n\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\t\n\t\t\t\t\t\tif ( arrayNotation ) {\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\t\t\t\t\t\tdata[ a[i] ] = [];\n\t\t\n\t\t\t\t\t\t\t// Get the remainder of the nested object to set so we can recurse\n\t\t\t\t\t\t\tb = a.slice();\n\t\t\t\t\t\t\tb.splice( 0, i+1 );\n\t\t\t\t\t\t\tinnerSrc = b.join('.');\n\t\t\n\t\t\t\t\t\t\t// Traverse each entry in the array setting the properties requested\n\t\t\t\t\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\t\t\t\t\tfor ( var j=0, jLen=val.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\t\to = {};\n\t\t\t\t\t\t\t\t\tsetData( o, val[j], innerSrc );\n\t\t\t\t\t\t\t\t\tdata[ a[i] ].push( o );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// We've been asked to save data to an array, but it\n\t\t\t\t\t\t\t\t// isn't array data to be saved. Best that can be done\n\t\t\t\t\t\t\t\t// is to just save the value.\n\t\t\t\t\t\t\t\tdata[ a[i] ] = val;\n\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\t// The inner call to setData has already traversed through the remainder\n\t\t\t\t\t\t\t// of the source and has set the data, thus we can exit here\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( funcNotation ) {\n\t\t\t\t\t\t\t// Function call\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\t\tdata = data[ a[i] ]( val );\n\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t// If the nested object doesn't currently exist - since we are\n\t\t\t\t\t\t// trying to set the value - create it\n\t\t\t\t\t\tif ( data[ a[i] ] === null || data[ a[i] ] === undefined ) {\n\t\t\t\t\t\t\tdata[ a[i] ] = {};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\t// Last item in the input - i.e, the actual set\n\t\t\t\t\tif ( aLast.match(__reFn ) ) {\n\t\t\t\t\t\t// Function call\n\t\t\t\t\t\tdata = data[ aLast.replace(__reFn, '') ]( val );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// If array notation is used, we just want to strip it and use the property name\n\t\t\t\t\t\t// and assign the value. If it isn't used, then we get the result we want anyway\n\t\t\t\t\t\tdata[ aLast.replace(__reArray, '') ] = val;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\n\t\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\t\treturn setData( data, val, source );\n\t\t\t\t};\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Array or flat object mapping\n\t\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\t\tdata[source] = val;\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Create a function that will read nested objects from arrays, based on JSON notation\n\t\t * @param {*} source JSON notation string\n\t\t * @returns Value read\n\t\t */\n\t\tget: function ( source ) {\n\t\t\tif ( $.isPlainObject( source ) ) {\n\t\t\t\t// Build an object of get functions, and wrap them in a single call\n\t\t\t\tvar o = {};\n\t\t\t\t$.each( source, function (key, val) {\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\to[key] = DataTable.util.get( val );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\n\t\t\t\treturn function (data, type, row, meta) {\n\t\t\t\t\tvar t = o[type] || o._;\n\t\t\t\t\treturn t !== undefined ?\n\t\t\t\t\t\tt(data, type, row, meta) :\n\t\t\t\t\t\tdata;\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if ( source === null ) {\n\t\t\t\t// Give an empty string for rendering / sorting etc\n\t\t\t\treturn function (data) { // type, row and meta also passed, but not used\n\t\t\t\t\treturn data;\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if ( typeof source === 'function' ) {\n\t\t\t\treturn function (data, type, row, meta) {\n\t\t\t\t\treturn source( data, type, row, meta );\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if ( typeof source === 'string' && (source.indexOf('.') !== -1 ||\n\t\t\t\t\t  source.indexOf('[') !== -1 || source.indexOf('(') !== -1) )\n\t\t\t{\n\t\t\t\t/* If there is a . in the source string then the data source is in a\n\t\t\t\t * nested object so we loop over the data for each level to get the next\n\t\t\t\t * level down. On each loop we test for undefined, and if found immediately\n\t\t\t\t * return. This allows entire objects to be missing and sDefaultContent to\n\t\t\t\t * be used if defined, rather than throwing an error\n\t\t\t\t */\n\t\t\t\tvar fetchData = function (data, type, src) {\n\t\t\t\t\tvar arrayNotation, funcNotation, out, innerSrc;\n\t\t\n\t\t\t\t\tif ( src !== \"\" ) {\n\t\t\t\t\t\tvar a = _fnSplitObjNotation( src );\n\t\t\n\t\t\t\t\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ ) {\n\t\t\t\t\t\t\t// Check if we are dealing with special notation\n\t\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\t\n\t\t\t\t\t\t\tif ( arrayNotation ) {\n\t\t\t\t\t\t\t\t// Array notation\n\t\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\t\n\t\t\t\t\t\t\t\t// Condition allows simply [] to be passed in\n\t\t\t\t\t\t\t\tif ( a[i] !== \"\" ) {\n\t\t\t\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tout = [];\n\t\t\n\t\t\t\t\t\t\t\t// Get the remainder of the nested object to get\n\t\t\t\t\t\t\t\ta.splice( 0, i+1 );\n\t\t\t\t\t\t\t\tinnerSrc = a.join('.');\n\t\t\n\t\t\t\t\t\t\t\t// Traverse each entry in the array getting the properties requested\n\t\t\t\t\t\t\t\tif ( Array.isArray( data ) ) {\n\t\t\t\t\t\t\t\t\tfor ( var j=0, jLen=data.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\t\t\tout.push( fetchData( data[j], type, innerSrc ) );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\t\t// If a string is given in between the array notation indicators, that\n\t\t\t\t\t\t\t\t// is used to join the strings together, otherwise an array is returned\n\t\t\t\t\t\t\t\tvar join = arrayNotation[0].substring(1, arrayNotation[0].length-1);\n\t\t\t\t\t\t\t\tdata = (join===\"\") ? out : out.join(join);\n\t\t\n\t\t\t\t\t\t\t\t// The inner call to fetchData has already traversed through the remainder\n\t\t\t\t\t\t\t\t// of the source requested, so we exit from the loop\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ( funcNotation ) {\n\t\t\t\t\t\t\t\t// Function call\n\t\t\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\t\t\tdata = data[ a[i] ]();\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\tif ( data === null || data[ a[i] ] === undefined ) {\n\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\treturn data;\n\t\t\t\t};\n\t\t\n\t\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\t\treturn fetchData( data, type, source );\n\t\t\t\t};\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Array or flat object mapping\n\t\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\t\treturn data[source];\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t};\n\t\n\t\n\t\n\t/**\n\t * Create a mapping object that allows camel case parameters to be looked up\n\t * for their Hungarian counterparts. The mapping is stored in a private\n\t * parameter called `_hungarianMap` which can be accessed on the source object.\n\t *  @param {object} o\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnHungarianMap ( o )\n\t{\n\t\tvar\n\t\t\thungarian = 'a aa ai ao as b fn i m o s ',\n\t\t\tmatch,\n\t\t\tnewKey,\n\t\t\tmap = {};\n\t\n\t\t$.each( o, function (key, val) {\n\t\t\tmatch = key.match(/^([^A-Z]+?)([A-Z])/);\n\t\n\t\t\tif ( match && hungarian.indexOf(match[1]+' ') !== -1 )\n\t\t\t{\n\t\t\t\tnewKey = key.replace( match[0], match[2].toLowerCase() );\n\t\t\t\tmap[ newKey ] = key;\n\t\n\t\t\t\tif ( match[1] === 'o' )\n\t\t\t\t{\n\t\t\t\t\t_fnHungarianMap( o[key] );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t\n\t\to._hungarianMap = map;\n\t}\n\t\n\t\n\t/**\n\t * Convert from camel case parameters to Hungarian, based on a Hungarian map\n\t * created by _fnHungarianMap.\n\t *  @param {object} src The model object which holds all parameters that can be\n\t *    mapped.\n\t *  @param {object} user The object to convert from camel case to Hungarian.\n\t *  @param {boolean} force When set to `true`, properties which already have a\n\t *    Hungarian value in the `user` object will be overwritten. Otherwise they\n\t *    won't be.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCamelToHungarian ( src, user, force )\n\t{\n\t\tif ( ! src._hungarianMap ) {\n\t\t\t_fnHungarianMap( src );\n\t\t}\n\t\n\t\tvar hungarianKey;\n\t\n\t\t$.each( user, function (key, val) {\n\t\t\thungarianKey = src._hungarianMap[ key ];\n\t\n\t\t\tif ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )\n\t\t\t{\n\t\t\t\t// For objects, we need to buzz down into the object to copy parameters\n\t\t\t\tif ( hungarianKey.charAt(0) === 'o' )\n\t\t\t\t{\n\t\t\t\t\t// Copy the camelCase options over to the hungarian\n\t\t\t\t\tif ( ! user[ hungarianKey ] ) {\n\t\t\t\t\t\tuser[ hungarianKey ] = {};\n\t\t\t\t\t}\n\t\t\t\t\t$.extend( true, user[hungarianKey], user[key] );\n\t\n\t\t\t\t\t_fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tuser[hungarianKey] = user[ key ];\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Language compatibility - when certain options are given, and others aren't, we\n\t * need to duplicate the values over, in order to provide backwards compatibility\n\t * with older language files.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLanguageCompat( lang )\n\t{\n\t\t// Note the use of the Hungarian notation for the parameters in this method as\n\t\t// this is called after the mapping of camelCase to Hungarian\n\t\tvar defaults = DataTable.defaults.oLanguage;\n\t\n\t\t// Default mapping\n\t\tvar defaultDecimal = defaults.sDecimal;\n\t\tif ( defaultDecimal ) {\n\t\t\t_addNumericSort( defaultDecimal );\n\t\t}\n\t\n\t\tif ( lang ) {\n\t\t\tvar zeroRecords = lang.sZeroRecords;\n\t\n\t\t\t// Backwards compatibility - if there is no sEmptyTable given, then use the same as\n\t\t\t// sZeroRecords - assuming that is given.\n\t\t\tif ( ! lang.sEmptyTable && zeroRecords &&\n\t\t\t\tdefaults.sEmptyTable === \"No data available in table\" )\n\t\t\t{\n\t\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sEmptyTable' );\n\t\t\t}\n\t\n\t\t\t// Likewise with loading records\n\t\t\tif ( ! lang.sLoadingRecords && zeroRecords &&\n\t\t\t\tdefaults.sLoadingRecords === \"Loading...\" )\n\t\t\t{\n\t\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sLoadingRecords' );\n\t\t\t}\n\t\n\t\t\t// Old parameter name of the thousands separator mapped onto the new\n\t\t\tif ( lang.sInfoThousands ) {\n\t\t\t\tlang.sThousands = lang.sInfoThousands;\n\t\t\t}\n\t\n\t\t\tvar decimal = lang.sDecimal;\n\t\t\tif ( decimal && defaultDecimal !== decimal ) {\n\t\t\t\t_addNumericSort( decimal );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Map one parameter onto another\n\t *  @param {object} o Object to map\n\t *  @param {*} knew The new parameter name\n\t *  @param {*} old The old parameter name\n\t */\n\tvar _fnCompatMap = function ( o, knew, old ) {\n\t\tif ( o[ knew ] !== undefined ) {\n\t\t\to[ old ] = o[ knew ];\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Provide backwards compatibility for the main DT options. Note that the new\n\t * options are mapped onto the old parameters, so this is an external interface\n\t * change only.\n\t *  @param {object} init Object to map\n\t */\n\tfunction _fnCompatOpts ( init )\n\t{\n\t\t_fnCompatMap( init, 'ordering',      'bSort' );\n\t\t_fnCompatMap( init, 'orderMulti',    'bSortMulti' );\n\t\t_fnCompatMap( init, 'orderClasses',  'bSortClasses' );\n\t\t_fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );\n\t\t_fnCompatMap( init, 'order',         'aaSorting' );\n\t\t_fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );\n\t\t_fnCompatMap( init, 'paging',        'bPaginate' );\n\t\t_fnCompatMap( init, 'pagingType',    'sPaginationType' );\n\t\t_fnCompatMap( init, 'pageLength',    'iDisplayLength' );\n\t\t_fnCompatMap( init, 'searching',     'bFilter' );\n\t\n\t\t// Boolean initialisation of x-scrolling\n\t\tif ( typeof init.sScrollX === 'boolean' ) {\n\t\t\tinit.sScrollX = init.sScrollX ? '100%' : '';\n\t\t}\n\t\tif ( typeof init.scrollX === 'boolean' ) {\n\t\t\tinit.scrollX = init.scrollX ? '100%' : '';\n\t\t}\n\t\n\t\t// Column search objects are in an array, so it needs to be converted\n\t\t// element by element\n\t\tvar searchCols = init.aoSearchCols;\n\t\n\t\tif ( searchCols ) {\n\t\t\tfor ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {\n\t\t\t\tif ( searchCols[i] ) {\n\t\t\t\t\t_fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Provide backwards compatibility for column options. Note that the new options\n\t * are mapped onto the old parameters, so this is an external interface change\n\t * only.\n\t *  @param {object} init Object to map\n\t */\n\tfunction _fnCompatCols ( init )\n\t{\n\t\t_fnCompatMap( init, 'orderable',     'bSortable' );\n\t\t_fnCompatMap( init, 'orderData',     'aDataSort' );\n\t\t_fnCompatMap( init, 'orderSequence', 'asSorting' );\n\t\t_fnCompatMap( init, 'orderDataType', 'sortDataType' );\n\t\n\t\t// orderData can be given as an integer\n\t\tvar dataSort = init.aDataSort;\n\t\tif ( typeof dataSort === 'number' && ! Array.isArray( dataSort ) ) {\n\t\t\tinit.aDataSort = [ dataSort ];\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Browser feature detection for capabilities, quirks\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBrowserDetect( settings )\n\t{\n\t\t// We don't need to do this every time DataTables is constructed, the values\n\t\t// calculated are specific to the browser and OS configuration which we\n\t\t// don't expect to change between initialisations\n\t\tif ( ! DataTable.__browser ) {\n\t\t\tvar browser = {};\n\t\t\tDataTable.__browser = browser;\n\t\n\t\t\t// Scrolling feature / quirks detection\n\t\t\tvar n = $('<div/>')\n\t\t\t\t.css( {\n\t\t\t\t\tposition: 'fixed',\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: $(window).scrollLeft()*-1, // allow for scrolling\n\t\t\t\t\theight: 1,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t} )\n\t\t\t\t.append(\n\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\ttop: 1,\n\t\t\t\t\t\t\tleft: 1,\n\t\t\t\t\t\t\twidth: 100,\n\t\t\t\t\t\t\toverflow: 'scroll'\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\theight: 10\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t\t.appendTo( 'body' );\n\t\n\t\t\tvar outer = n.children();\n\t\t\tvar inner = outer.children();\n\t\n\t\t\t// Numbers below, in order, are:\n\t\t\t// inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth\n\t\t\t//\n\t\t\t// IE6 XP:                           100 100 100  83\n\t\t\t// IE7 Vista:                        100 100 100  83\n\t\t\t// IE 8+ Windows:                     83  83 100  83\n\t\t\t// Evergreen Windows:                 83  83 100  83\n\t\t\t// Evergreen Mac with scrollbars:     85  85 100  85\n\t\t\t// Evergreen Mac without scrollbars: 100 100 100 100\n\t\n\t\t\t// Get scrollbar width\n\t\t\tbrowser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\n\t\n\t\t\t// IE6/7 will oversize a width 100% element inside a scrolling element, to\n\t\t\t// include the width of the scrollbar, while other browsers ensure the inner\n\t\t\t// element is contained without forcing scrolling\n\t\t\tbrowser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;\n\t\n\t\t\t// In rtl text layout, some browsers (most, but not all) will place the\n\t\t\t// scrollbar on the left, rather than the right.\n\t\t\tbrowser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;\n\t\n\t\t\t// IE8- don't provide height and width for getBoundingClientRect\n\t\t\tbrowser.bBounding = n[0].getBoundingClientRect().width ? true : false;\n\t\n\t\t\tn.remove();\n\t\t}\n\t\n\t\t$.extend( settings.oBrowser, DataTable.__browser );\n\t\tsettings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n\t}\n\t\n\t\n\t/**\n\t * Array.prototype reduce[Right] method, used for browsers which don't support\n\t * JS 1.6. Done this way to reduce code size, since we iterate either way\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnReduce ( that, fn, init, start, end, inc )\n\t{\n\t\tvar\n\t\t\ti = start,\n\t\t\tvalue,\n\t\t\tisSet = false;\n\t\n\t\tif ( init !== undefined ) {\n\t\t\tvalue = init;\n\t\t\tisSet = true;\n\t\t}\n\t\n\t\twhile ( i !== end ) {\n\t\t\tif ( ! that.hasOwnProperty(i) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\tvalue = isSet ?\n\t\t\t\tfn( value, that[i], i, that ) :\n\t\t\t\tthat[i];\n\t\n\t\t\tisSet = true;\n\t\t\ti += inc;\n\t\t}\n\t\n\t\treturn value;\n\t}\n\t\n\t/**\n\t * Add a column to the list used for the table with default values\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} nTh The th element for this column\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddColumn( oSettings, nTh )\n\t{\n\t\t// Add column to aoColumns array\n\t\tvar oDefaults = DataTable.defaults.column;\n\t\tvar iCol = oSettings.aoColumns.length;\n\t\tvar oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {\n\t\t\t\"nTh\": nTh ? nTh : document.createElement('th'),\n\t\t\t\"sTitle\":    oDefaults.sTitle    ? oDefaults.sTitle    : nTh ? nTh.innerHTML : '',\n\t\t\t\"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n\t\t\t\"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n\t\t\tidx: iCol\n\t\t} );\n\t\toSettings.aoColumns.push( oCol );\n\t\n\t\t// Add search object for column specific search. Note that the `searchCols[ iCol ]`\n\t\t// passed into extend can be undefined. This allows the user to give a default\n\t\t// with only some of the parameters defined, and also not give a default\n\t\tvar searchCols = oSettings.aoPreSearchCols;\n\t\tsearchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );\n\t\n\t\t// Use the default column options function to initialise classes etc\n\t\t_fnColumnOptions( oSettings, iCol, $(nTh).data() );\n\t}\n\t\n\t\n\t/**\n\t * Apply options for a column\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iCol column index to consider\n\t *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnOptions( oSettings, iCol, oOptions )\n\t{\n\t\tvar oCol = oSettings.aoColumns[ iCol ];\n\t\tvar oClasses = oSettings.oClasses;\n\t\tvar th = $(oCol.nTh);\n\t\n\t\t// Try to get width information from the DOM. We can't get it from CSS\n\t\t// as we'd need to parse the CSS stylesheet. `width` option can override\n\t\tif ( ! oCol.sWidthOrig ) {\n\t\t\t// Width attribute\n\t\t\toCol.sWidthOrig = th.attr('width') || null;\n\t\n\t\t\t// Style attribute\n\t\t\tvar t = (th.attr('style') || '').match(/width:\\s*(\\d+[pxem%]+)/);\n\t\t\tif ( t ) {\n\t\t\t\toCol.sWidthOrig = t[1];\n\t\t\t}\n\t\t}\n\t\n\t\t/* User specified column options */\n\t\tif ( oOptions !== undefined && oOptions !== null )\n\t\t{\n\t\t\t// Backwards compatibility\n\t\t\t_fnCompatCols( oOptions );\n\t\n\t\t\t// Map camel case parameters to their Hungarian counterparts\n\t\t\t_fnCamelToHungarian( DataTable.defaults.column, oOptions, true );\n\t\n\t\t\t/* Backwards compatibility for mDataProp */\n\t\t\tif ( oOptions.mDataProp !== undefined && !oOptions.mData )\n\t\t\t{\n\t\t\t\toOptions.mData = oOptions.mDataProp;\n\t\t\t}\n\t\n\t\t\tif ( oOptions.sType )\n\t\t\t{\n\t\t\t\toCol._sManualType = oOptions.sType;\n\t\t\t}\n\t\n\t\t\t// `class` is a reserved word in Javascript, so we need to provide\n\t\t\t// the ability to use a valid name for the camel case input\n\t\t\tif ( oOptions.className && ! oOptions.sClass )\n\t\t\t{\n\t\t\t\toOptions.sClass = oOptions.className;\n\t\t\t}\n\t\t\tif ( oOptions.sClass ) {\n\t\t\t\tth.addClass( oOptions.sClass );\n\t\t\t}\n\t\n\t\t\tvar origClass = oCol.sClass;\n\t\n\t\t\t$.extend( oCol, oOptions );\n\t\t\t_fnMap( oCol, oOptions, \"sWidth\", \"sWidthOrig\" );\n\t\n\t\t\t// Merge class from previously defined classes with this one, rather than just\n\t\t\t// overwriting it in the extend above\n\t\t\tif (origClass !== oCol.sClass) {\n\t\t\t\toCol.sClass = origClass + ' ' + oCol.sClass;\n\t\t\t}\n\t\n\t\t\t/* iDataSort to be applied (backwards compatibility), but aDataSort will take\n\t\t\t * priority if defined\n\t\t\t */\n\t\t\tif ( oOptions.iDataSort !== undefined )\n\t\t\t{\n\t\t\t\toCol.aDataSort = [ oOptions.iDataSort ];\n\t\t\t}\n\t\t\t_fnMap( oCol, oOptions, \"aDataSort\" );\n\t\t}\n\t\n\t\t/* Cache the data get and set functions for speed */\n\t\tvar mDataSrc = oCol.mData;\n\t\tvar mData = _fnGetObjectDataFn( mDataSrc );\n\t\tvar mRender = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;\n\t\n\t\tvar attrTest = function( src ) {\n\t\t\treturn typeof src === 'string' && src.indexOf('@') !== -1;\n\t\t};\n\t\toCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (\n\t\t\tattrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)\n\t\t);\n\t\toCol._setter = null;\n\t\n\t\toCol.fnGetData = function (rowData, type, meta) {\n\t\t\tvar innerData = mData( rowData, type, undefined, meta );\n\t\n\t\t\treturn mRender && type ?\n\t\t\t\tmRender( innerData, type, rowData, meta ) :\n\t\t\t\tinnerData;\n\t\t};\n\t\toCol.fnSetData = function ( rowData, val, meta ) {\n\t\t\treturn _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );\n\t\t};\n\t\n\t\t// Indicate if DataTables should read DOM data as an object or array\n\t\t// Used in _fnGetRowElements\n\t\tif ( typeof mDataSrc !== 'number' && ! oCol._isArrayHost ) {\n\t\t\toSettings._rowReadObject = true;\n\t\t}\n\t\n\t\t/* Feature sorting overrides column specific when off */\n\t\tif ( !oSettings.oFeatures.bSort )\n\t\t{\n\t\t\toCol.bSortable = false;\n\t\t\tth.addClass( oClasses.sSortableNone ); // Have to add class here as order event isn't called\n\t\t}\n\t\n\t\t/* Check that the class assignment is correct for sorting */\n\t\tvar bAsc = $.inArray('asc', oCol.asSorting) !== -1;\n\t\tvar bDesc = $.inArray('desc', oCol.asSorting) !== -1;\n\t\tif ( !oCol.bSortable || (!bAsc && !bDesc) )\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortableNone;\n\t\t\toCol.sSortingClassJUI = \"\";\n\t\t}\n\t\telse if ( bAsc && !bDesc )\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortableAsc;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;\n\t\t}\n\t\telse if ( !bAsc && bDesc )\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortableDesc;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;\n\t\t}\n\t\telse\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortable;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUI;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Adjust the table column widths for new data. Note: you would probably want to\n\t * do a redraw after calling this function!\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAdjustColumnSizing ( settings )\n\t{\n\t\t/* Not interested in doing column width calculation if auto-width is disabled */\n\t\tif ( settings.oFeatures.bAutoWidth !== false )\n\t\t{\n\t\t\tvar columns = settings.aoColumns;\n\t\n\t\t\t_fnCalculateColumnWidths( settings );\n\t\t\tfor ( var i=0 , iLen=columns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tcolumns[i].nTh.style.width = columns[i].sWidth;\n\t\t\t}\n\t\t}\n\t\n\t\tvar scroll = settings.oScroll;\n\t\tif ( scroll.sY !== '' || scroll.sX !== '')\n\t\t{\n\t\t\t_fnScrollDraw( settings );\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'column-sizing', [settings] );\n\t}\n\t\n\t\n\t/**\n\t * Convert the index of a visible column to the index in the data array (take account\n\t * of hidden columns)\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iMatch Visible column index to lookup\n\t *  @returns {int} i the data index\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnVisibleToColumnIndex( oSettings, iMatch )\n\t{\n\t\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\t\n\t\treturn typeof aiVis[iMatch] === 'number' ?\n\t\t\taiVis[iMatch] :\n\t\t\tnull;\n\t}\n\t\n\t\n\t/**\n\t * Convert the index of an index in the data array and convert it to the visible\n\t *   column index (take account of hidden columns)\n\t *  @param {int} iMatch Column index to lookup\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {int} i the data index\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnIndexToVisible( oSettings, iMatch )\n\t{\n\t\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\t\tvar iPos = $.inArray( iMatch, aiVis );\n\t\n\t\treturn iPos !== -1 ? iPos : null;\n\t}\n\t\n\t\n\t/**\n\t * Get the number of visible columns\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {int} i the number of visible columns\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnVisbleColumns( oSettings )\n\t{\n\t\tvar vis = 0;\n\t\n\t\t// No reduce in IE8, use a loop for now\n\t\t$.each( oSettings.aoColumns, function ( i, col ) {\n\t\t\tif ( col.bVisible && $(col.nTh).css('display') !== 'none' ) {\n\t\t\t\tvis++;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn vis;\n\t}\n\t\n\t\n\t/**\n\t * Get an array of column indexes that match a given property\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sParam Parameter in aoColumns to look for - typically\n\t *    bVisible or bSearchable\n\t *  @returns {array} Array of indexes with matched properties\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetColumns( oSettings, sParam )\n\t{\n\t\tvar a = [];\n\t\n\t\t$.map( oSettings.aoColumns, function(val, i) {\n\t\t\tif ( val[sParam] ) {\n\t\t\t\ta.push( i );\n\t\t\t}\n\t\t} );\n\t\n\t\treturn a;\n\t}\n\t\n\t\n\t/**\n\t * Calculate the 'type' of a column\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnTypes ( settings )\n\t{\n\t\tvar columns = settings.aoColumns;\n\t\tvar data = settings.aoData;\n\t\tvar types = DataTable.ext.type.detect;\n\t\tvar i, ien, j, jen, k, ken;\n\t\tvar col, cell, detectedType, cache;\n\t\n\t\t// For each column, spin over the \n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tcol = columns[i];\n\t\t\tcache = [];\n\t\n\t\t\tif ( ! col.sType && col._sManualType ) {\n\t\t\t\tcol.sType = col._sManualType;\n\t\t\t}\n\t\t\telse if ( ! col.sType ) {\n\t\t\t\tfor ( j=0, jen=types.length ; j<jen ; j++ ) {\n\t\t\t\t\tfor ( k=0, ken=data.length ; k<ken ; k++ ) {\n\t\t\t\t\t\t// Use a cache array so we only need to get the type data\n\t\t\t\t\t\t// from the formatter once (when using multiple detectors)\n\t\t\t\t\t\tif ( cache[k] === undefined ) {\n\t\t\t\t\t\t\tcache[k] = _fnGetCellData( settings, k, i, 'type' );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tdetectedType = types[j]( cache[k], settings );\n\t\n\t\t\t\t\t\t// If null, then this type can't apply to this column, so\n\t\t\t\t\t\t// rather than testing all cells, break out. There is an\n\t\t\t\t\t\t// exception for the last type which is `html`. We need to\n\t\t\t\t\t\t// scan all rows since it is possible to mix string and HTML\n\t\t\t\t\t\t// types\n\t\t\t\t\t\tif ( ! detectedType && j !== types.length-1 ) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Only a single match is needed for html type since it is\n\t\t\t\t\t\t// bottom of the pile and very similar to string - but it\n\t\t\t\t\t\t// must not be empty\n\t\t\t\t\t\tif ( detectedType === 'html' && ! _empty(cache[k]) ) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Type is valid for all data points in the column - use this\n\t\t\t\t\t// type\n\t\t\t\t\tif ( detectedType ) {\n\t\t\t\t\t\tcol.sType = detectedType;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Fall back - if no type was detected, always use string\n\t\t\t\tif ( ! col.sType ) {\n\t\t\t\t\tcol.sType = 'string';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Take the column definitions and static columns arrays and calculate how\n\t * they relate to column indexes. The callback function will then apply the\n\t * definition found for a column to a suitable configuration object.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n\t *  @param {array} aoCols The aoColumns array that defines columns individually\n\t *  @param {function} fn Callback function - takes two parameters, the calculated\n\t *    column index and the definition for that column.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, fn )\n\t{\n\t\tvar i, iLen, j, jLen, k, kLen, def;\n\t\tvar columns = oSettings.aoColumns;\n\t\n\t\t// Column definitions with aTargets\n\t\tif ( aoColDefs )\n\t\t{\n\t\t\t/* Loop over the definitions array - loop in reverse so first instance has priority */\n\t\t\tfor ( i=aoColDefs.length-1 ; i>=0 ; i-- )\n\t\t\t{\n\t\t\t\tdef = aoColDefs[i];\n\t\n\t\t\t\t/* Each definition can target multiple columns, as it is an array */\n\t\t\t\tvar aTargets = def.target !== undefined\n\t\t\t\t\t? def.target\n\t\t\t\t\t: def.targets !== undefined\n\t\t\t\t\t\t? def.targets\n\t\t\t\t\t\t: def.aTargets;\n\t\n\t\t\t\tif ( ! Array.isArray( aTargets ) )\n\t\t\t\t{\n\t\t\t\t\taTargets = [ aTargets ];\n\t\t\t\t}\n\t\n\t\t\t\tfor ( j=0, jLen=aTargets.length ; j<jLen ; j++ )\n\t\t\t\t{\n\t\t\t\t\tif ( typeof aTargets[j] === 'number' && aTargets[j] >= 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Add columns that we don't yet know about */\n\t\t\t\t\t\twhile( columns.length <= aTargets[j] )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_fnAddColumn( oSettings );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t/* Integer, basic index */\n\t\t\t\t\t\tfn( aTargets[j], def );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( typeof aTargets[j] === 'number' && aTargets[j] < 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Negative integer, right to left column counting */\n\t\t\t\t\t\tfn( columns.length+aTargets[j], def );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( typeof aTargets[j] === 'string' )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Class name matching on TH element */\n\t\t\t\t\t\tfor ( k=0, kLen=columns.length ; k<kLen ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ( aTargets[j] == \"_all\" ||\n\t\t\t\t\t\t\t     $(columns[k].nTh).hasClass( aTargets[j] ) )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfn( k, def );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Statically defined columns array\n\t\tif ( aoCols )\n\t\t{\n\t\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tfn( i, aoCols[i] );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * Add a data array to the table, creating DOM node etc. This is the parallel to\n\t * _fnGatherData, but for adding rows from a Javascript source, rather than a\n\t * DOM source.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {array} aData data array to be added\n\t *  @param {node} [nTr] TR element to add to the table - optional. If not given,\n\t *    DataTables will create a row automatically\n\t *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n\t *    if nTr is.\n\t *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddData ( oSettings, aDataIn, nTr, anTds )\n\t{\n\t\t/* Create the object for storing information about this new row */\n\t\tvar iRow = oSettings.aoData.length;\n\t\tvar oData = $.extend( true, {}, DataTable.models.oRow, {\n\t\t\tsrc: nTr ? 'dom' : 'data',\n\t\t\tidx: iRow\n\t\t} );\n\t\n\t\toData._aData = aDataIn;\n\t\toSettings.aoData.push( oData );\n\t\n\t\t/* Create the cells */\n\t\tvar nTd, sThisType;\n\t\tvar columns = oSettings.aoColumns;\n\t\n\t\t// Invalidate the column types as the new data needs to be revalidated\n\t\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tcolumns[i].sType = null;\n\t\t}\n\t\n\t\t/* Add to the display array */\n\t\toSettings.aiDisplayMaster.push( iRow );\n\t\n\t\tvar id = oSettings.rowIdFn( aDataIn );\n\t\tif ( id !== undefined ) {\n\t\t\toSettings.aIds[ id ] = oData;\n\t\t}\n\t\n\t\t/* Create the DOM information, or register it if already present */\n\t\tif ( nTr || ! oSettings.oFeatures.bDeferRender )\n\t\t{\n\t\t\t_fnCreateTr( oSettings, iRow, nTr, anTds );\n\t\t}\n\t\n\t\treturn iRow;\n\t}\n\t\n\t\n\t/**\n\t * Add one or more TR elements to the table. Generally we'd expect to\n\t * use this for reading data from a DOM sourced table, but it could be\n\t * used for an TR element. Note that if a TR is given, it is used (i.e.\n\t * it is not cloned).\n\t *  @param {object} settings dataTables settings object\n\t *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n\t *  @returns {array} Array of indexes for the added rows\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddTr( settings, trs )\n\t{\n\t\tvar row;\n\t\n\t\t// Allow an individual node to be passed in\n\t\tif ( ! (trs instanceof $) ) {\n\t\t\ttrs = $(trs);\n\t\t}\n\t\n\t\treturn trs.map( function (i, el) {\n\t\t\trow = _fnGetRowElements( settings, el );\n\t\t\treturn _fnAddData( settings, row.data, el, row.cells );\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Take a TR element and convert it to an index in aoData\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} n the TR element to find\n\t *  @returns {int} index if the node is found, null if not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnNodeToDataIndex( oSettings, n )\n\t{\n\t\treturn (n._DT_RowIndex!==undefined) ? n._DT_RowIndex : null;\n\t}\n\t\n\t\n\t/**\n\t * Take a TD element and convert it into a column data index (not the visible index)\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iRow The row number the TD/TH can be found in\n\t *  @param {node} n The TD/TH element to find\n\t *  @returns {int} index if the node is found, -1 if not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnNodeToColumnIndex( oSettings, iRow, n )\n\t{\n\t\treturn $.inArray( n, oSettings.aoData[ iRow ].anCells );\n\t}\n\t\n\t\n\t/**\n\t * Get the data for a given cell from the internal cache, taking into account data mapping\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} rowIdx aoData row id\n\t *  @param {int} colIdx Column index\n\t *  @param {string} type data get type ('display', 'type' 'filter|search' 'sort|order')\n\t *  @returns {*} Cell data\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetCellData( settings, rowIdx, colIdx, type )\n\t{\n\t\tif (type === 'search') {\n\t\t\ttype = 'filter';\n\t\t}\n\t\telse if (type === 'order') {\n\t\t\ttype = 'sort';\n\t\t}\n\t\n\t\tvar draw           = settings.iDraw;\n\t\tvar col            = settings.aoColumns[colIdx];\n\t\tvar rowData        = settings.aoData[rowIdx]._aData;\n\t\tvar defaultContent = col.sDefaultContent;\n\t\tvar cellData       = col.fnGetData( rowData, type, {\n\t\t\tsettings: settings,\n\t\t\trow:      rowIdx,\n\t\t\tcol:      colIdx\n\t\t} );\n\t\n\t\tif ( cellData === undefined ) {\n\t\t\tif ( settings.iDrawError != draw && defaultContent === null ) {\n\t\t\t\t_fnLog( settings, 0, \"Requested unknown parameter \"+\n\t\t\t\t\t(typeof col.mData=='function' ? '{function}' : \"'\"+col.mData+\"'\")+\n\t\t\t\t\t\" for row \"+rowIdx+\", column \"+colIdx, 4 );\n\t\t\t\tsettings.iDrawError = draw;\n\t\t\t}\n\t\t\treturn defaultContent;\n\t\t}\n\t\n\t\t// When the data source is null and a specific data type is requested (i.e.\n\t\t// not the original data), we can use default column data\n\t\tif ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {\n\t\t\tcellData = defaultContent;\n\t\t}\n\t\telse if ( typeof cellData === 'function' ) {\n\t\t\t// If the data source is a function, then we run it and use the return,\n\t\t\t// executing in the scope of the data object (for instances)\n\t\t\treturn cellData.call( rowData );\n\t\t}\n\t\n\t\tif ( cellData === null && type === 'display' ) {\n\t\t\treturn '';\n\t\t}\n\t\n\t\tif ( type === 'filter' ) {\n\t\t\tvar fomatters = DataTable.ext.type.search;\n\t\n\t\t\tif ( fomatters[ col.sType ] ) {\n\t\t\t\tcellData = fomatters[ col.sType ]( cellData );\n\t\t\t}\n\t\t}\n\t\n\t\treturn cellData;\n\t}\n\t\n\t\n\t/**\n\t * Set the value for a specific cell, into the internal data cache\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} rowIdx aoData row id\n\t *  @param {int} colIdx Column index\n\t *  @param {*} val Value to set\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSetCellData( settings, rowIdx, colIdx, val )\n\t{\n\t\tvar col     = settings.aoColumns[colIdx];\n\t\tvar rowData = settings.aoData[rowIdx]._aData;\n\t\n\t\tcol.fnSetData( rowData, val, {\n\t\t\tsettings: settings,\n\t\t\trow:      rowIdx,\n\t\t\tcol:      colIdx\n\t\t}  );\n\t}\n\t\n\t\n\t// Private variable that is used to match action syntax in the data property object\n\tvar __reArray = /\\[.*?\\]$/;\n\tvar __reFn = /\\(\\)$/;\n\t\n\t/**\n\t * Split string on periods, taking into account escaped periods\n\t * @param  {string} str String to split\n\t * @return {array} Split string\n\t */\n\tfunction _fnSplitObjNotation( str )\n\t{\n\t\treturn $.map( str.match(/(\\\\.|[^\\.])+/g) || [''], function ( s ) {\n\t\t\treturn s.replace(/\\\\\\./g, '.');\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Return a function that can be used to get data from a source object, taking\n\t * into account the ability to use nested objects as a source\n\t *  @param {string|int|function} mSource The data source for the object\n\t *  @returns {function} Data get function\n\t *  @memberof DataTable#oApi\n\t */\n\tvar _fnGetObjectDataFn = DataTable.util.get;\n\t\n\t\n\t/**\n\t * Return a function that can be used to set data from a source object, taking\n\t * into account the ability to use nested objects as a source\n\t *  @param {string|int|function} mSource The data source for the object\n\t *  @returns {function} Data set function\n\t *  @memberof DataTable#oApi\n\t */\n\tvar _fnSetObjectDataFn = DataTable.util.set;\n\t\n\t\n\t/**\n\t * Return an array with the full table data\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns array {array} aData Master data array\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetDataMaster ( settings )\n\t{\n\t\treturn _pluck( settings.aoData, '_aData' );\n\t}\n\t\n\t\n\t/**\n\t * Nuke the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnClearTable( settings )\n\t{\n\t\tsettings.aoData.length = 0;\n\t\tsettings.aiDisplayMaster.length = 0;\n\t\tsettings.aiDisplay.length = 0;\n\t\tsettings.aIds = {};\n\t}\n\t\n\t\n\t /**\n\t * Take an array of integers (index array) and remove a target integer (value - not\n\t * the key!)\n\t *  @param {array} a Index array to target\n\t *  @param {int} iTarget value to find\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDeleteIndex( a, iTarget, splice )\n\t{\n\t\tvar iTargetIndex = -1;\n\t\n\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tif ( a[i] == iTarget )\n\t\t\t{\n\t\t\t\tiTargetIndex = i;\n\t\t\t}\n\t\t\telse if ( a[i] > iTarget )\n\t\t\t{\n\t\t\t\ta[i]--;\n\t\t\t}\n\t\t}\n\t\n\t\tif ( iTargetIndex != -1 && splice === undefined )\n\t\t{\n\t\t\ta.splice( iTargetIndex, 1 );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Mark cached data as invalid such that a re-read of the data will occur when\n\t * the cached data is next requested. Also update from the data source object.\n\t *\n\t * @param {object} settings DataTables settings object\n\t * @param {int}    rowIdx   Row index to invalidate\n\t * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n\t *     or 'data'\n\t * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n\t *     row will be invalidated\n\t * @memberof DataTable#oApi\n\t *\n\t * @todo For the modularisation of v1.11 this will need to become a callback, so\n\t *   the sort and filter methods can subscribe to it. That will required\n\t *   initialisation options for sorting, which is why it is not already baked in\n\t */\n\tfunction _fnInvalidate( settings, rowIdx, src, colIdx )\n\t{\n\t\tvar row = settings.aoData[ rowIdx ];\n\t\tvar i, ien;\n\t\tvar cellWrite = function ( cell, col ) {\n\t\t\t// This is very frustrating, but in IE if you just write directly\n\t\t\t// to innerHTML, and elements that are overwritten are GC'ed,\n\t\t\t// even if there is a reference to them elsewhere\n\t\t\twhile ( cell.childNodes.length ) {\n\t\t\t\tcell.removeChild( cell.firstChild );\n\t\t\t}\n\t\n\t\t\tcell.innerHTML = _fnGetCellData( settings, rowIdx, col, 'display' );\n\t\t};\n\t\n\t\t// Are we reading last data from DOM or the data object?\n\t\tif ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {\n\t\t\t// Read the data from the DOM\n\t\t\trow._aData = _fnGetRowElements(\n\t\t\t\t\tsettings, row, colIdx, colIdx === undefined ? undefined : row._aData\n\t\t\t\t)\n\t\t\t\t.data;\n\t\t}\n\t\telse {\n\t\t\t// Reading from data object, update the DOM\n\t\t\tvar cells = row.anCells;\n\t\n\t\t\tif ( cells ) {\n\t\t\t\tif ( colIdx !== undefined ) {\n\t\t\t\t\tcellWrite( cells[colIdx], colIdx );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\t\t\tcellWrite( cells[i], i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// For both row and cell invalidation, the cached data for sorting and\n\t\t// filtering is nulled out\n\t\trow._aSortData = null;\n\t\trow._aFilterData = null;\n\t\n\t\t// Invalidate the type for a specific column (if given) or all columns since\n\t\t// the data might have changed\n\t\tvar cols = settings.aoColumns;\n\t\tif ( colIdx !== undefined ) {\n\t\t\tcols[ colIdx ].sType = null;\n\t\t}\n\t\telse {\n\t\t\tfor ( i=0, ien=cols.length ; i<ien ; i++ ) {\n\t\t\t\tcols[i].sType = null;\n\t\t\t}\n\t\n\t\t\t// Update DataTables special `DT_*` attributes for the row\n\t\t\t_fnRowAttributes( settings, row );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Build a data source object from an HTML row, reading the contents of the\n\t * cells that are in the row.\n\t *\n\t * @param {object} settings DataTables settings object\n\t * @param {node|object} TR element from which to read data or existing row\n\t *   object from which to re-read the data from the cells\n\t * @param {int} [colIdx] Optional column index\n\t * @param {array|object} [d] Data source object. If `colIdx` is given then this\n\t *   parameter should also be given and will be used to write the data into.\n\t *   Only the column in question will be written\n\t * @returns {object} Object with two parameters: `data` the data read, in\n\t *   document order, and `cells` and array of nodes (they can be useful to the\n\t *   caller, so rather than needing a second traversal to get them, just return\n\t *   them from here).\n\t * @memberof DataTable#oApi\n\t */\n\tfunction _fnGetRowElements( settings, row, colIdx, d )\n\t{\n\t\tvar\n\t\t\ttds = [],\n\t\t\ttd = row.firstChild,\n\t\t\tname, col, o, i=0, contents,\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tobjectRead = settings._rowReadObject;\n\t\n\t\t// Allow the data object to be passed in, or construct\n\t\td = d !== undefined ?\n\t\t\td :\n\t\t\tobjectRead ?\n\t\t\t\t{} :\n\t\t\t\t[];\n\t\n\t\tvar attr = function ( str, td  ) {\n\t\t\tif ( typeof str === 'string' ) {\n\t\t\t\tvar idx = str.indexOf('@');\n\t\n\t\t\t\tif ( idx !== -1 ) {\n\t\t\t\t\tvar attr = str.substring( idx+1 );\n\t\t\t\t\tvar setter = _fnSetObjectDataFn( str );\n\t\t\t\t\tsetter( d, td.getAttribute( attr ) );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t// Read data from a cell and store into the data object\n\t\tvar cellProcess = function ( cell ) {\n\t\t\tif ( colIdx === undefined || colIdx === i ) {\n\t\t\t\tcol = columns[i];\n\t\t\t\tcontents = (cell.innerHTML).trim();\n\t\n\t\t\t\tif ( col && col._bAttrSrc ) {\n\t\t\t\t\tvar setter = _fnSetObjectDataFn( col.mData._ );\n\t\t\t\t\tsetter( d, contents );\n\t\n\t\t\t\t\tattr( col.mData.sort, cell );\n\t\t\t\t\tattr( col.mData.type, cell );\n\t\t\t\t\tattr( col.mData.filter, cell );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Depending on the `data` option for the columns the data can\n\t\t\t\t\t// be read to either an object or an array.\n\t\t\t\t\tif ( objectRead ) {\n\t\t\t\t\t\tif ( ! col._setter ) {\n\t\t\t\t\t\t\t// Cache the setter function\n\t\t\t\t\t\t\tcol._setter = _fnSetObjectDataFn( col.mData );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcol._setter( d, contents );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\td[i] = contents;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\ti++;\n\t\t};\n\t\n\t\tif ( td ) {\n\t\t\t// `tr` element was passed in\n\t\t\twhile ( td ) {\n\t\t\t\tname = td.nodeName.toUpperCase();\n\t\n\t\t\t\tif ( name == \"TD\" || name == \"TH\" ) {\n\t\t\t\t\tcellProcess( td );\n\t\t\t\t\ttds.push( td );\n\t\t\t\t}\n\t\n\t\t\t\ttd = td.nextSibling;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Existing row object passed in\n\t\t\ttds = row.anCells;\n\t\n\t\t\tfor ( var j=0, jen=tds.length ; j<jen ; j++ ) {\n\t\t\t\tcellProcess( tds[j] );\n\t\t\t}\n\t\t}\n\t\n\t\t// Read the ID from the DOM if present\n\t\tvar rowNode = row.firstChild ? row : row.nTr;\n\t\n\t\tif ( rowNode ) {\n\t\t\tvar id = rowNode.getAttribute( 'id' );\n\t\n\t\t\tif ( id ) {\n\t\t\t\t_fnSetObjectDataFn( settings.rowId )( d, id );\n\t\t\t}\n\t\t}\n\t\n\t\treturn {\n\t\t\tdata: d,\n\t\t\tcells: tds\n\t\t};\n\t}\n\t/**\n\t * Create a new TR element (and it's TD children) for a row\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iRow Row to consider\n\t *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n\t *    DataTables will create a row automatically\n\t *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n\t *    if nTr is.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCreateTr ( oSettings, iRow, nTrIn, anTds )\n\t{\n\t\tvar\n\t\t\trow = oSettings.aoData[iRow],\n\t\t\trowData = row._aData,\n\t\t\tcells = [],\n\t\t\tnTr, nTd, oCol,\n\t\t\ti, iLen, create;\n\t\n\t\tif ( row.nTr === null )\n\t\t{\n\t\t\tnTr = nTrIn || document.createElement('tr');\n\t\n\t\t\trow.nTr = nTr;\n\t\t\trow.anCells = cells;\n\t\n\t\t\t/* Use a private property on the node to allow reserve mapping from the node\n\t\t\t * to the aoData array for fast look up\n\t\t\t */\n\t\t\tnTr._DT_RowIndex = iRow;\n\t\n\t\t\t/* Special parameters can be given by the data source to be used on the row */\n\t\t\t_fnRowAttributes( oSettings, row );\n\t\n\t\t\t/* Process each column */\n\t\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\toCol = oSettings.aoColumns[i];\n\t\t\t\tcreate = nTrIn ? false : true;\n\t\n\t\t\t\tnTd = create ? document.createElement( oCol.sCellType ) : anTds[i];\n\t\n\t\t\t\tif (! nTd) {\n\t\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\n\t\t\t\t}\n\t\n\t\t\t\tnTd._DT_CellIndex = {\n\t\t\t\t\trow: iRow,\n\t\t\t\t\tcolumn: i\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tcells.push( nTd );\n\t\n\t\t\t\t// Need to create the HTML if new, or if a rendering function is defined\n\t\t\t\tif ( create || ((oCol.mRender || oCol.mData !== i) &&\n\t\t\t\t\t (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')\n\t\t\t\t)) {\n\t\t\t\t\tnTd.innerHTML = _fnGetCellData( oSettings, iRow, i, 'display' );\n\t\t\t\t}\n\t\n\t\t\t\t/* Add user defined class */\n\t\t\t\tif ( oCol.sClass )\n\t\t\t\t{\n\t\t\t\t\tnTd.className += ' '+oCol.sClass;\n\t\t\t\t}\n\t\n\t\t\t\t// Visibility - add or remove as required\n\t\t\t\tif ( oCol.bVisible && ! nTrIn )\n\t\t\t\t{\n\t\t\t\t\tnTr.appendChild( nTd );\n\t\t\t\t}\n\t\t\t\telse if ( ! oCol.bVisible && nTrIn )\n\t\t\t\t{\n\t\t\t\t\tnTd.parentNode.removeChild( nTd );\n\t\t\t\t}\n\t\n\t\t\t\tif ( oCol.fnCreatedCell )\n\t\t\t\t{\n\t\t\t\t\toCol.fnCreatedCell.call( oSettings.oInstance,\n\t\t\t\t\t\tnTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t_fnCallbackFire( oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow, cells] );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Add attributes to a row based on the special `DT_*` parameters in a data\n\t * source object.\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} DataTables row object for the row to be modified\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnRowAttributes( settings, row )\n\t{\n\t\tvar tr = row.nTr;\n\t\tvar data = row._aData;\n\t\n\t\tif ( tr ) {\n\t\t\tvar id = settings.rowIdFn( data );\n\t\n\t\t\tif ( id ) {\n\t\t\t\ttr.id = id;\n\t\t\t}\n\t\n\t\t\tif ( data.DT_RowClass ) {\n\t\t\t\t// Remove any classes added by DT_RowClass before\n\t\t\t\tvar a = data.DT_RowClass.split(' ');\n\t\t\t\trow.__rowc = row.__rowc ?\n\t\t\t\t\t_unique( row.__rowc.concat( a ) ) :\n\t\t\t\t\ta;\n\t\n\t\t\t\t$(tr)\n\t\t\t\t\t.removeClass( row.__rowc.join(' ') )\n\t\t\t\t\t.addClass( data.DT_RowClass );\n\t\t\t}\n\t\n\t\t\tif ( data.DT_RowAttr ) {\n\t\t\t\t$(tr).attr( data.DT_RowAttr );\n\t\t\t}\n\t\n\t\t\tif ( data.DT_RowData ) {\n\t\t\t\t$(tr).data( data.DT_RowData );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Create the HTML header for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBuildHead( oSettings )\n\t{\n\t\tvar i, ien, cell, row, column;\n\t\tvar thead = oSettings.nTHead;\n\t\tvar tfoot = oSettings.nTFoot;\n\t\tvar createHeader = $('th, td', thead).length === 0;\n\t\tvar classes = oSettings.oClasses;\n\t\tvar columns = oSettings.aoColumns;\n\t\n\t\tif ( createHeader ) {\n\t\t\trow = $('<tr/>').appendTo( thead );\n\t\t}\n\t\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tcolumn = columns[i];\n\t\t\tcell = $( column.nTh ).addClass( column.sClass );\n\t\n\t\t\tif ( createHeader ) {\n\t\t\t\tcell.appendTo( row );\n\t\t\t}\n\t\n\t\t\t// 1.11 move into sorting\n\t\t\tif ( oSettings.oFeatures.bSort ) {\n\t\t\t\tcell.addClass( column.sSortingClass );\n\t\n\t\t\t\tif ( column.bSortable !== false ) {\n\t\t\t\t\tcell\n\t\t\t\t\t\t.attr( 'tabindex', oSettings.iTabIndex )\n\t\t\t\t\t\t.attr( 'aria-controls', oSettings.sTableId );\n\t\n\t\t\t\t\t_fnSortAttachListener( oSettings, column.nTh, i );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( column.sTitle != cell[0].innerHTML ) {\n\t\t\t\tcell.html( column.sTitle );\n\t\t\t}\n\t\n\t\t\t_fnRenderer( oSettings, 'header' )(\n\t\t\t\toSettings, cell, column, classes\n\t\t\t);\n\t\t}\n\t\n\t\tif ( createHeader ) {\n\t\t\t_fnDetectHeader( oSettings.aoHeader, thead );\n\t\t}\n\t\n\t\t/* Deal with the footer - add classes if required */\n\t\t$(thead).children('tr').children('th, td').addClass( classes.sHeaderTH );\n\t\t$(tfoot).children('tr').children('th, td').addClass( classes.sFooterTH );\n\t\n\t\t// Cache the footer cells. Note that we only take the cells from the first\n\t\t// row in the footer. If there is more than one row the user wants to\n\t\t// interact with, they need to use the table().foot() method. Note also this\n\t\t// allows cells to be used for multiple columns using colspan\n\t\tif ( tfoot !== null ) {\n\t\t\tvar cells = oSettings.aoFooter[0];\n\t\n\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\tcolumn = columns[i];\n\t\n\t\t\t\tif (column) {\n\t\t\t\t\tcolumn.nTf = cells[i].cell;\n\t\t\n\t\t\t\t\tif ( column.sClass ) {\n\t\t\t\t\t\t$(column.nTf).addClass( column.sClass );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Draw the header (or footer) element based on the column visibility states. The\n\t * methodology here is to use the layout array from _fnDetectHeader, modified for\n\t * the instantaneous column visibility, to construct the new layout. The grid is\n\t * traversed over cell at a time in a rows x columns grid fashion, although each\n\t * cell insert can cover multiple elements in the grid - which is tracks using the\n\t * aApplied array. Cell inserts in the grid will only occur where there isn't\n\t * already a cell in that position.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param array {objects} aoSource Layout array from _fnDetectHeader\n\t *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDrawHead( oSettings, aoSource, bIncludeHidden )\n\t{\n\t\tvar i, iLen, j, jLen, k, kLen, n, nLocalTr;\n\t\tvar aoLocal = [];\n\t\tvar aApplied = [];\n\t\tvar iColumns = oSettings.aoColumns.length;\n\t\tvar iRowspan, iColspan;\n\t\n\t\tif ( ! aoSource )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\n\t\tif (  bIncludeHidden === undefined )\n\t\t{\n\t\t\tbIncludeHidden = false;\n\t\t}\n\t\n\t\t/* Make a copy of the master layout array, but without the visible columns in it */\n\t\tfor ( i=0, iLen=aoSource.length ; i<iLen ; i++ )\n\t\t{\n\t\t\taoLocal[i] = aoSource[i].slice();\n\t\t\taoLocal[i].nTr = aoSource[i].nTr;\n\t\n\t\t\t/* Remove any columns which are currently hidden */\n\t\t\tfor ( j=iColumns-1 ; j>=0 ; j-- )\n\t\t\t{\n\t\t\t\tif ( !oSettings.aoColumns[j].bVisible && !bIncludeHidden )\n\t\t\t\t{\n\t\t\t\t\taoLocal[i].splice( j, 1 );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/* Prep the applied array - it needs an element for each row */\n\t\t\taApplied.push( [] );\n\t\t}\n\t\n\t\tfor ( i=0, iLen=aoLocal.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tnLocalTr = aoLocal[i].nTr;\n\t\n\t\t\t/* All cells are going to be replaced, so empty out the row */\n\t\t\tif ( nLocalTr )\n\t\t\t{\n\t\t\t\twhile( (n = nLocalTr.firstChild) )\n\t\t\t\t{\n\t\t\t\t\tnLocalTr.removeChild( n );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor ( j=0, jLen=aoLocal[i].length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tiRowspan = 1;\n\t\t\t\tiColspan = 1;\n\t\n\t\t\t\t/* Check to see if there is already a cell (row/colspan) covering our target\n\t\t\t\t * insert point. If there is, then there is nothing to do.\n\t\t\t\t */\n\t\t\t\tif ( aApplied[i][j] === undefined )\n\t\t\t\t{\n\t\t\t\t\tnLocalTr.appendChild( aoLocal[i][j].cell );\n\t\t\t\t\taApplied[i][j] = 1;\n\t\n\t\t\t\t\t/* Expand the cell to cover as many rows as needed */\n\t\t\t\t\twhile ( aoLocal[i+iRowspan] !== undefined &&\n\t\t\t\t\t        aoLocal[i][j].cell == aoLocal[i+iRowspan][j].cell )\n\t\t\t\t\t{\n\t\t\t\t\t\taApplied[i+iRowspan][j] = 1;\n\t\t\t\t\t\tiRowspan++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* Expand the cell to cover as many columns as needed */\n\t\t\t\t\twhile ( aoLocal[i][j+iColspan] !== undefined &&\n\t\t\t\t\t        aoLocal[i][j].cell == aoLocal[i][j+iColspan].cell )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Must update the applied array over the rows for the columns */\n\t\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taApplied[i+k][j+iColspan] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tiColspan++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* Do the actual expansion in the DOM */\n\t\t\t\t\t$(aoLocal[i][j].cell)\n\t\t\t\t\t\t.attr('rowspan', iRowspan)\n\t\t\t\t\t\t.attr('colspan', iColspan);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Insert the required TR nodes into the table for display\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param ajaxComplete true after ajax call to complete rendering\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDraw( oSettings, ajaxComplete )\n\t{\n\t\t// Allow for state saving and a custom start position\n\t\t_fnStart( oSettings );\n\t\n\t\t/* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n\t\tvar aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );\n\t\tif ( $.inArray( false, aPreDraw ) !== -1 )\n\t\t{\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar anRows = [];\n\t\tvar iRowCount = 0;\n\t\tvar asStripeClasses = oSettings.asStripeClasses;\n\t\tvar iStripes = asStripeClasses.length;\n\t\tvar oLang = oSettings.oLanguage;\n\t\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\t\tvar aiDisplay = oSettings.aiDisplay;\n\t\tvar iDisplayStart = oSettings._iDisplayStart;\n\t\tvar iDisplayEnd = oSettings.fnDisplayEnd();\n\t\n\t\toSettings.bDrawing = true;\n\t\n\t\t/* Server-side processing draw intercept */\n\t\tif ( oSettings.bDeferLoading )\n\t\t{\n\t\t\toSettings.bDeferLoading = false;\n\t\t\toSettings.iDraw++;\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t}\n\t\telse if ( !bServerSide )\n\t\t{\n\t\t\toSettings.iDraw++;\n\t\t}\n\t\telse if ( !oSettings.bDestroying && !ajaxComplete)\n\t\t{\n\t\t\t_fnAjaxUpdate( oSettings );\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( aiDisplay.length !== 0 )\n\t\t{\n\t\t\tvar iStart = bServerSide ? 0 : iDisplayStart;\n\t\t\tvar iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n\t\n\t\t\tfor ( var j=iStart ; j<iEnd ; j++ )\n\t\t\t{\n\t\t\t\tvar iDataIndex = aiDisplay[j];\n\t\t\t\tvar aoData = oSettings.aoData[ iDataIndex ];\n\t\t\t\tif ( aoData.nTr === null )\n\t\t\t\t{\n\t\t\t\t\t_fnCreateTr( oSettings, iDataIndex );\n\t\t\t\t}\n\t\n\t\t\t\tvar nRow = aoData.nTr;\n\t\n\t\t\t\t/* Remove the old striping classes and then add the new one */\n\t\t\t\tif ( iStripes !== 0 )\n\t\t\t\t{\n\t\t\t\t\tvar sStripe = asStripeClasses[ iRowCount % iStripes ];\n\t\t\t\t\tif ( aoData._sRowStripe != sStripe )\n\t\t\t\t\t{\n\t\t\t\t\t\t$(nRow).removeClass( aoData._sRowStripe ).addClass( sStripe );\n\t\t\t\t\t\taoData._sRowStripe = sStripe;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Row callback functions - might want to manipulate the row\n\t\t\t\t// iRowCount and j are not currently documented. Are they at all\n\t\t\t\t// useful?\n\t\t\t\t_fnCallbackFire( oSettings, 'aoRowCallback', null,\n\t\t\t\t\t[nRow, aoData._aData, iRowCount, j, iDataIndex] );\n\t\n\t\t\t\tanRows.push( nRow );\n\t\t\t\tiRowCount++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Table is empty - create a row with an empty message in it */\n\t\t\tvar sZero = oLang.sZeroRecords;\n\t\t\tif ( oSettings.iDraw == 1 &&  _fnDataSource( oSettings ) == 'ajax' )\n\t\t\t{\n\t\t\t\tsZero = oLang.sLoadingRecords;\n\t\t\t}\n\t\t\telse if ( oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0 )\n\t\t\t{\n\t\t\t\tsZero = oLang.sEmptyTable;\n\t\t\t}\n\t\n\t\t\tanRows[ 0 ] = $( '<tr/>', { 'class': iStripes ? asStripeClasses[0] : '' } )\n\t\t\t\t.append( $('<td />', {\n\t\t\t\t\t'valign':  'top',\n\t\t\t\t\t'colSpan': _fnVisbleColumns( oSettings ),\n\t\t\t\t\t'class':   oSettings.oClasses.sRowEmpty\n\t\t\t\t} ).html( sZero ) )[0];\n\t\t}\n\t\n\t\t/* Header and footer callbacks */\n\t\t_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],\n\t\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\t\n\t\t_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],\n\t\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\t\n\t\tvar body = $(oSettings.nTBody);\n\t\n\t\tbody.children().detach();\n\t\tbody.append( $(anRows) );\n\t\n\t\t/* Call all required callback functions for the end of a draw */\n\t\t_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings] );\n\t\n\t\t/* Draw is complete, sorting and filtering must be as well */\n\t\toSettings.bSorted = false;\n\t\toSettings.bFiltered = false;\n\t\toSettings.bDrawing = false;\n\t}\n\t\n\t\n\t/**\n\t * Redraw the table - taking account of the various features which are enabled\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {boolean} [holdPosition] Keep the current paging position. By default\n\t *    the paging is reset to the first page\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnReDraw( settings, holdPosition )\n\t{\n\t\tvar\n\t\t\tfeatures = settings.oFeatures,\n\t\t\tsort     = features.bSort,\n\t\t\tfilter   = features.bFilter;\n\t\n\t\tif ( sort ) {\n\t\t\t_fnSort( settings );\n\t\t}\n\t\n\t\tif ( filter ) {\n\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch );\n\t\t}\n\t\telse {\n\t\t\t// No filtering, so we want to just use the display master\n\t\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t\t}\n\t\n\t\tif ( holdPosition !== true ) {\n\t\t\tsettings._iDisplayStart = 0;\n\t\t}\n\t\n\t\t// Let any modules know about the draw hold position state (used by\n\t\t// scrolling internally)\n\t\tsettings._drawHold = holdPosition;\n\t\n\t\t_fnDraw( settings );\n\t\n\t\tsettings._drawHold = false;\n\t}\n\t\n\t\n\t/**\n\t * Add the options to the page HTML for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddOptionsHtml ( oSettings )\n\t{\n\t\tvar classes = oSettings.oClasses;\n\t\tvar table = $(oSettings.nTable);\n\t\tvar holding = $('<div/>').insertBefore( table ); // Holding element for speed\n\t\tvar features = oSettings.oFeatures;\n\t\n\t\t// All DataTables are wrapped in a div\n\t\tvar insert = $('<div/>', {\n\t\t\tid:      oSettings.sTableId+'_wrapper',\n\t\t\t'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' '+classes.sNoFooter)\n\t\t} );\n\t\n\t\toSettings.nHolding = holding[0];\n\t\toSettings.nTableWrapper = insert[0];\n\t\toSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;\n\t\n\t\t/* Loop over the user set positioning and place the elements as needed */\n\t\tvar aDom = oSettings.sDom.split('');\n\t\tvar featureNode, cOption, nNewNode, cNext, sAttr, j;\n\t\tfor ( var i=0 ; i<aDom.length ; i++ )\n\t\t{\n\t\t\tfeatureNode = null;\n\t\t\tcOption = aDom[i];\n\t\n\t\t\tif ( cOption == '<' )\n\t\t\t{\n\t\t\t\t/* New container div */\n\t\t\t\tnNewNode = $('<div/>')[0];\n\t\n\t\t\t\t/* Check to see if we should append an id and/or a class name to the container */\n\t\t\t\tcNext = aDom[i+1];\n\t\t\t\tif ( cNext == \"'\" || cNext == '\"' )\n\t\t\t\t{\n\t\t\t\t\tsAttr = \"\";\n\t\t\t\t\tj = 2;\n\t\t\t\t\twhile ( aDom[i+j] != cNext )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr += aDom[i+j];\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* Replace jQuery UI constants @todo depreciated */\n\t\t\t\t\tif ( sAttr == \"H\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr = classes.sJUIHeader;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( sAttr == \"F\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr = classes.sJUIFooter;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n\t\t\t\t\t * breaks the string into parts and applies them as needed\n\t\t\t\t\t */\n\t\t\t\t\tif ( sAttr.indexOf('.') != -1 )\n\t\t\t\t\t{\n\t\t\t\t\t\tvar aSplit = sAttr.split('.');\n\t\t\t\t\t\tnNewNode.id = aSplit[0].substr(1, aSplit[0].length-1);\n\t\t\t\t\t\tnNewNode.className = aSplit[1];\n\t\t\t\t\t}\n\t\t\t\t\telse if ( sAttr.charAt(0) == \"#\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tnNewNode.id = sAttr.substr(1, sAttr.length-1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnNewNode.className = sAttr;\n\t\t\t\t\t}\n\t\n\t\t\t\t\ti += j; /* Move along the position array */\n\t\t\t\t}\n\t\n\t\t\t\tinsert.append( nNewNode );\n\t\t\t\tinsert = $(nNewNode);\n\t\t\t}\n\t\t\telse if ( cOption == '>' )\n\t\t\t{\n\t\t\t\t/* End container div */\n\t\t\t\tinsert = insert.parent();\n\t\t\t}\n\t\t\t// @todo Move options into their own plugins?\n\t\t\telse if ( cOption == 'l' && features.bPaginate && features.bLengthChange )\n\t\t\t{\n\t\t\t\t/* Length */\n\t\t\t\tfeatureNode = _fnFeatureHtmlLength( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 'f' && features.bFilter )\n\t\t\t{\n\t\t\t\t/* Filter */\n\t\t\t\tfeatureNode = _fnFeatureHtmlFilter( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 'r' && features.bProcessing )\n\t\t\t{\n\t\t\t\t/* pRocessing */\n\t\t\t\tfeatureNode = _fnFeatureHtmlProcessing( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 't' )\n\t\t\t{\n\t\t\t\t/* Table */\n\t\t\t\tfeatureNode = _fnFeatureHtmlTable( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption ==  'i' && features.bInfo )\n\t\t\t{\n\t\t\t\t/* Info */\n\t\t\t\tfeatureNode = _fnFeatureHtmlInfo( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 'p' && features.bPaginate )\n\t\t\t{\n\t\t\t\t/* Pagination */\n\t\t\t\tfeatureNode = _fnFeatureHtmlPaginate( oSettings );\n\t\t\t}\n\t\t\telse if ( DataTable.ext.feature.length !== 0 )\n\t\t\t{\n\t\t\t\t/* Plug-in features */\n\t\t\t\tvar aoFeatures = DataTable.ext.feature;\n\t\t\t\tfor ( var k=0, kLen=aoFeatures.length ; k<kLen ; k++ )\n\t\t\t\t{\n\t\t\t\t\tif ( cOption == aoFeatures[k].cFeature )\n\t\t\t\t\t{\n\t\t\t\t\t\tfeatureNode = aoFeatures[k].fnInit( oSettings );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/* Add to the 2D features array */\n\t\t\tif ( featureNode )\n\t\t\t{\n\t\t\t\tvar aanFeatures = oSettings.aanFeatures;\n\t\n\t\t\t\tif ( ! aanFeatures[cOption] )\n\t\t\t\t{\n\t\t\t\t\taanFeatures[cOption] = [];\n\t\t\t\t}\n\t\n\t\t\t\taanFeatures[cOption].push( featureNode );\n\t\t\t\tinsert.append( featureNode );\n\t\t\t}\n\t\t}\n\t\n\t\t/* Built our DOM structure - replace the holding div with what we want */\n\t\tholding.replaceWith( insert );\n\t\toSettings.nHolding = null;\n\t}\n\t\n\t\n\t/**\n\t * Use the DOM source to create up an array of header cells. The idea here is to\n\t * create a layout grid (array) of rows x columns, which contains a reference\n\t * to the cell that that point in the grid (regardless of col/rowspan), such that\n\t * any column / row could be removed and the new grid constructed\n\t *  @param array {object} aLayout Array to store the calculated layout in\n\t *  @param {node} nThead The header/footer element for the table\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDetectHeader ( aLayout, nThead )\n\t{\n\t\tvar nTrs = $(nThead).children('tr');\n\t\tvar nTr, nCell;\n\t\tvar i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;\n\t\tvar bUnique;\n\t\tvar fnShiftCol = function ( a, i, j ) {\n\t\t\tvar k = a[i];\n\t                while ( k[j] ) {\n\t\t\t\tj++;\n\t\t\t}\n\t\t\treturn j;\n\t\t};\n\t\n\t\taLayout.splice( 0, aLayout.length );\n\t\n\t\t/* We know how many rows there are in the layout - so prep it */\n\t\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t\t{\n\t\t\taLayout.push( [] );\n\t\t}\n\t\n\t\t/* Calculate a layout array */\n\t\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tnTr = nTrs[i];\n\t\t\tiColumn = 0;\n\t\n\t\t\t/* For every cell in the row... */\n\t\t\tnCell = nTr.firstChild;\n\t\t\twhile ( nCell ) {\n\t\t\t\tif ( nCell.nodeName.toUpperCase() == \"TD\" ||\n\t\t\t\t     nCell.nodeName.toUpperCase() == \"TH\" )\n\t\t\t\t{\n\t\t\t\t\t/* Get the col and rowspan attributes from the DOM and sanitise them */\n\t\t\t\t\tiColspan = nCell.getAttribute('colspan') * 1;\n\t\t\t\t\tiRowspan = nCell.getAttribute('rowspan') * 1;\n\t\t\t\t\tiColspan = (!iColspan || iColspan===0 || iColspan===1) ? 1 : iColspan;\n\t\t\t\t\tiRowspan = (!iRowspan || iRowspan===0 || iRowspan===1) ? 1 : iRowspan;\n\t\n\t\t\t\t\t/* There might be colspan cells already in this row, so shift our target\n\t\t\t\t\t * accordingly\n\t\t\t\t\t */\n\t\t\t\t\tiColShifted = fnShiftCol( aLayout, i, iColumn );\n\t\n\t\t\t\t\t/* Cache calculation for unique columns */\n\t\t\t\t\tbUnique = iColspan === 1 ? true : false;\n\t\n\t\t\t\t\t/* If there is col / rowspan, copy the information into the layout grid */\n\t\t\t\t\tfor ( l=0 ; l<iColspan ; l++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taLayout[i+k][iColShifted+l] = {\n\t\t\t\t\t\t\t\t\"cell\": nCell,\n\t\t\t\t\t\t\t\t\"unique\": bUnique\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\taLayout[i+k].nTr = nTr;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnCell = nCell.nextSibling;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Get an array of unique th elements, one for each column\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} nHeader automatically detect the layout from this node - optional\n\t *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional\n\t *  @returns array {node} aReturn list of unique th's\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetUniqueThs ( oSettings, nHeader, aLayout )\n\t{\n\t\tvar aReturn = [];\n\t\tif ( !aLayout )\n\t\t{\n\t\t\taLayout = oSettings.aoHeader;\n\t\t\tif ( nHeader )\n\t\t\t{\n\t\t\t\taLayout = [];\n\t\t\t\t_fnDetectHeader( aLayout, nHeader );\n\t\t\t}\n\t\t}\n\t\n\t\tfor ( var i=0, iLen=aLayout.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tfor ( var j=0, jLen=aLayout[i].length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tif ( aLayout[i][j].unique &&\n\t\t\t\t\t (!aReturn[j] || !oSettings.bSortCellsTop) )\n\t\t\t\t{\n\t\t\t\t\taReturn[j] = aLayout[i][j].cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn aReturn;\n\t}\n\t\n\t/**\n\t * Set the start position for draw\n\t *  @param {object} oSettings dataTables settings object\n\t */\n\tfunction _fnStart( oSettings )\n\t{\n\t\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\t\tvar iInitDisplayStart = oSettings.iInitDisplayStart;\n\t\n\t\t// Check and see if we have an initial draw position from state saving\n\t\tif ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )\n\t\t{\n\t\t\toSettings._iDisplayStart = bServerSide ?\n\t\t\t\tiInitDisplayStart :\n\t\t\t\tiInitDisplayStart >= oSettings.fnRecordsDisplay() ?\n\t\t\t\t\t0 :\n\t\t\t\t\tiInitDisplayStart;\n\t\n\t\t\toSettings.iInitDisplayStart = -1;\n\t\t}\n\t}\n\t\n\t/**\n\t * Create an Ajax call based on the table's settings, taking into account that\n\t * parameters can have multiple forms, and backwards compatibility.\n\t *\n\t * @param {object} oSettings dataTables settings object\n\t * @param {array} data Data to send to the server, required by\n\t *     DataTables - may be augmented by developer callbacks\n\t * @param {function} fn Callback function to run when data is obtained\n\t */\n\tfunction _fnBuildAjax( oSettings, data, fn )\n\t{\n\t\t// Compatibility with 1.9-, allow fnServerData and event to manipulate\n\t\t_fnCallbackFire( oSettings, 'aoServerParams', 'serverParams', [data] );\n\t\n\t\t// Convert to object based for 1.10+ if using the old array scheme which can\n\t\t// come from server-side processing or serverParams\n\t\tif ( data && Array.isArray(data) ) {\n\t\t\tvar tmp = {};\n\t\t\tvar rbracket = /(.*?)\\[\\]$/;\n\t\n\t\t\t$.each( data, function (key, val) {\n\t\t\t\tvar match = val.name.match(rbracket);\n\t\n\t\t\t\tif ( match ) {\n\t\t\t\t\t// Support for arrays\n\t\t\t\t\tvar name = match[0];\n\t\n\t\t\t\t\tif ( ! tmp[ name ] ) {\n\t\t\t\t\t\ttmp[ name ] = [];\n\t\t\t\t\t}\n\t\t\t\t\ttmp[ name ].push( val.value );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttmp[val.name] = val.value;\n\t\t\t\t}\n\t\t\t} );\n\t\t\tdata = tmp;\n\t\t}\n\t\n\t\tvar ajaxData;\n\t\tvar ajax = oSettings.ajax;\n\t\tvar instance = oSettings.oInstance;\n\t\tvar callback = function ( json ) {\n\t\t\tvar status = oSettings.jqXHR\n\t\t\t\t? oSettings.jqXHR.status\n\t\t\t\t: null;\n\t\n\t\t\tif ( json === null || (typeof status === 'number' && status == 204 ) ) {\n\t\t\t\tjson = {};\n\t\t\t\t_fnAjaxDataSrc( oSettings, json, [] );\n\t\t\t}\n\t\n\t\t\tvar error = json.error || json.sError;\n\t\t\tif ( error ) {\n\t\t\t\t_fnLog( oSettings, 0, error );\n\t\t\t}\n\t\n\t\t\toSettings.json = json;\n\t\n\t\t\t_fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR] );\n\t\t\tfn( json );\n\t\t};\n\t\n\t\tif ( $.isPlainObject( ajax ) && ajax.data )\n\t\t{\n\t\t\tajaxData = ajax.data;\n\t\n\t\t\tvar newData = typeof ajaxData === 'function' ?\n\t\t\t\tajaxData( data, oSettings ) :  // fn can manipulate data or return\n\t\t\t\tajaxData;                      // an object object or array to merge\n\t\n\t\t\t// If the function returned something, use that alone\n\t\t\tdata = typeof ajaxData === 'function' && newData ?\n\t\t\t\tnewData :\n\t\t\t\t$.extend( true, data, newData );\n\t\n\t\t\t// Remove the data property as we've resolved it already and don't want\n\t\t\t// jQuery to do it again (it is restored at the end of the function)\n\t\t\tdelete ajax.data;\n\t\t}\n\t\n\t\tvar baseAjax = {\n\t\t\t\"data\": data,\n\t\t\t\"success\": callback,\n\t\t\t\"dataType\": \"json\",\n\t\t\t\"cache\": false,\n\t\t\t\"type\": oSettings.sServerMethod,\n\t\t\t\"error\": function (xhr, error, thrown) {\n\t\t\t\tvar ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR] );\n\t\n\t\t\t\tif ( $.inArray( true, ret ) === -1 ) {\n\t\t\t\t\tif ( error == \"parsererror\" ) {\n\t\t\t\t\t\t_fnLog( oSettings, 0, 'Invalid JSON response', 1 );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( xhr.readyState === 4 ) {\n\t\t\t\t\t\t_fnLog( oSettings, 0, 'Ajax error', 7 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\t}\n\t\t};\n\t\n\t\t// Store the data submitted for the API\n\t\toSettings.oAjaxData = data;\n\t\n\t\t// Allow plug-ins and external processes to modify the data\n\t\t_fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data] );\n\t\n\t\tif ( oSettings.fnServerData )\n\t\t{\n\t\t\t// DataTables 1.9- compatibility\n\t\t\toSettings.fnServerData.call( instance,\n\t\t\t\toSettings.sAjaxSource,\n\t\t\t\t$.map( data, function (val, key) { // Need to convert back to 1.9 trad format\n\t\t\t\t\treturn { name: key, value: val };\n\t\t\t\t} ),\n\t\t\t\tcallback,\n\t\t\t\toSettings\n\t\t\t);\n\t\t}\n\t\telse if ( oSettings.sAjaxSource || typeof ajax === 'string' )\n\t\t{\n\t\t\t// DataTables 1.9- compatibility\n\t\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, {\n\t\t\t\turl: ajax || oSettings.sAjaxSource\n\t\t\t} ) );\n\t\t}\n\t\telse if ( typeof ajax === 'function' )\n\t\t{\n\t\t\t// Is a function - let the caller define what needs to be done\n\t\t\toSettings.jqXHR = ajax.call( instance, data, callback, oSettings );\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Object to extend the base settings\n\t\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, ajax ) );\n\t\n\t\t\t// Restore for next time around\n\t\t\tajax.data = ajaxData;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Update the table using an Ajax call\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {boolean} Block the table drawing or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxUpdate( settings )\n\t{\n\t\tsettings.iDraw++;\n\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t_fnBuildAjax(\n\t\t\tsettings,\n\t\t\t_fnAjaxParameters( settings ),\n\t\t\tfunction(json) {\n\t\t\t\t_fnAjaxUpdateDraw( settings, json );\n\t\t\t}\n\t\t);\n\t}\n\t\n\t\n\t/**\n\t * Build up the parameters in an object needed for a server-side processing\n\t * request. Note that this is basically done twice, is different ways - a modern\n\t * method which is used by default in DataTables 1.10 which uses objects and\n\t * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if\n\t * the sAjaxSource option is used in the initialisation, or the legacyAjax\n\t * option is set.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {bool} block the table drawing or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxParameters( settings )\n\t{\n\t\tvar\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tcolumnCount = columns.length,\n\t\t\tfeatures = settings.oFeatures,\n\t\t\tpreSearch = settings.oPreviousSearch,\n\t\t\tpreColSearch = settings.aoPreSearchCols,\n\t\t\ti, data = [], dataProp, column, columnSearch,\n\t\t\tsort = _fnSortFlatten( settings ),\n\t\t\tdisplayStart = settings._iDisplayStart,\n\t\t\tdisplayLength = features.bPaginate !== false ?\n\t\t\t\tsettings._iDisplayLength :\n\t\t\t\t-1;\n\t\n\t\tvar param = function ( name, value ) {\n\t\t\tdata.push( { 'name': name, 'value': value } );\n\t\t};\n\t\n\t\t// DataTables 1.9- compatible method\n\t\tparam( 'sEcho',          settings.iDraw );\n\t\tparam( 'iColumns',       columnCount );\n\t\tparam( 'sColumns',       _pluck( columns, 'sName' ).join(',') );\n\t\tparam( 'iDisplayStart',  displayStart );\n\t\tparam( 'iDisplayLength', displayLength );\n\t\n\t\t// DataTables 1.10+ method\n\t\tvar d = {\n\t\t\tdraw:    settings.iDraw,\n\t\t\tcolumns: [],\n\t\t\torder:   [],\n\t\t\tstart:   displayStart,\n\t\t\tlength:  displayLength,\n\t\t\tsearch:  {\n\t\t\t\tvalue: preSearch.sSearch,\n\t\t\t\tregex: preSearch.bRegex\n\t\t\t}\n\t\t};\n\t\n\t\tfor ( i=0 ; i<columnCount ; i++ ) {\n\t\t\tcolumn = columns[i];\n\t\t\tcolumnSearch = preColSearch[i];\n\t\t\tdataProp = typeof column.mData==\"function\" ? 'function' : column.mData ;\n\t\n\t\t\td.columns.push( {\n\t\t\t\tdata:       dataProp,\n\t\t\t\tname:       column.sName,\n\t\t\t\tsearchable: column.bSearchable,\n\t\t\t\torderable:  column.bSortable,\n\t\t\t\tsearch:     {\n\t\t\t\t\tvalue: columnSearch.sSearch,\n\t\t\t\t\tregex: columnSearch.bRegex\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\tparam( \"mDataProp_\"+i, dataProp );\n\t\n\t\t\tif ( features.bFilter ) {\n\t\t\t\tparam( 'sSearch_'+i,     columnSearch.sSearch );\n\t\t\t\tparam( 'bRegex_'+i,      columnSearch.bRegex );\n\t\t\t\tparam( 'bSearchable_'+i, column.bSearchable );\n\t\t\t}\n\t\n\t\t\tif ( features.bSort ) {\n\t\t\t\tparam( 'bSortable_'+i, column.bSortable );\n\t\t\t}\n\t\t}\n\t\n\t\tif ( features.bFilter ) {\n\t\t\tparam( 'sSearch', preSearch.sSearch );\n\t\t\tparam( 'bRegex', preSearch.bRegex );\n\t\t}\n\t\n\t\tif ( features.bSort ) {\n\t\t\t$.each( sort, function ( i, val ) {\n\t\t\t\td.order.push( { column: val.col, dir: val.dir } );\n\t\n\t\t\t\tparam( 'iSortCol_'+i, val.col );\n\t\t\t\tparam( 'sSortDir_'+i, val.dir );\n\t\t\t} );\n\t\n\t\t\tparam( 'iSortingCols', sort.length );\n\t\t}\n\t\n\t\t// If the legacy.ajax parameter is null, then we automatically decide which\n\t\t// form to use, based on sAjaxSource\n\t\tvar legacy = DataTable.ext.legacy.ajax;\n\t\tif ( legacy === null ) {\n\t\t\treturn settings.sAjaxSource ? data : d;\n\t\t}\n\t\n\t\t// Otherwise, if legacy has been specified then we use that to decide on the\n\t\t// form\n\t\treturn legacy ? data : d;\n\t}\n\t\n\t\n\t/**\n\t * Data the data from the server (nuking the old) and redraw the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} json json data return from the server.\n\t *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n\t *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n\t *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n\t *  @param {array} json.aaData The data to display on this page\n\t *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxUpdateDraw ( settings, json )\n\t{\n\t\t// v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.\n\t\t// Support both\n\t\tvar compat = function ( old, modern ) {\n\t\t\treturn json[old] !== undefined ? json[old] : json[modern];\n\t\t};\n\t\n\t\tvar data = _fnAjaxDataSrc( settings, json );\n\t\tvar draw            = compat( 'sEcho',                'draw' );\n\t\tvar recordsTotal    = compat( 'iTotalRecords',        'recordsTotal' );\n\t\tvar recordsFiltered = compat( 'iTotalDisplayRecords', 'recordsFiltered' );\n\t\n\t\tif ( draw !== undefined ) {\n\t\t\t// Protect against out of sequence returns\n\t\t\tif ( draw*1 < settings.iDraw ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsettings.iDraw = draw * 1;\n\t\t}\n\t\n\t\t// No data in returned object, so rather than an array, we show an empty table\n\t\tif ( ! data ) {\n\t\t\tdata = [];\n\t\t}\n\t\n\t\t_fnClearTable( settings );\n\t\tsettings._iRecordsTotal   = parseInt(recordsTotal, 10);\n\t\tsettings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n\t\n\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t_fnAddData( settings, data[i] );\n\t\t}\n\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t\n\t\t_fnDraw( settings, true );\n\t\n\t\tif ( ! settings._bInitComplete ) {\n\t\t\t_fnInitComplete( settings, json );\n\t\t}\n\t\n\t\t_fnProcessingDisplay( settings, false );\n\t}\n\t\n\t\n\t/**\n\t * Get the data from the JSON data source to use for drawing a table. Using\n\t * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n\t * source object, or from a processing function.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param  {object} json Data source object / array from the server\n\t *  @return {array} Array of data to use\n\t */\n\t function _fnAjaxDataSrc ( oSettings, json, write )\n\t {\n\t\tvar dataSrc = $.isPlainObject( oSettings.ajax ) && oSettings.ajax.dataSrc !== undefined ?\n\t\t\toSettings.ajax.dataSrc :\n\t\t\toSettings.sAjaxDataProp; // Compatibility with 1.9-.\n\t\n\t\tif ( ! write ) {\n\t\t\tif ( dataSrc === 'data' ) {\n\t\t\t\t// If the default, then we still want to support the old style, and safely ignore\n\t\t\t\t// it if possible\n\t\t\t\treturn json.aaData || json[dataSrc];\n\t\t\t}\n\t\n\t\t\treturn dataSrc !== \"\" ?\n\t\t\t\t_fnGetObjectDataFn( dataSrc )( json ) :\n\t\t\t\tjson;\n\t\t}\n\t\n\t\t// set\n\t\t_fnSetObjectDataFn( dataSrc )( json, write );\n\t}\n\t\n\t/**\n\t * Generate the node required for filtering text\n\t *  @returns {node} Filter control element\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlFilter ( settings )\n\t{\n\t\tvar classes = settings.oClasses;\n\t\tvar tableId = settings.sTableId;\n\t\tvar language = settings.oLanguage;\n\t\tvar previousSearch = settings.oPreviousSearch;\n\t\tvar features = settings.aanFeatures;\n\t\tvar input = '<input type=\"search\" class=\"'+classes.sFilterInput+'\"/>';\n\t\n\t\tvar str = language.sSearch;\n\t\tstr = str.match(/_INPUT_/) ?\n\t\t\tstr.replace('_INPUT_', input) :\n\t\t\tstr+input;\n\t\n\t\tvar filter = $('<div/>', {\n\t\t\t\t'id': ! features.f ? tableId+'_filter' : null,\n\t\t\t\t'class': classes.sFilter\n\t\t\t} )\n\t\t\t.append( $('<label/>' ).append( str ) );\n\t\n\t\tvar searchFn = function(event) {\n\t\t\t/* Update all other filter input elements for the new display */\n\t\t\tvar n = features.f;\n\t\t\tvar val = !this.value ? \"\" : this.value; // mental IE8 fix :-(\n\t\t\tif(previousSearch.return && event.key !== \"Enter\") {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t/* Now do the filter */\n\t\t\tif ( val != previousSearch.sSearch ) {\n\t\t\t\t_fnFilterComplete( settings, {\n\t\t\t\t\t\"sSearch\": val,\n\t\t\t\t\t\"bRegex\": previousSearch.bRegex,\n\t\t\t\t\t\"bSmart\": previousSearch.bSmart ,\n\t\t\t\t\t\"bCaseInsensitive\": previousSearch.bCaseInsensitive,\n\t\t\t\t\t\"return\": previousSearch.return\n\t\t\t\t} );\n\t\n\t\t\t\t// Need to redraw, without resorting\n\t\t\t\tsettings._iDisplayStart = 0;\n\t\t\t\t_fnDraw( settings );\n\t\t\t}\n\t\t};\n\t\n\t\tvar searchDelay = settings.searchDelay !== null ?\n\t\t\tsettings.searchDelay :\n\t\t\t_fnDataSource( settings ) === 'ssp' ?\n\t\t\t\t400 :\n\t\t\t\t0;\n\t\n\t\tvar jqFilter = $('input', filter)\n\t\t\t.val( previousSearch.sSearch )\n\t\t\t.attr( 'placeholder', language.sSearchPlaceholder )\n\t\t\t.on(\n\t\t\t\t'keyup.DT search.DT input.DT paste.DT cut.DT',\n\t\t\t\tsearchDelay ?\n\t\t\t\t\t_fnThrottle( searchFn, searchDelay ) :\n\t\t\t\t\tsearchFn\n\t\t\t)\n\t\t\t.on( 'mouseup', function(e) {\n\t\t\t\t// Edge fix! Edge 17 does not trigger anything other than mouse events when clicking\n\t\t\t\t// on the clear icon (Edge bug 17584515). This is safe in other browsers as `searchFn`\n\t\t\t\t// checks the value to see if it has changed. In other browsers it won't have.\n\t\t\t\tsetTimeout( function () {\n\t\t\t\t\tsearchFn.call(jqFilter[0], e);\n\t\t\t\t}, 10);\n\t\t\t} )\n\t\t\t.on( 'keypress.DT', function(e) {\n\t\t\t\t/* Prevent form submission */\n\t\t\t\tif ( e.keyCode == 13 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.attr('aria-controls', tableId);\n\t\n\t\t// Update the input elements whenever the table is filtered\n\t\t$(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {\n\t\t\tif ( settings === s ) {\n\t\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t\t// inside an iframe or frame...\n\t\t\t\ttry {\n\t\t\t\t\tif ( jqFilter[0] !== document.activeElement ) {\n\t\t\t\t\t\tjqFilter.val( previousSearch.sSearch );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch ( e ) {}\n\t\t\t}\n\t\t} );\n\t\n\t\treturn filter[0];\n\t}\n\t\n\t\n\t/**\n\t * Filter the table using both the global filter and column based filtering\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} oSearch search information\n\t *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterComplete ( oSettings, oInput, iForce )\n\t{\n\t\tvar oPrevSearch = oSettings.oPreviousSearch;\n\t\tvar aoPrevSearch = oSettings.aoPreSearchCols;\n\t\tvar fnSaveFilter = function ( oFilter ) {\n\t\t\t/* Save the filtering values */\n\t\t\toPrevSearch.sSearch = oFilter.sSearch;\n\t\t\toPrevSearch.bRegex = oFilter.bRegex;\n\t\t\toPrevSearch.bSmart = oFilter.bSmart;\n\t\t\toPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;\n\t\t\toPrevSearch.return = oFilter.return;\n\t\t};\n\t\tvar fnRegex = function ( o ) {\n\t\t\t// Backwards compatibility with the bEscapeRegex option\n\t\t\treturn o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;\n\t\t};\n\t\n\t\t// Resolve any column types that are unknown due to addition or invalidation\n\t\t// @todo As per sort - can this be moved into an event handler?\n\t\t_fnColumnTypes( oSettings );\n\t\n\t\t/* In server-side processing all filtering is done by the server, so no point hanging around here */\n\t\tif ( _fnDataSource( oSettings ) != 'ssp' )\n\t\t{\n\t\t\t/* Global filter */\n\t\t\t_fnFilter( oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive, oInput.return );\n\t\t\tfnSaveFilter( oInput );\n\t\n\t\t\t/* Now do the individual column filter */\n\t\t\tfor ( var i=0 ; i<aoPrevSearch.length ; i++ )\n\t\t\t{\n\t\t\t\t_fnFilterColumn( oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]),\n\t\t\t\t\taoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive );\n\t\t\t}\n\t\n\t\t\t/* Custom filtering */\n\t\t\t_fnFilterCustom( oSettings );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfnSaveFilter( oInput );\n\t\t}\n\t\n\t\t/* Tell the draw function we have been filtering */\n\t\toSettings.bFiltered = true;\n\t\t_fnCallbackFire( oSettings, null, 'search', [oSettings] );\n\t}\n\t\n\t\n\t/**\n\t * Apply custom filtering functions\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterCustom( settings )\n\t{\n\t\tvar filters = DataTable.ext.search;\n\t\tvar displayRows = settings.aiDisplay;\n\t\tvar row, rowIdx;\n\t\n\t\tfor ( var i=0, ien=filters.length ; i<ien ; i++ ) {\n\t\t\tvar rows = [];\n\t\n\t\t\t// Loop over each row and see if it should be included\n\t\t\tfor ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {\n\t\t\t\trowIdx = displayRows[ j ];\n\t\t\t\trow = settings.aoData[ rowIdx ];\n\t\n\t\t\t\tif ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {\n\t\t\t\t\trows.push( rowIdx );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// So the array reference doesn't break set the results into the\n\t\t\t// existing array\n\t\t\tdisplayRows.length = 0;\n\t\t\t$.merge( displayRows, rows );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Filter the table on a per-column basis\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sInput string to filter on\n\t *  @param {int} iColumn column to filter\n\t *  @param {bool} bRegex treat search string as a regular expression or not\n\t *  @param {bool} bSmart use smart filtering or not\n\t *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterColumn ( settings, searchStr, colIdx, regex, smart, caseInsensitive )\n\t{\n\t\tif ( searchStr === '' ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar data;\n\t\tvar out = [];\n\t\tvar display = settings.aiDisplay;\n\t\tvar rpSearch = _fnFilterCreateSearch( searchStr, regex, smart, caseInsensitive );\n\t\n\t\tfor ( var i=0 ; i<display.length ; i++ ) {\n\t\t\tdata = settings.aoData[ display[i] ]._aFilterData[ colIdx ];\n\t\n\t\t\tif ( rpSearch.test( data ) ) {\n\t\t\t\tout.push( display[i] );\n\t\t\t}\n\t\t}\n\t\n\t\tsettings.aiDisplay = out;\n\t}\n\t\n\t\n\t/**\n\t * Filter the data table based on user input and draw the table\n\t *  @param {object} settings dataTables settings object\n\t *  @param {string} input string to filter on\n\t *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)\n\t *  @param {bool} regex treat as a regular expression or not\n\t *  @param {bool} smart perform smart filtering or not\n\t *  @param {bool} caseInsensitive Do case insensitive matching or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilter( settings, input, force, regex, smart, caseInsensitive )\n\t{\n\t\tvar rpSearch = _fnFilterCreateSearch( input, regex, smart, caseInsensitive );\n\t\tvar prevSearch = settings.oPreviousSearch.sSearch;\n\t\tvar displayMaster = settings.aiDisplayMaster;\n\t\tvar display, invalidated, i;\n\t\tvar filtered = [];\n\t\n\t\t// Need to take account of custom filtering functions - always filter\n\t\tif ( DataTable.ext.search.length !== 0 ) {\n\t\t\tforce = true;\n\t\t}\n\t\n\t\t// Check if any of the rows were invalidated\n\t\tinvalidated = _fnFilterData( settings );\n\t\n\t\t// If the input is blank - we just want the full data set\n\t\tif ( input.length <= 0 ) {\n\t\t\tsettings.aiDisplay = displayMaster.slice();\n\t\t}\n\t\telse {\n\t\t\t// New search - start from the master array\n\t\t\tif ( invalidated ||\n\t\t\t\t force ||\n\t\t\t\t regex ||\n\t\t\t\t prevSearch.length > input.length ||\n\t\t\t\t input.indexOf(prevSearch) !== 0 ||\n\t\t\t\t settings.bSorted // On resort, the display master needs to be\n\t\t\t\t                  // re-filtered since indexes will have changed\n\t\t\t) {\n\t\t\t\tsettings.aiDisplay = displayMaster.slice();\n\t\t\t}\n\t\n\t\t\t// Search the display array\n\t\t\tdisplay = settings.aiDisplay;\n\t\n\t\t\tfor ( i=0 ; i<display.length ; i++ ) {\n\t\t\t\tif ( rpSearch.test( settings.aoData[ display[i] ]._sFilterRow ) ) {\n\t\t\t\t\tfiltered.push( display[i] );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tsettings.aiDisplay = filtered;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Build a regular expression object suitable for searching a table\n\t *  @param {string} sSearch string to search for\n\t *  @param {bool} bRegex treat as a regular expression or not\n\t *  @param {bool} bSmart perform smart filtering or not\n\t *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n\t *  @returns {RegExp} constructed object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterCreateSearch( search, regex, smart, caseInsensitive )\n\t{\n\t\tsearch = regex ?\n\t\t\tsearch :\n\t\t\t_fnEscapeRegex( search );\n\t\t\n\t\tif ( smart ) {\n\t\t\t/* For smart filtering we want to allow the search to work regardless of\n\t\t\t * word order. We also want double quoted text to be preserved, so word\n\t\t\t * order is important - a la google. So this is what we want to\n\t\t\t * generate:\n\t\t\t * \n\t\t\t * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n\t\t\t */\n\t\t\tvar a = $.map( search.match( /\"[^\"]+\"|[^ ]+/g ) || [''], function ( word ) {\n\t\t\t\tif ( word.charAt(0) === '\"' ) {\n\t\t\t\t\tvar m = word.match( /^\"(.*)\"$/ );\n\t\t\t\t\tword = m ? m[1] : word;\n\t\t\t\t}\n\t\n\t\t\t\treturn word.replace('\"', '');\n\t\t\t} );\n\t\n\t\t\tsearch = '^(?=.*?'+a.join( ')(?=.*?' )+').*$';\n\t\t}\n\t\n\t\treturn new RegExp( search, caseInsensitive ? 'i' : '' );\n\t}\n\t\n\t\n\t/**\n\t * Escape a string such that it can be used in a regular expression\n\t *  @param {string} sVal string to escape\n\t *  @returns {string} escaped string\n\t *  @memberof DataTable#oApi\n\t */\n\tvar _fnEscapeRegex = DataTable.util.escapeRegex;\n\t\n\tvar __filter_div = $('<div>')[0];\n\tvar __filter_div_textContent = __filter_div.textContent !== undefined;\n\t\n\t// Update the filtering data for each row if needed (by invalidation or first run)\n\tfunction _fnFilterData ( settings )\n\t{\n\t\tvar columns = settings.aoColumns;\n\t\tvar column;\n\t\tvar i, j, ien, jen, filterData, cellData, row;\n\t\tvar wasInvalidated = false;\n\t\n\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\trow = settings.aoData[i];\n\t\n\t\t\tif ( ! row._aFilterData ) {\n\t\t\t\tfilterData = [];\n\t\n\t\t\t\tfor ( j=0, jen=columns.length ; j<jen ; j++ ) {\n\t\t\t\t\tcolumn = columns[j];\n\t\n\t\t\t\t\tif ( column.bSearchable ) {\n\t\t\t\t\t\tcellData = _fnGetCellData( settings, i, j, 'filter' );\n\t\n\t\t\t\t\t\t// Search in DataTables 1.10 is string based. In 1.11 this\n\t\t\t\t\t\t// should be altered to also allow strict type checking.\n\t\t\t\t\t\tif ( cellData === null ) {\n\t\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( typeof cellData !== 'string' && cellData.toString ) {\n\t\t\t\t\t\t\tcellData = cellData.toString();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If it looks like there is an HTML entity in the string,\n\t\t\t\t\t// attempt to decode it so sorting works as expected. Note that\n\t\t\t\t\t// we could use a single line of jQuery to do this, but the DOM\n\t\t\t\t\t// method used here is much faster http://jsperf.com/html-decode\n\t\t\t\t\tif ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {\n\t\t\t\t\t\t__filter_div.innerHTML = cellData;\n\t\t\t\t\t\tcellData = __filter_div_textContent ?\n\t\t\t\t\t\t\t__filter_div.textContent :\n\t\t\t\t\t\t\t__filter_div.innerText;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( cellData.replace ) {\n\t\t\t\t\t\tcellData = cellData.replace(/[\\r\\n\\u2028]/g, '');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfilterData.push( cellData );\n\t\t\t\t}\n\t\n\t\t\t\trow._aFilterData = filterData;\n\t\t\t\trow._sFilterRow = filterData.join('  ');\n\t\t\t\twasInvalidated = true;\n\t\t\t}\n\t\t}\n\t\n\t\treturn wasInvalidated;\n\t}\n\t\n\t\n\t/**\n\t * Convert from the internal Hungarian notation to camelCase for external\n\t * interaction\n\t *  @param {object} obj Object to convert\n\t *  @returns {object} Inverted object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSearchToCamel ( obj )\n\t{\n\t\treturn {\n\t\t\tsearch:          obj.sSearch,\n\t\t\tsmart:           obj.bSmart,\n\t\t\tregex:           obj.bRegex,\n\t\t\tcaseInsensitive: obj.bCaseInsensitive\n\t\t};\n\t}\n\t\n\t\n\t\n\t/**\n\t * Convert from camelCase notation to the internal Hungarian. We could use the\n\t * Hungarian convert function here, but this is cleaner\n\t *  @param {object} obj Object to convert\n\t *  @returns {object} Inverted object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSearchToHung ( obj )\n\t{\n\t\treturn {\n\t\t\tsSearch:          obj.search,\n\t\t\tbSmart:           obj.smart,\n\t\t\tbRegex:           obj.regex,\n\t\t\tbCaseInsensitive: obj.caseInsensitive\n\t\t};\n\t}\n\t\n\t/**\n\t * Generate the node required for the info display\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {node} Information element\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlInfo ( settings )\n\t{\n\t\tvar\n\t\t\ttid = settings.sTableId,\n\t\t\tnodes = settings.aanFeatures.i,\n\t\t\tn = $('<div/>', {\n\t\t\t\t'class': settings.oClasses.sInfo,\n\t\t\t\t'id': ! nodes ? tid+'_info' : null\n\t\t\t} );\n\t\n\t\tif ( ! nodes ) {\n\t\t\t// Update display on each draw\n\t\t\tsettings.aoDrawCallback.push( {\n\t\t\t\t\"fn\": _fnUpdateInfo,\n\t\t\t\t\"sName\": \"information\"\n\t\t\t} );\n\t\n\t\t\tn\n\t\t\t\t.attr( 'role', 'status' )\n\t\t\t\t.attr( 'aria-live', 'polite' );\n\t\n\t\t\t// Table is described by our info div\n\t\t\t$(settings.nTable).attr( 'aria-describedby', tid+'_info' );\n\t\t}\n\t\n\t\treturn n[0];\n\t}\n\t\n\t\n\t/**\n\t * Update the information elements in the display\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnUpdateInfo ( settings )\n\t{\n\t\t/* Show information about the table */\n\t\tvar nodes = settings.aanFeatures.i;\n\t\tif ( nodes.length === 0 ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar\n\t\t\tlang  = settings.oLanguage,\n\t\t\tstart = settings._iDisplayStart+1,\n\t\t\tend   = settings.fnDisplayEnd(),\n\t\t\tmax   = settings.fnRecordsTotal(),\n\t\t\ttotal = settings.fnRecordsDisplay(),\n\t\t\tout   = total ?\n\t\t\t\tlang.sInfo :\n\t\t\t\tlang.sInfoEmpty;\n\t\n\t\tif ( total !== max ) {\n\t\t\t/* Record set after filtering */\n\t\t\tout += ' ' + lang.sInfoFiltered;\n\t\t}\n\t\n\t\t// Convert the macros\n\t\tout += lang.sInfoPostFix;\n\t\tout = _fnInfoMacros( settings, out );\n\t\n\t\tvar callback = lang.fnInfoCallback;\n\t\tif ( callback !== null ) {\n\t\t\tout = callback.call( settings.oInstance,\n\t\t\t\tsettings, start, end, max, total, out\n\t\t\t);\n\t\t}\n\t\n\t\t$(nodes).html( out );\n\t}\n\t\n\t\n\tfunction _fnInfoMacros ( settings, str )\n\t{\n\t\t// When infinite scrolling, we are always starting at 1. _iDisplayStart is used only\n\t\t// internally\n\t\tvar\n\t\t\tformatter  = settings.fnFormatNumber,\n\t\t\tstart      = settings._iDisplayStart+1,\n\t\t\tlen        = settings._iDisplayLength,\n\t\t\tvis        = settings.fnRecordsDisplay(),\n\t\t\tall        = len === -1;\n\t\n\t\treturn str.\n\t\t\treplace(/_START_/g, formatter.call( settings, start ) ).\n\t\t\treplace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).\n\t\t\treplace(/_MAX_/g,   formatter.call( settings, settings.fnRecordsTotal() ) ).\n\t\t\treplace(/_TOTAL_/g, formatter.call( settings, vis ) ).\n\t\t\treplace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).\n\t\t\treplace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) );\n\t}\n\t\n\t\n\t\n\t/**\n\t * Draw the table for the first time, adding all required features\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnInitialise ( settings )\n\t{\n\t\tvar i, iLen, iAjaxStart=settings.iInitDisplayStart;\n\t\tvar columns = settings.aoColumns, column;\n\t\tvar features = settings.oFeatures;\n\t\tvar deferLoading = settings.bDeferLoading; // value modified by the draw\n\t\n\t\t/* Ensure that the table data is fully initialised */\n\t\tif ( ! settings.bInitialised ) {\n\t\t\tsetTimeout( function(){ _fnInitialise( settings ); }, 200 );\n\t\t\treturn;\n\t\t}\n\t\n\t\t/* Show the display HTML options */\n\t\t_fnAddOptionsHtml( settings );\n\t\n\t\t/* Build and draw the header / footer for the table */\n\t\t_fnBuildHead( settings );\n\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t_fnDrawHead( settings, settings.aoFooter );\n\t\n\t\t/* Okay to show that something is going on now */\n\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t/* Calculate sizes for columns */\n\t\tif ( features.bAutoWidth ) {\n\t\t\t_fnCalculateColumnWidths( settings );\n\t\t}\n\t\n\t\tfor ( i=0, iLen=columns.length ; i<iLen ; i++ ) {\n\t\t\tcolumn = columns[i];\n\t\n\t\t\tif ( column.sWidth ) {\n\t\t\t\tcolumn.nTh.style.width = _fnStringToCss( column.sWidth );\n\t\t\t}\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'preInit', [settings] );\n\t\n\t\t// If there is default sorting required - let's do it. The sort function\n\t\t// will do the drawing for us. Otherwise we draw the table regardless of the\n\t\t// Ajax source - this allows the table to look initialised for Ajax sourcing\n\t\t// data (show 'loading' message possibly)\n\t\t_fnReDraw( settings );\n\t\n\t\t// Server-side processing init complete is done by _fnAjaxUpdateDraw\n\t\tvar dataSrc = _fnDataSource( settings );\n\t\tif ( dataSrc != 'ssp' || deferLoading ) {\n\t\t\t// if there is an ajax source load the data\n\t\t\tif ( dataSrc == 'ajax' ) {\n\t\t\t\t_fnBuildAjax( settings, [], function(json) {\n\t\t\t\t\tvar aData = _fnAjaxDataSrc( settings, json );\n\t\n\t\t\t\t\t// Got the data - add it to the table\n\t\t\t\t\tfor ( i=0 ; i<aData.length ; i++ ) {\n\t\t\t\t\t\t_fnAddData( settings, aData[i] );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Reset the init display for cookie saving. We've already done\n\t\t\t\t\t// a filter, and therefore cleared it before. So we need to make\n\t\t\t\t\t// it appear 'fresh'\n\t\t\t\t\tsettings.iInitDisplayStart = iAjaxStart;\n\t\n\t\t\t\t\t_fnReDraw( settings );\n\t\n\t\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t\t_fnInitComplete( settings, json );\n\t\t\t\t}, settings );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t_fnInitComplete( settings );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Draw the table for the first time, adding all required features\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} [json] JSON from the server that completed the table, if using Ajax source\n\t *    with client-side processing (optional)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnInitComplete ( settings, json )\n\t{\n\t\tsettings._bInitComplete = true;\n\t\n\t\t// When data was added after the initialisation (data or Ajax) we need to\n\t\t// calculate the column sizing\n\t\tif ( json || settings.oInit.aaData ) {\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'plugin-init', [settings, json] );\n\t\t_fnCallbackFire( settings, 'aoInitComplete', 'init', [settings, json] );\n\t}\n\t\n\t\n\tfunction _fnLengthChange ( settings, val )\n\t{\n\t\tvar len = parseInt( val, 10 );\n\t\tsettings._iDisplayLength = len;\n\t\n\t\t_fnLengthOverflow( settings );\n\t\n\t\t// Fire length change event\n\t\t_fnCallbackFire( settings, null, 'length', [settings, len] );\n\t}\n\t\n\t\n\t/**\n\t * Generate the node required for user display length changing\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Display length feature node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlLength ( settings )\n\t{\n\t\tvar\n\t\t\tclasses  = settings.oClasses,\n\t\t\ttableId  = settings.sTableId,\n\t\t\tmenu     = settings.aLengthMenu,\n\t\t\td2       = Array.isArray( menu[0] ),\n\t\t\tlengths  = d2 ? menu[0] : menu,\n\t\t\tlanguage = d2 ? menu[1] : menu;\n\t\n\t\tvar select = $('<select/>', {\n\t\t\t'name':          tableId+'_length',\n\t\t\t'aria-controls': tableId,\n\t\t\t'class':         classes.sLengthSelect\n\t\t} );\n\t\n\t\tfor ( var i=0, ien=lengths.length ; i<ien ; i++ ) {\n\t\t\tselect[0][ i ] = new Option(\n\t\t\t\ttypeof language[i] === 'number' ?\n\t\t\t\t\tsettings.fnFormatNumber( language[i] ) :\n\t\t\t\t\tlanguage[i],\n\t\t\t\tlengths[i]\n\t\t\t);\n\t\t}\n\t\n\t\tvar div = $('<div><label/></div>').addClass( classes.sLength );\n\t\tif ( ! settings.aanFeatures.l ) {\n\t\t\tdiv[0].id = tableId+'_length';\n\t\t}\n\t\n\t\tdiv.children().append(\n\t\t\tsettings.oLanguage.sLengthMenu.replace( '_MENU_', select[0].outerHTML )\n\t\t);\n\t\n\t\t// Can't use `select` variable as user might provide their own and the\n\t\t// reference is broken by the use of outerHTML\n\t\t$('select', div)\n\t\t\t.val( settings._iDisplayLength )\n\t\t\t.on( 'change.DT', function(e) {\n\t\t\t\t_fnLengthChange( settings, $(this).val() );\n\t\t\t\t_fnDraw( settings );\n\t\t\t} );\n\t\n\t\t// Update node value whenever anything changes the table's length\n\t\t$(settings.nTable).on( 'length.dt.DT', function (e, s, len) {\n\t\t\tif ( settings === s ) {\n\t\t\t\t$('select', div).val( len );\n\t\t\t}\n\t\t} );\n\t\n\t\treturn div[0];\n\t}\n\t\n\t\n\t\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Note that most of the paging logic is done in\n\t * DataTable.ext.pager\n\t */\n\t\n\t/**\n\t * Generate the node required for default pagination\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {node} Pagination feature node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlPaginate ( settings )\n\t{\n\t\tvar\n\t\t\ttype   = settings.sPaginationType,\n\t\t\tplugin = DataTable.ext.pager[ type ],\n\t\t\tmodern = typeof plugin === 'function',\n\t\t\tredraw = function( settings ) {\n\t\t\t\t_fnDraw( settings );\n\t\t\t},\n\t\t\tnode = $('<div/>').addClass( settings.oClasses.sPaging + type )[0],\n\t\t\tfeatures = settings.aanFeatures;\n\t\n\t\tif ( ! modern ) {\n\t\t\tplugin.fnInit( settings, node, redraw );\n\t\t}\n\t\n\t\t/* Add a draw callback for the pagination on first instance, to update the paging display */\n\t\tif ( ! features.p )\n\t\t{\n\t\t\tnode.id = settings.sTableId+'_paginate';\n\t\n\t\t\tsettings.aoDrawCallback.push( {\n\t\t\t\t\"fn\": function( settings ) {\n\t\t\t\t\tif ( modern ) {\n\t\t\t\t\t\tvar\n\t\t\t\t\t\t\tstart      = settings._iDisplayStart,\n\t\t\t\t\t\t\tlen        = settings._iDisplayLength,\n\t\t\t\t\t\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\t\t\t\t\t\tall        = len === -1,\n\t\t\t\t\t\t\tpage = all ? 0 : Math.ceil( start / len ),\n\t\t\t\t\t\t\tpages = all ? 1 : Math.ceil( visRecords / len ),\n\t\t\t\t\t\t\tbuttons = plugin(page, pages),\n\t\t\t\t\t\t\ti, ien;\n\t\n\t\t\t\t\t\tfor ( i=0, ien=features.p.length ; i<ien ; i++ ) {\n\t\t\t\t\t\t\t_fnRenderer( settings, 'pageButton' )(\n\t\t\t\t\t\t\t\tsettings, features.p[i], i, buttons, page, pages\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tplugin.fnUpdate( settings, redraw );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"sName\": \"pagination\"\n\t\t\t} );\n\t\t}\n\t\n\t\treturn node;\n\t}\n\t\n\t\n\t/**\n\t * Alter the display settings to change the page\n\t *  @param {object} settings DataTables settings object\n\t *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n\t *    \"next\" or \"last\" or page number to jump to (integer)\n\t *  @param [bool] redraw Automatically draw the update or not\n\t *  @returns {bool} true page has changed, false - no change\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnPageChange ( settings, action, redraw )\n\t{\n\t\tvar\n\t\t\tstart     = settings._iDisplayStart,\n\t\t\tlen       = settings._iDisplayLength,\n\t\t\trecords   = settings.fnRecordsDisplay();\n\t\n\t\tif ( records === 0 || len === -1 )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\telse if ( typeof action === \"number\" )\n\t\t{\n\t\t\tstart = action * len;\n\t\n\t\t\tif ( start > records )\n\t\t\t{\n\t\t\t\tstart = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"first\" )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\telse if ( action == \"previous\" )\n\t\t{\n\t\t\tstart = len >= 0 ?\n\t\t\t\tstart - len :\n\t\t\t\t0;\n\t\n\t\t\tif ( start < 0 )\n\t\t\t{\n\t\t\t  start = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"next\" )\n\t\t{\n\t\t\tif ( start + len < records )\n\t\t\t{\n\t\t\t\tstart += len;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"last\" )\n\t\t{\n\t\t\tstart = Math.floor( (records-1) / len) * len;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_fnLog( settings, 0, \"Unknown paging action: \"+action, 5 );\n\t\t}\n\t\n\t\tvar changed = settings._iDisplayStart !== start;\n\t\tsettings._iDisplayStart = start;\n\t\n\t\tif ( changed ) {\n\t\t\t_fnCallbackFire( settings, null, 'page', [settings] );\n\t\n\t\t\tif ( redraw ) {\n\t\t\t\t_fnDraw( settings );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// No change event - paging was called, but no change\n\t\t\t_fnCallbackFire( settings, null, 'page-nc', [settings] );\n\t\t}\n\t\n\t\treturn changed;\n\t}\n\t\n\t\n\t\n\t/**\n\t * Generate the node required for the processing node\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Processing element\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlProcessing ( settings )\n\t{\n\t\treturn $('<div/>', {\n\t\t\t\t'id': ! settings.aanFeatures.r ? settings.sTableId+'_processing' : null,\n\t\t\t\t'class': settings.oClasses.sProcessing,\n\t\t\t\t'role': 'status'\n\t\t\t} )\n\t\t\t.html( settings.oLanguage.sProcessing )\n\t\t\t.append('<div><div></div><div></div><div></div><div></div></div>')\n\t\t\t.insertBefore( settings.nTable )[0];\n\t}\n\t\n\t\n\t/**\n\t * Display or hide the processing indicator\n\t *  @param {object} settings dataTables settings object\n\t *  @param {bool} show Show the processing indicator (true) or not (false)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnProcessingDisplay ( settings, show )\n\t{\n\t\tif ( settings.oFeatures.bProcessing ) {\n\t\t\t$(settings.aanFeatures.r).css( 'display', show ? 'block' : 'none' );\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'processing', [settings, show] );\n\t}\n\t\n\t/**\n\t * Add any control elements for the table - specifically scrolling\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Node to add to the DOM\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlTable ( settings )\n\t{\n\t\tvar table = $(settings.nTable);\n\t\n\t\t// Scrolling from here on in\n\t\tvar scroll = settings.oScroll;\n\t\n\t\tif ( scroll.sX === '' && scroll.sY === '' ) {\n\t\t\treturn settings.nTable;\n\t\t}\n\t\n\t\tvar scrollX = scroll.sX;\n\t\tvar scrollY = scroll.sY;\n\t\tvar classes = settings.oClasses;\n\t\tvar caption = table.children('caption');\n\t\tvar captionSide = caption.length ? caption[0]._captionSide : null;\n\t\tvar headerClone = $( table[0].cloneNode(false) );\n\t\tvar footerClone = $( table[0].cloneNode(false) );\n\t\tvar footer = table.children('tfoot');\n\t\tvar _div = '<div/>';\n\t\tvar size = function ( s ) {\n\t\t\treturn !s ? null : _fnStringToCss( s );\n\t\t};\n\t\n\t\tif ( ! footer.length ) {\n\t\t\tfooter = null;\n\t\t}\n\t\n\t\t/*\n\t\t * The HTML structure that we want to generate in this function is:\n\t\t *  div - scroller\n\t\t *    div - scroll head\n\t\t *      div - scroll head inner\n\t\t *        table - scroll head table\n\t\t *          thead - thead\n\t\t *    div - scroll body\n\t\t *      table - table (master table)\n\t\t *        thead - thead clone for sizing\n\t\t *        tbody - tbody\n\t\t *    div - scroll foot\n\t\t *      div - scroll foot inner\n\t\t *        table - scroll foot table\n\t\t *          tfoot - tfoot\n\t\t */\n\t\tvar scroller = $( _div, { 'class': classes.sScrollWrapper } )\n\t\t\t.append(\n\t\t\t\t$(_div, { 'class': classes.sScrollHead } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t\t} )\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$(_div, { 'class': classes.sScrollHeadInner } )\n\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\t'box-sizing': 'content-box',\n\t\t\t\t\t\t\t\twidth: scroll.sXInner || '100%'\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\theaderClone\n\t\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t\t.append( captionSide === 'top' ? caption : null )\n\t\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\t\ttable.children('thead')\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t)\n\t\t\t.append(\n\t\t\t\t$(_div, { 'class': classes.sScrollBody } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\toverflow: 'auto',\n\t\t\t\t\t\twidth: size( scrollX )\n\t\t\t\t\t} )\n\t\t\t\t\t.append( table )\n\t\t\t);\n\t\n\t\tif ( footer ) {\n\t\t\tscroller.append(\n\t\t\t\t$(_div, { 'class': classes.sScrollFoot } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t\t} )\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$(_div, { 'class': classes.sScrollFootInner } )\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\tfooterClone\n\t\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t\t.append( captionSide === 'bottom' ? caption : null )\n\t\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\t\ttable.children('tfoot')\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\n\t\tvar children = scroller.children();\n\t\tvar scrollHead = children[0];\n\t\tvar scrollBody = children[1];\n\t\tvar scrollFoot = footer ? children[2] : null;\n\t\n\t\t// When the body is scrolled, then we also want to scroll the headers\n\t\tif ( scrollX ) {\n\t\t\t$(scrollBody).on( 'scroll.DT', function (e) {\n\t\t\t\tvar scrollLeft = this.scrollLeft;\n\t\n\t\t\t\tscrollHead.scrollLeft = scrollLeft;\n\t\n\t\t\t\tif ( footer ) {\n\t\t\t\t\tscrollFoot.scrollLeft = scrollLeft;\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\n\t\t$(scrollBody).css('max-height', scrollY);\n\t\tif (! scroll.bCollapse) {\n\t\t\t$(scrollBody).css('height', scrollY);\n\t\t}\n\t\n\t\tsettings.nScrollHead = scrollHead;\n\t\tsettings.nScrollBody = scrollBody;\n\t\tsettings.nScrollFoot = scrollFoot;\n\t\n\t\t// On redraw - align columns\n\t\tsettings.aoDrawCallback.push( {\n\t\t\t\"fn\": _fnScrollDraw,\n\t\t\t\"sName\": \"scrolling\"\n\t\t} );\n\t\n\t\treturn scroller[0];\n\t}\n\t\n\t\n\t\n\t/**\n\t * Update the header, footer and body tables for resizing - i.e. column\n\t * alignment.\n\t *\n\t * Welcome to the most horrible function DataTables. The process that this\n\t * function follows is basically:\n\t *   1. Re-create the table inside the scrolling div\n\t *   2. Take live measurements from the DOM\n\t *   3. Apply the measurements to align the columns\n\t *   4. Clean up\n\t *\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnScrollDraw ( settings )\n\t{\n\t\t// Given that this is such a monster function, a lot of variables are use\n\t\t// to try and keep the minimised size as small as possible\n\t\tvar\n\t\t\tscroll         = settings.oScroll,\n\t\t\tscrollX        = scroll.sX,\n\t\t\tscrollXInner   = scroll.sXInner,\n\t\t\tscrollY        = scroll.sY,\n\t\t\tbarWidth       = scroll.iBarWidth,\n\t\t\tdivHeader      = $(settings.nScrollHead),\n\t\t\tdivHeaderStyle = divHeader[0].style,\n\t\t\tdivHeaderInner = divHeader.children('div'),\n\t\t\tdivHeaderInnerStyle = divHeaderInner[0].style,\n\t\t\tdivHeaderTable = divHeaderInner.children('table'),\n\t\t\tdivBodyEl      = settings.nScrollBody,\n\t\t\tdivBody        = $(divBodyEl),\n\t\t\tdivBodyStyle   = divBodyEl.style,\n\t\t\tdivFooter      = $(settings.nScrollFoot),\n\t\t\tdivFooterInner = divFooter.children('div'),\n\t\t\tdivFooterTable = divFooterInner.children('table'),\n\t\t\theader         = $(settings.nTHead),\n\t\t\ttable          = $(settings.nTable),\n\t\t\ttableEl        = table[0],\n\t\t\ttableStyle     = tableEl.style,\n\t\t\tfooter         = settings.nTFoot ? $(settings.nTFoot) : null,\n\t\t\tbrowser        = settings.oBrowser,\n\t\t\tie67           = browser.bScrollOversize,\n\t\t\tdtHeaderCells  = _pluck( settings.aoColumns, 'nTh' ),\n\t\t\theaderTrgEls, footerTrgEls,\n\t\t\theaderSrcEls, footerSrcEls,\n\t\t\theaderCopy, footerCopy,\n\t\t\theaderWidths=[], footerWidths=[],\n\t\t\theaderContent=[], footerContent=[],\n\t\t\tidx, correction, sanityWidth,\n\t\t\tzeroOut = function(nSizer) {\n\t\t\t\tvar style = nSizer.style;\n\t\t\t\tstyle.paddingTop = \"0\";\n\t\t\t\tstyle.paddingBottom = \"0\";\n\t\t\t\tstyle.borderTopWidth = \"0\";\n\t\t\t\tstyle.borderBottomWidth = \"0\";\n\t\t\t\tstyle.height = 0;\n\t\t\t};\n\t\n\t\t// If the scrollbar visibility has changed from the last draw, we need to\n\t\t// adjust the column sizes as the table width will have changed to account\n\t\t// for the scrollbar\n\t\tvar scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n\t\t\n\t\tif ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {\n\t\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t\treturn; // adjust column sizing will call this function again\n\t\t}\n\t\telse {\n\t\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t}\n\t\n\t\t/*\n\t\t * 1. Re-create the table inside the scrolling div\n\t\t */\n\t\n\t\t// Remove the old minimised thead and tfoot elements in the inner table\n\t\ttable.children('thead, tfoot').remove();\n\t\n\t\tif ( footer ) {\n\t\t\tfooterCopy = footer.clone().prependTo( table );\n\t\t\tfooterTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized\n\t\t\tfooterSrcEls = footerCopy.find('tr');\n\t\t\tfooterCopy.find('[id]').removeAttr('id');\n\t\t}\n\t\n\t\t// Clone the current header and footer elements and then place it into the inner table\n\t\theaderCopy = header.clone().prependTo( table );\n\t\theaderTrgEls = header.find('tr'); // original header is in its own table\n\t\theaderSrcEls = headerCopy.find('tr');\n\t\theaderCopy.find('th, td').removeAttr('tabindex');\n\t\theaderCopy.find('[id]').removeAttr('id');\n\t\n\t\n\t\t/*\n\t\t * 2. Take live measurements from the DOM - do not alter the DOM itself!\n\t\t */\n\t\n\t\t// Remove old sizing and apply the calculated column widths\n\t\t// Get the unique column headers in the newly created (cloned) header. We want to apply the\n\t\t// calculated sizes to this header\n\t\tif ( ! scrollX )\n\t\t{\n\t\t\tdivBodyStyle.width = '100%';\n\t\t\tdivHeader[0].style.width = '100%';\n\t\t}\n\t\n\t\t$.each( _fnGetUniqueThs( settings, headerCopy ), function ( i, el ) {\n\t\t\tidx = _fnVisibleToColumnIndex( settings, i );\n\t\t\tel.style.width = settings.aoColumns[idx].sWidth;\n\t\t} );\n\t\n\t\tif ( footer ) {\n\t\t\t_fnApplyToChildren( function(n) {\n\t\t\t\tn.style.width = \"\";\n\t\t\t}, footerSrcEls );\n\t\t}\n\t\n\t\t// Size the table as a whole\n\t\tsanityWidth = table.outerWidth();\n\t\tif ( scrollX === \"\" ) {\n\t\t\t// No x scrolling\n\t\t\ttableStyle.width = \"100%\";\n\t\n\t\t\t// IE7 will make the width of the table when 100% include the scrollbar\n\t\t\t// - which is shouldn't. When there is a scrollbar we need to take this\n\t\t\t// into account.\n\t\t\tif ( ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight ||\n\t\t\t\tdivBody.css('overflow-y') == \"scroll\")\n\t\t\t) {\n\t\t\t\ttableStyle.width = _fnStringToCss( table.outerWidth() - barWidth);\n\t\t\t}\n\t\n\t\t\t// Recalculate the sanity width\n\t\t\tsanityWidth = table.outerWidth();\n\t\t}\n\t\telse if ( scrollXInner !== \"\" ) {\n\t\t\t// legacy x scroll inner has been given - use it\n\t\t\ttableStyle.width = _fnStringToCss(scrollXInner);\n\t\n\t\t\t// Recalculate the sanity width\n\t\t\tsanityWidth = table.outerWidth();\n\t\t}\n\t\n\t\t// Hidden header should have zero height, so remove padding and borders. Then\n\t\t// set the width based on the real headers\n\t\n\t\t// Apply all styles in one pass\n\t\t_fnApplyToChildren( zeroOut, headerSrcEls );\n\t\n\t\t// Read all widths in next pass\n\t\t_fnApplyToChildren( function(nSizer) {\n\t\t\tvar style = window.getComputedStyle ?\n\t\t\t\twindow.getComputedStyle(nSizer).width :\n\t\t\t\t_fnStringToCss( $(nSizer).width() );\n\t\n\t\t\theaderContent.push( nSizer.innerHTML );\n\t\t\theaderWidths.push( style );\n\t\t}, headerSrcEls );\n\t\n\t\t// Apply all widths in final pass\n\t\t_fnApplyToChildren( function(nToSize, i) {\n\t\t\tnToSize.style.width = headerWidths[i];\n\t\t}, headerTrgEls );\n\t\n\t\t$(headerSrcEls).css('height', 0);\n\t\n\t\t/* Same again with the footer if we have one */\n\t\tif ( footer )\n\t\t{\n\t\t\t_fnApplyToChildren( zeroOut, footerSrcEls );\n\t\n\t\t\t_fnApplyToChildren( function(nSizer) {\n\t\t\t\tfooterContent.push( nSizer.innerHTML );\n\t\t\t\tfooterWidths.push( _fnStringToCss( $(nSizer).css('width') ) );\n\t\t\t}, footerSrcEls );\n\t\n\t\t\t_fnApplyToChildren( function(nToSize, i) {\n\t\t\t\tnToSize.style.width = footerWidths[i];\n\t\t\t}, footerTrgEls );\n\t\n\t\t\t$(footerSrcEls).height(0);\n\t\t}\n\t\n\t\n\t\t/*\n\t\t * 3. Apply the measurements\n\t\t */\n\t\n\t\t// \"Hide\" the header and footer that we used for the sizing. We need to keep\n\t\t// the content of the cell so that the width applied to the header and body\n\t\t// both match, but we want to hide it completely. We want to also fix their\n\t\t// width to what they currently are\n\t\t_fnApplyToChildren( function(nSizer, i) {\n\t\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\">'+headerContent[i]+'</div>';\n\t\t\tnSizer.childNodes[0].style.height = \"0\";\n\t\t\tnSizer.childNodes[0].style.overflow = \"hidden\";\n\t\t\tnSizer.style.width = headerWidths[i];\n\t\t}, headerSrcEls );\n\t\n\t\tif ( footer )\n\t\t{\n\t\t\t_fnApplyToChildren( function(nSizer, i) {\n\t\t\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\">'+footerContent[i]+'</div>';\n\t\t\t\tnSizer.childNodes[0].style.height = \"0\";\n\t\t\t\tnSizer.childNodes[0].style.overflow = \"hidden\";\n\t\t\t\tnSizer.style.width = footerWidths[i];\n\t\t\t}, footerSrcEls );\n\t\t}\n\t\n\t\t// Sanity check that the table is of a sensible width. If not then we are going to get\n\t\t// misalignment - try to prevent this by not allowing the table to shrink below its min width\n\t\tif ( Math.round(table.outerWidth()) < Math.round(sanityWidth) )\n\t\t{\n\t\t\t// The min width depends upon if we have a vertical scrollbar visible or not */\n\t\t\tcorrection = ((divBodyEl.scrollHeight > divBodyEl.offsetHeight ||\n\t\t\t\tdivBody.css('overflow-y') == \"scroll\")) ?\n\t\t\t\t\tsanityWidth+barWidth :\n\t\t\t\t\tsanityWidth;\n\t\n\t\t\t// IE6/7 are a law unto themselves...\n\t\t\tif ( ie67 && (divBodyEl.scrollHeight >\n\t\t\t\tdivBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\")\n\t\t\t) {\n\t\t\t\ttableStyle.width = _fnStringToCss( correction-barWidth );\n\t\t\t}\n\t\n\t\t\t// And give the user a warning that we've stopped the table getting too small\n\t\t\tif ( scrollX === \"\" || scrollXInner !== \"\" ) {\n\t\t\t\t_fnLog( settings, 1, 'Possible column misalignment', 6 );\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcorrection = '100%';\n\t\t}\n\t\n\t\t// Apply to the container elements\n\t\tdivBodyStyle.width = _fnStringToCss( correction );\n\t\tdivHeaderStyle.width = _fnStringToCss( correction );\n\t\n\t\tif ( footer ) {\n\t\t\tsettings.nScrollFoot.style.width = _fnStringToCss( correction );\n\t\t}\n\t\n\t\n\t\t/*\n\t\t * 4. Clean up\n\t\t */\n\t\tif ( ! scrollY ) {\n\t\t\t/* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting\n\t\t\t * the scrollbar height from the visible display, rather than adding it on. We need to\n\t\t\t * set the height in order to sort this. Don't want to do it in any other browsers.\n\t\t\t */\n\t\t\tif ( ie67 ) {\n\t\t\t\tdivBodyStyle.height = _fnStringToCss( tableEl.offsetHeight+barWidth );\n\t\t\t}\n\t\t}\n\t\n\t\t/* Finally set the width's of the header and footer tables */\n\t\tvar iOuterWidth = table.outerWidth();\n\t\tdivHeaderTable[0].style.width = _fnStringToCss( iOuterWidth );\n\t\tdivHeaderInnerStyle.width = _fnStringToCss( iOuterWidth );\n\t\n\t\t// Figure out if there are scrollbar present - if so then we need a the header and footer to\n\t\t// provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n\t\tvar bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n\t\tvar padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );\n\t\tdivHeaderInnerStyle[ padding ] = bScrolling ? barWidth+\"px\" : \"0px\";\n\t\n\t\tif ( footer ) {\n\t\t\tdivFooterTable[0].style.width = _fnStringToCss( iOuterWidth );\n\t\t\tdivFooterInner[0].style.width = _fnStringToCss( iOuterWidth );\n\t\t\tdivFooterInner[0].style[padding] = bScrolling ? barWidth+\"px\" : \"0px\";\n\t\t}\n\t\n\t\t// Correct DOM ordering for colgroup - comes before the thead\n\t\ttable.children('colgroup').insertBefore( table.children('thead') );\n\t\n\t\t/* Adjust the position of the header in case we loose the y-scrollbar */\n\t\tdivBody.trigger('scroll');\n\t\n\t\t// If sorting or filtering has occurred, jump the scrolling back to the top\n\t\t// only if we aren't holding the position\n\t\tif ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {\n\t\t\tdivBodyEl.scrollTop = 0;\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Apply a given function to the display child nodes of an element array (typically\n\t * TD children of TR rows\n\t *  @param {function} fn Method to apply to the objects\n\t *  @param array {nodes} an1 List of elements to look through for display children\n\t *  @param array {nodes} an2 Another list (identical structure to the first) - optional\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnApplyToChildren( fn, an1, an2 )\n\t{\n\t\tvar index=0, i=0, iLen=an1.length;\n\t\tvar nNode1, nNode2;\n\t\n\t\twhile ( i < iLen ) {\n\t\t\tnNode1 = an1[i].firstChild;\n\t\t\tnNode2 = an2 ? an2[i].firstChild : null;\n\t\n\t\t\twhile ( nNode1 ) {\n\t\t\t\tif ( nNode1.nodeType === 1 ) {\n\t\t\t\t\tif ( an2 ) {\n\t\t\t\t\t\tfn( nNode1, nNode2, index );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfn( nNode1, index );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\n\t\t\t\tnNode1 = nNode1.nextSibling;\n\t\t\t\tnNode2 = an2 ? nNode2.nextSibling : null;\n\t\t\t}\n\t\n\t\t\ti++;\n\t\t}\n\t}\n\t\n\t\n\t\n\tvar __re_html_remove = /<.*?>/g;\n\t\n\t\n\t/**\n\t * Calculate the width of columns for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCalculateColumnWidths ( oSettings )\n\t{\n\t\tvar\n\t\t\ttable = oSettings.nTable,\n\t\t\tcolumns = oSettings.aoColumns,\n\t\t\tscroll = oSettings.oScroll,\n\t\t\tscrollY = scroll.sY,\n\t\t\tscrollX = scroll.sX,\n\t\t\tscrollXInner = scroll.sXInner,\n\t\t\tcolumnCount = columns.length,\n\t\t\tvisibleColumns = _fnGetColumns( oSettings, 'bVisible' ),\n\t\t\theaderCells = $('th', oSettings.nTHead),\n\t\t\ttableWidthAttr = table.getAttribute('width'), // from DOM element\n\t\t\ttableContainer = table.parentNode,\n\t\t\tuserInputs = false,\n\t\t\ti, column, columnIdx, width, outerWidth,\n\t\t\tbrowser = oSettings.oBrowser,\n\t\t\tie67 = browser.bScrollOversize;\n\t\n\t\tvar styleWidth = table.style.width;\n\t\tif ( styleWidth && styleWidth.indexOf('%') !== -1 ) {\n\t\t\ttableWidthAttr = styleWidth;\n\t\t}\n\t\n\t\t/* Convert any user input sizes into pixel sizes */\n\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\tcolumn = columns[ visibleColumns[i] ];\n\t\n\t\t\tif ( column.sWidth !== null ) {\n\t\t\t\tcolumn.sWidth = _fnConvertToWidth( column.sWidthOrig, tableContainer );\n\t\n\t\t\t\tuserInputs = true;\n\t\t\t}\n\t\t}\n\t\n\t\t/* If the number of columns in the DOM equals the number that we have to\n\t\t * process in DataTables, then we can use the offsets that are created by\n\t\t * the web- browser. No custom sizes can be set in order for this to happen,\n\t\t * nor scrolling used\n\t\t */\n\t\tif ( ie67 || ! userInputs && ! scrollX && ! scrollY &&\n\t\t     columnCount == _fnVisbleColumns( oSettings ) &&\n\t\t     columnCount == headerCells.length\n\t\t) {\n\t\t\tfor ( i=0 ; i<columnCount ; i++ ) {\n\t\t\t\tvar colIdx = _fnVisibleToColumnIndex( oSettings, i );\n\t\n\t\t\t\tif ( colIdx !== null ) {\n\t\t\t\t\tcolumns[ colIdx ].sWidth = _fnStringToCss( headerCells.eq(i).width() );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Otherwise construct a single row, worst case, table with the widest\n\t\t\t// node in the data, assign any user defined widths, then insert it into\n\t\t\t// the DOM and allow the browser to do all the hard work of calculating\n\t\t\t// table widths\n\t\t\tvar tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table\n\t\t\t\t.css( 'visibility', 'hidden' )\n\t\t\t\t.removeAttr( 'id' );\n\t\n\t\t\t// Clean up the table body\n\t\t\ttmpTable.find('tbody tr').remove();\n\t\t\tvar tr = $('<tr/>').appendTo( tmpTable.find('tbody') );\n\t\n\t\t\t// Clone the table header and footer - we can't use the header / footer\n\t\t\t// from the cloned table, since if scrolling is active, the table's\n\t\t\t// real header and footer are contained in different table tags\n\t\t\ttmpTable.find('thead, tfoot').remove();\n\t\t\ttmpTable\n\t\t\t\t.append( $(oSettings.nTHead).clone() )\n\t\t\t\t.append( $(oSettings.nTFoot).clone() );\n\t\n\t\t\t// Remove any assigned widths from the footer (from scrolling)\n\t\t\ttmpTable.find('tfoot th, tfoot td').css('width', '');\n\t\n\t\t\t// Apply custom sizing to the cloned header\n\t\t\theaderCells = _fnGetUniqueThs( oSettings, tmpTable.find('thead')[0] );\n\t\n\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\tcolumn = columns[ visibleColumns[i] ];\n\t\n\t\t\t\theaderCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ?\n\t\t\t\t\t_fnStringToCss( column.sWidthOrig ) :\n\t\t\t\t\t'';\n\t\n\t\t\t\t// For scrollX we need to force the column width otherwise the\n\t\t\t\t// browser will collapse it. If this width is smaller than the\n\t\t\t\t// width the column requires, then it will have no effect\n\t\t\t\tif ( column.sWidthOrig && scrollX ) {\n\t\t\t\t\t$( headerCells[i] ).append( $('<div/>').css( {\n\t\t\t\t\t\twidth: column.sWidthOrig,\n\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\theight: 1\n\t\t\t\t\t} ) );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Find the widest cell for each column and put it into the table\n\t\t\tif ( oSettings.aoData.length ) {\n\t\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\t\tcolumnIdx = visibleColumns[i];\n\t\t\t\t\tcolumn = columns[ columnIdx ];\n\t\n\t\t\t\t\t$( _fnGetWidestNode( oSettings, columnIdx ) )\n\t\t\t\t\t\t.clone( false )\n\t\t\t\t\t\t.append( column.sContentPadding )\n\t\t\t\t\t\t.appendTo( tr );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Tidy the temporary table - remove name attributes so there aren't\n\t\t\t// duplicated in the dom (radio elements for example)\n\t\t\t$('[name]', tmpTable).removeAttr('name');\n\t\n\t\t\t// Table has been built, attach to the document so we can work with it.\n\t\t\t// A holding element is used, positioned at the top of the container\n\t\t\t// with minimal height, so it has no effect on if the container scrolls\n\t\t\t// or not. Otherwise it might trigger scrolling when it actually isn't\n\t\t\t// needed\n\t\t\tvar holder = $('<div/>').css( scrollX || scrollY ?\n\t\t\t\t\t{\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\theight: 1,\n\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t\t} :\n\t\t\t\t\t{}\n\t\t\t\t)\n\t\t\t\t.append( tmpTable )\n\t\t\t\t.appendTo( tableContainer );\n\t\n\t\t\t// When scrolling (X or Y) we want to set the width of the table as \n\t\t\t// appropriate. However, when not scrolling leave the table width as it\n\t\t\t// is. This results in slightly different, but I think correct behaviour\n\t\t\tif ( scrollX && scrollXInner ) {\n\t\t\t\ttmpTable.width( scrollXInner );\n\t\t\t}\n\t\t\telse if ( scrollX ) {\n\t\t\t\ttmpTable.css( 'width', 'auto' );\n\t\t\t\ttmpTable.removeAttr('width');\n\t\n\t\t\t\t// If there is no width attribute or style, then allow the table to\n\t\t\t\t// collapse\n\t\t\t\tif ( tmpTable.width() < tableContainer.clientWidth && tableWidthAttr ) {\n\t\t\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( scrollY ) {\n\t\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t\t}\n\t\t\telse if ( tableWidthAttr ) {\n\t\t\t\ttmpTable.width( tableWidthAttr );\n\t\t\t}\n\t\n\t\t\t// Get the width of each column in the constructed table - we need to\n\t\t\t// know the inner width (so it can be assigned to the other table's\n\t\t\t// cells) and the outer width so we can calculate the full width of the\n\t\t\t// table. This is safe since DataTables requires a unique cell for each\n\t\t\t// column, but if ever a header can span multiple columns, this will\n\t\t\t// need to be modified.\n\t\t\tvar total = 0;\n\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\tvar cell = $(headerCells[i]);\n\t\t\t\tvar border = cell.outerWidth() - cell.width();\n\t\n\t\t\t\t// Use getBounding... where possible (not IE8-) because it can give\n\t\t\t\t// sub-pixel accuracy, which we then want to round up!\n\t\t\t\tvar bounding = browser.bBounding ?\n\t\t\t\t\tMath.ceil( headerCells[i].getBoundingClientRect().width ) :\n\t\t\t\t\tcell.outerWidth();\n\t\n\t\t\t\t// Total is tracked to remove any sub-pixel errors as the outerWidth\n\t\t\t\t// of the table might not equal the total given here (IE!).\n\t\t\t\ttotal += bounding;\n\t\n\t\t\t\t// Width for each column to use\n\t\t\t\tcolumns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding - border );\n\t\t\t}\n\t\n\t\t\ttable.style.width = _fnStringToCss( total );\n\t\n\t\t\t// Finished with the table - ditch it\n\t\t\tholder.remove();\n\t\t}\n\t\n\t\t// If there is a width attr, we want to attach an event listener which\n\t\t// allows the table sizing to automatically adjust when the window is\n\t\t// resized. Use the width attr rather than CSS, since we can't know if the\n\t\t// CSS is a relative value or absolute - DOM read is always px.\n\t\tif ( tableWidthAttr ) {\n\t\t\ttable.style.width = _fnStringToCss( tableWidthAttr );\n\t\t}\n\t\n\t\tif ( (tableWidthAttr || scrollX) && ! oSettings._reszEvt ) {\n\t\t\tvar bindResize = function () {\n\t\t\t\t$(window).on('resize.DT-'+oSettings.sInstance, _fnThrottle( function () {\n\t\t\t\t\t_fnAdjustColumnSizing( oSettings );\n\t\t\t\t} ) );\n\t\t\t};\n\t\n\t\t\t// IE6/7 will crash if we bind a resize event handler on page load.\n\t\t\t// To be removed in 1.11 which drops IE6/7 support\n\t\t\tif ( ie67 ) {\n\t\t\t\tsetTimeout( bindResize, 1000 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbindResize();\n\t\t\t}\n\t\n\t\t\toSettings._reszEvt = true;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Throttle the calls to a function. Arguments and context are maintained for\n\t * the throttled function\n\t *  @param {function} fn Function to be called\n\t *  @param {int} [freq=200] call frequency in mS\n\t *  @returns {function} wrapped function\n\t *  @memberof DataTable#oApi\n\t */\n\tvar _fnThrottle = DataTable.util.throttle;\n\t\n\t\n\t/**\n\t * Convert a CSS unit width to pixels (e.g. 2em)\n\t *  @param {string} width width to be converted\n\t *  @param {node} parent parent to get the with for (required for relative widths) - optional\n\t *  @returns {int} width in pixels\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnConvertToWidth ( width, parent )\n\t{\n\t\tif ( ! width ) {\n\t\t\treturn 0;\n\t\t}\n\t\n\t\tvar n = $('<div/>')\n\t\t\t.css( 'width', _fnStringToCss( width ) )\n\t\t\t.appendTo( parent || document.body );\n\t\n\t\tvar val = n[0].offsetWidth;\n\t\tn.remove();\n\t\n\t\treturn val;\n\t}\n\t\n\t\n\t/**\n\t * Get the widest node\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} colIdx column of interest\n\t *  @returns {node} widest table node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetWidestNode( settings, colIdx )\n\t{\n\t\tvar idx = _fnGetMaxLenString( settings, colIdx );\n\t\tif ( idx < 0 ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tvar data = settings.aoData[ idx ];\n\t\treturn ! data.nTr ? // Might not have been created when deferred rendering\n\t\t\t$('<td/>').html( _fnGetCellData( settings, idx, colIdx, 'display' ) )[0] :\n\t\t\tdata.anCells[ colIdx ];\n\t}\n\t\n\t\n\t/**\n\t * Get the maximum strlen for each data column\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} colIdx column of interest\n\t *  @returns {string} max string length for each column\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetMaxLenString( settings, colIdx )\n\t{\n\t\tvar s, max=-1, maxIdx = -1;\n\t\n\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\ts = _fnGetCellData( settings, i, colIdx, 'display' )+'';\n\t\t\ts = s.replace( __re_html_remove, '' );\n\t\t\ts = s.replace( /&nbsp;/g, ' ' );\n\t\n\t\t\tif ( s.length > max ) {\n\t\t\t\tmax = s.length;\n\t\t\t\tmaxIdx = i;\n\t\t\t}\n\t\t}\n\t\n\t\treturn maxIdx;\n\t}\n\t\n\t\n\t/**\n\t * Append a CSS unit (only if required) to a string\n\t *  @param {string} value to css-ify\n\t *  @returns {string} value with css unit\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnStringToCss( s )\n\t{\n\t\tif ( s === null ) {\n\t\t\treturn '0px';\n\t\t}\n\t\n\t\tif ( typeof s == 'number' ) {\n\t\t\treturn s < 0 ?\n\t\t\t\t'0px' :\n\t\t\t\ts+'px';\n\t\t}\n\t\n\t\t// Check it has a unit character already\n\t\treturn s.match(/\\d$/) ?\n\t\t\ts+'px' :\n\t\t\ts;\n\t}\n\t\n\t\n\t\n\tfunction _fnSortFlatten ( settings )\n\t{\n\t\tvar\n\t\t\ti, iLen, k, kLen,\n\t\t\taSort = [],\n\t\t\taiOrig = [],\n\t\t\taoColumns = settings.aoColumns,\n\t\t\taDataSort, iCol, sType, srcCol,\n\t\t\tfixed = settings.aaSortingFixed,\n\t\t\tfixedObj = $.isPlainObject( fixed ),\n\t\t\tnestedSort = [],\n\t\t\tadd = function ( a ) {\n\t\t\t\tif ( a.length && ! Array.isArray( a[0] ) ) {\n\t\t\t\t\t// 1D array\n\t\t\t\t\tnestedSort.push( a );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// 2D array\n\t\t\t\t\t$.merge( nestedSort, a );\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t// Build the sort array, with pre-fix and post-fix options if they have been\n\t\t// specified\n\t\tif ( Array.isArray( fixed ) ) {\n\t\t\tadd( fixed );\n\t\t}\n\t\n\t\tif ( fixedObj && fixed.pre ) {\n\t\t\tadd( fixed.pre );\n\t\t}\n\t\n\t\tadd( settings.aaSorting );\n\t\n\t\tif (fixedObj && fixed.post ) {\n\t\t\tadd( fixed.post );\n\t\t}\n\t\n\t\tfor ( i=0 ; i<nestedSort.length ; i++ )\n\t\t{\n\t\t\tsrcCol = nestedSort[i][0];\n\t\t\taDataSort = aoColumns[ srcCol ].aDataSort;\n\t\n\t\t\tfor ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )\n\t\t\t{\n\t\t\t\tiCol = aDataSort[k];\n\t\t\t\tsType = aoColumns[ iCol ].sType || 'string';\n\t\n\t\t\t\tif ( nestedSort[i]._idx === undefined ) {\n\t\t\t\t\tnestedSort[i]._idx = $.inArray( nestedSort[i][1], aoColumns[iCol].asSorting );\n\t\t\t\t}\n\t\n\t\t\t\taSort.push( {\n\t\t\t\t\tsrc:       srcCol,\n\t\t\t\t\tcol:       iCol,\n\t\t\t\t\tdir:       nestedSort[i][1],\n\t\t\t\t\tindex:     nestedSort[i]._idx,\n\t\t\t\t\ttype:      sType,\n\t\t\t\t\tformatter: DataTable.ext.type.order[ sType+\"-pre\" ]\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\n\t\treturn aSort;\n\t}\n\t\n\t/**\n\t * Change the order of the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t *  @todo This really needs split up!\n\t */\n\tfunction _fnSort ( oSettings )\n\t{\n\t\tvar\n\t\t\ti, ien, iLen, j, jLen, k, kLen,\n\t\t\tsDataType, nTh,\n\t\t\taiOrig = [],\n\t\t\toExtSort = DataTable.ext.type.order,\n\t\t\taoData = oSettings.aoData,\n\t\t\taoColumns = oSettings.aoColumns,\n\t\t\taDataSort, data, iCol, sType, oSort,\n\t\t\tformatters = 0,\n\t\t\tsortCol,\n\t\t\tdisplayMaster = oSettings.aiDisplayMaster,\n\t\t\taSort;\n\t\n\t\t// Resolve any column types that are unknown due to addition or invalidation\n\t\t// @todo Can this be moved into a 'data-ready' handler which is called when\n\t\t//   data is going to be used in the table?\n\t\t_fnColumnTypes( oSettings );\n\t\n\t\taSort = _fnSortFlatten( oSettings );\n\t\n\t\tfor ( i=0, ien=aSort.length ; i<ien ; i++ ) {\n\t\t\tsortCol = aSort[i];\n\t\n\t\t\t// Track if we can use the fast sort algorithm\n\t\t\tif ( sortCol.formatter ) {\n\t\t\t\tformatters++;\n\t\t\t}\n\t\n\t\t\t// Load the data needed for the sort, for each cell\n\t\t\t_fnSortData( oSettings, sortCol.col );\n\t\t}\n\t\n\t\t/* No sorting required if server-side or no sorting array */\n\t\tif ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )\n\t\t{\n\t\t\t// Create a value - key array of the current row positions such that we can use their\n\t\t\t// current position during the sort, if values match, in order to perform stable sorting\n\t\t\tfor ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {\n\t\t\t\taiOrig[ displayMaster[i] ] = i;\n\t\t\t}\n\t\n\t\t\t/* Do the sort - here we want multi-column sorting based on a given data source (column)\n\t\t\t * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n\t\t\t * follow on it's own, but this is what we want (example two column sorting):\n\t\t\t *  fnLocalSorting = function(a,b){\n\t\t\t *    var iTest;\n\t\t\t *    iTest = oSort['string-asc']('data11', 'data12');\n\t\t\t *      if (iTest !== 0)\n\t\t\t *        return iTest;\n\t\t\t *    iTest = oSort['numeric-desc']('data21', 'data22');\n\t\t\t *    if (iTest !== 0)\n\t\t\t *      return iTest;\n\t\t\t *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n\t\t\t *  }\n\t\t\t * Basically we have a test for each sorting column, if the data in that column is equal,\n\t\t\t * test the next column. If all columns match, then we use a numeric sort on the row\n\t\t\t * positions in the original data array to provide a stable sort.\n\t\t\t *\n\t\t\t * Note - I know it seems excessive to have two sorting methods, but the first is around\n\t\t\t * 15% faster, so the second is only maintained for backwards compatibility with sorting\n\t\t\t * methods which do not have a pre-sort formatting function.\n\t\t\t */\n\t\t\tif ( formatters === aSort.length ) {\n\t\t\t\t// All sort types have formatting functions\n\t\t\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\t\t\tvar\n\t\t\t\t\t\tx, y, k, test, sort,\n\t\t\t\t\t\tlen=aSort.length,\n\t\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\t\tdataB = aoData[b]._aSortData;\n\t\n\t\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\t\t\tsort = aSort[k];\n\t\n\t\t\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\t\t\ty = dataB[ sort.col ];\n\t\n\t\t\t\t\t\ttest = x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\t\treturn sort.dir === 'asc' ? test : -test;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tx = aiOrig[a];\n\t\t\t\t\ty = aiOrig[b];\n\t\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Depreciated - remove in 1.11 (providing a plug-in option)\n\t\t\t\t// Not all sort types have formatting methods, so we have to call their sorting\n\t\t\t\t// methods.\n\t\t\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\t\t\tvar\n\t\t\t\t\t\tx, y, k, l, test, sort, fn,\n\t\t\t\t\t\tlen=aSort.length,\n\t\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\t\tdataB = aoData[b]._aSortData;\n\t\n\t\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\t\t\tsort = aSort[k];\n\t\n\t\t\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\t\t\ty = dataB[ sort.col ];\n\t\n\t\t\t\t\t\tfn = oExtSort[ sort.type+\"-\"+sort.dir ] || oExtSort[ \"string-\"+sort.dir ];\n\t\t\t\t\t\ttest = fn( x, y );\n\t\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\t\treturn test;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tx = aiOrig[a];\n\t\t\t\t\ty = aiOrig[b];\n\t\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\n\t\t/* Tell the draw function that we have sorted the data */\n\t\toSettings.bSorted = true;\n\t}\n\t\n\t\n\tfunction _fnSortAria ( settings )\n\t{\n\t\tvar label;\n\t\tvar nextSort;\n\t\tvar columns = settings.aoColumns;\n\t\tvar aSort = _fnSortFlatten( settings );\n\t\tvar oAria = settings.oLanguage.oAria;\n\t\n\t\t// ARIA attributes - need to loop all columns, to update all (removing old\n\t\t// attributes as needed)\n\t\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tvar col = columns[i];\n\t\t\tvar asSorting = col.asSorting;\n\t\t\tvar sTitle = col.ariaTitle || col.sTitle.replace( /<.*?>/g, \"\" );\n\t\t\tvar th = col.nTh;\n\t\n\t\t\t// IE7 is throwing an error when setting these properties with jQuery's\n\t\t\t// attr() and removeAttr() methods...\n\t\t\tth.removeAttribute('aria-sort');\n\t\n\t\t\t/* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */\n\t\t\tif ( col.bSortable ) {\n\t\t\t\tif ( aSort.length > 0 && aSort[0].col == i ) {\n\t\t\t\t\tth.setAttribute('aria-sort', aSort[0].dir==\"asc\" ? \"ascending\" : \"descending\" );\n\t\t\t\t\tnextSort = asSorting[ aSort[0].index+1 ] || asSorting[0];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnextSort = asSorting[0];\n\t\t\t\t}\n\t\n\t\t\t\tlabel = sTitle + ( nextSort === \"asc\" ?\n\t\t\t\t\toAria.sSortAscending :\n\t\t\t\t\toAria.sSortDescending\n\t\t\t\t);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlabel = sTitle;\n\t\t\t}\n\t\n\t\t\tth.setAttribute('aria-label', label);\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Function to run on user sort request\n\t *  @param {object} settings dataTables settings object\n\t *  @param {node} attachTo node to attach the handler to\n\t *  @param {int} colIdx column sorting index\n\t *  @param {boolean} [append=false] Append the requested sort to the existing\n\t *    sort if true (i.e. multi-column sort)\n\t *  @param {function} [callback] callback function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortListener ( settings, colIdx, append, callback )\n\t{\n\t\tvar col = settings.aoColumns[ colIdx ];\n\t\tvar sorting = settings.aaSorting;\n\t\tvar asSorting = col.asSorting;\n\t\tvar nextSortIdx;\n\t\tvar next = function ( a, overflow ) {\n\t\t\tvar idx = a._idx;\n\t\t\tif ( idx === undefined ) {\n\t\t\t\tidx = $.inArray( a[1], asSorting );\n\t\t\t}\n\t\n\t\t\treturn idx+1 < asSorting.length ?\n\t\t\t\tidx+1 :\n\t\t\t\toverflow ?\n\t\t\t\t\tnull :\n\t\t\t\t\t0;\n\t\t};\n\t\n\t\t// Convert to 2D array if needed\n\t\tif ( typeof sorting[0] === 'number' ) {\n\t\t\tsorting = settings.aaSorting = [ sorting ];\n\t\t}\n\t\n\t\t// If appending the sort then we are multi-column sorting\n\t\tif ( append && settings.oFeatures.bSortMulti ) {\n\t\t\t// Are we already doing some kind of sort on this column?\n\t\t\tvar sortIdx = $.inArray( colIdx, _pluck(sorting, '0') );\n\t\n\t\t\tif ( sortIdx !== -1 ) {\n\t\t\t\t// Yes, modify the sort\n\t\t\t\tnextSortIdx = next( sorting[sortIdx], true );\n\t\n\t\t\t\tif ( nextSortIdx === null && sorting.length === 1 ) {\n\t\t\t\t\tnextSortIdx = 0; // can't remove sorting completely\n\t\t\t\t}\n\t\n\t\t\t\tif ( nextSortIdx === null ) {\n\t\t\t\t\tsorting.splice( sortIdx, 1 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsorting[sortIdx][1] = asSorting[ nextSortIdx ];\n\t\t\t\t\tsorting[sortIdx]._idx = nextSortIdx;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// No sort on this column yet\n\t\t\t\tsorting.push( [ colIdx, asSorting[0], 0 ] );\n\t\t\t\tsorting[sorting.length-1]._idx = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( sorting.length && sorting[0][0] == colIdx ) {\n\t\t\t// Single column - already sorting on this column, modify the sort\n\t\t\tnextSortIdx = next( sorting[0] );\n\t\n\t\t\tsorting.length = 1;\n\t\t\tsorting[0][1] = asSorting[ nextSortIdx ];\n\t\t\tsorting[0]._idx = nextSortIdx;\n\t\t}\n\t\telse {\n\t\t\t// Single column - sort only on this column\n\t\t\tsorting.length = 0;\n\t\t\tsorting.push( [ colIdx, asSorting[0] ] );\n\t\t\tsorting[0]._idx = 0;\n\t\t}\n\t\n\t\t// Run the sort by calling a full redraw\n\t\t_fnReDraw( settings );\n\t\n\t\t// callback used for async user interaction\n\t\tif ( typeof callback == 'function' ) {\n\t\t\tcallback( settings );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Attach a sort handler (click) to a node\n\t *  @param {object} settings dataTables settings object\n\t *  @param {node} attachTo node to attach the handler to\n\t *  @param {int} colIdx column sorting index\n\t *  @param {function} [callback] callback function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortAttachListener ( settings, attachTo, colIdx, callback )\n\t{\n\t\tvar col = settings.aoColumns[ colIdx ];\n\t\n\t\t_fnBindAction( attachTo, {}, function (e) {\n\t\t\t/* If the column is not sortable - don't to anything */\n\t\t\tif ( col.bSortable === false ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If processing is enabled use a timeout to allow the processing\n\t\t\t// display to be shown - otherwise to it synchronously\n\t\t\tif ( settings.oFeatures.bProcessing ) {\n\t\t\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t\t\tsetTimeout( function() {\n\t\t\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\n\t\n\t\t\t\t\t// In server-side processing, the draw callback will remove the\n\t\t\t\t\t// processing display\n\t\t\t\t\tif ( _fnDataSource( settings ) !== 'ssp' ) {\n\t\t\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t\t}\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\n\t\t\t}\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Set the sorting classes on table's body, Note: it is safe to call this function\n\t * when bSort and bSortClasses are false\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortingClasses( settings )\n\t{\n\t\tvar oldSort = settings.aLastSort;\n\t\tvar sortClass = settings.oClasses.sSortColumn;\n\t\tvar sort = _fnSortFlatten( settings );\n\t\tvar features = settings.oFeatures;\n\t\tvar i, ien, colIdx;\n\t\n\t\tif ( features.bSort && features.bSortClasses ) {\n\t\t\t// Remove old sorting classes\n\t\t\tfor ( i=0, ien=oldSort.length ; i<ien ; i++ ) {\n\t\t\t\tcolIdx = oldSort[i].src;\n\t\n\t\t\t\t// Remove column sorting\n\t\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t\t.removeClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t\t}\n\t\n\t\t\t// Add new column sorting\n\t\t\tfor ( i=0, ien=sort.length ; i<ien ; i++ ) {\n\t\t\t\tcolIdx = sort[i].src;\n\t\n\t\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t\t.addClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t\t}\n\t\t}\n\t\n\t\tsettings.aLastSort = sort;\n\t}\n\t\n\t\n\t// Get the data to sort a column, be it from cache, fresh (populating the\n\t// cache), or from a sort formatter\n\tfunction _fnSortData( settings, idx )\n\t{\n\t\t// Custom sorting function - provided by the sort data type\n\t\tvar column = settings.aoColumns[ idx ];\n\t\tvar customSort = DataTable.ext.order[ column.sSortDataType ];\n\t\tvar customData;\n\t\n\t\tif ( customSort ) {\n\t\t\tcustomData = customSort.call( settings.oInstance, settings, idx,\n\t\t\t\t_fnColumnIndexToVisible( settings, idx )\n\t\t\t);\n\t\t}\n\t\n\t\t// Use / populate cache\n\t\tvar row, cellData;\n\t\tvar formatter = DataTable.ext.type.order[ column.sType+\"-pre\" ];\n\t\n\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\trow = settings.aoData[i];\n\t\n\t\t\tif ( ! row._aSortData ) {\n\t\t\t\trow._aSortData = [];\n\t\t\t}\n\t\n\t\t\tif ( ! row._aSortData[idx] || customSort ) {\n\t\t\t\tcellData = customSort ?\n\t\t\t\t\tcustomData[i] : // If there was a custom sort function, use data from there\n\t\t\t\t\t_fnGetCellData( settings, i, idx, 'sort' );\n\t\n\t\t\t\trow._aSortData[ idx ] = formatter ?\n\t\t\t\t\tformatter( cellData ) :\n\t\t\t\t\tcellData;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Save the state of a table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSaveState ( settings )\n\t{\n\t\tif (settings._bLoadingState) {\n\t\t\treturn;\n\t\t}\n\t\n\t\t/* Store the interesting variables */\n\t\tvar state = {\n\t\t\ttime:    +new Date(),\n\t\t\tstart:   settings._iDisplayStart,\n\t\t\tlength:  settings._iDisplayLength,\n\t\t\torder:   $.extend( true, [], settings.aaSorting ),\n\t\t\tsearch:  _fnSearchToCamel( settings.oPreviousSearch ),\n\t\t\tcolumns: $.map( settings.aoColumns, function ( col, i ) {\n\t\t\t\treturn {\n\t\t\t\t\tvisible: col.bVisible,\n\t\t\t\t\tsearch: _fnSearchToCamel( settings.aoPreSearchCols[i] )\n\t\t\t\t};\n\t\t\t} )\n\t\t};\n\t\n\t\tsettings.oSavedState = state;\n\t\t_fnCallbackFire( settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state] );\n\t\t\n\t\tif ( settings.oFeatures.bStateSave && !settings.bDestroying )\n\t\t{\n\t\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, state );\n\t\t}\t\n\t}\n\t\n\t\n\t/**\n\t * Attempt to load a saved table state\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} oInit DataTables init object so we can override settings\n\t *  @param {function} callback Callback to execute when the state has been loaded\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLoadState ( settings, oInit, callback )\n\t{\n\t\tif ( ! settings.oFeatures.bStateSave ) {\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar loaded = function(state) {\n\t\t\t_fnImplementState(settings, state, callback);\n\t\t}\n\t\n\t\tvar state = settings.fnStateLoadCallback.call( settings.oInstance, settings, loaded );\n\t\n\t\tif ( state !== undefined ) {\n\t\t\t_fnImplementState( settings, state, callback );\n\t\t}\n\t\t// otherwise, wait for the loaded callback to be executed\n\t\n\t\treturn true;\n\t}\n\t\n\tfunction _fnImplementState ( settings, s, callback) {\n\t\tvar i, ien;\n\t\tvar columns = settings.aoColumns;\n\t\tsettings._bLoadingState = true;\n\t\n\t\t// When StateRestore was introduced the state could now be implemented at any time\n\t\t// Not just initialisation. To do this an api instance is required in some places\n\t\tvar api = settings._bInitComplete ? new DataTable.Api(settings) : null;\n\t\n\t\tif ( ! s || ! s.time ) {\n\t\t\tsettings._bLoadingState = false;\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\t\n\t\t// Allow custom and plug-in manipulation functions to alter the saved data set and\n\t\t// cancelling of loading by returning false\n\t\tvar abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s] );\n\t\tif ( $.inArray( false, abStateLoad ) !== -1 ) {\n\t\t\tsettings._bLoadingState = false;\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\t\n\t\t// Reject old data\n\t\tvar duration = settings.iStateDuration;\n\t\tif ( duration > 0 && s.time < +new Date() - (duration*1000) ) {\n\t\t\tsettings._bLoadingState = false;\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\t\n\t\t// Number of columns have changed - all bets are off, no restore of settings\n\t\tif ( s.columns && columns.length !== s.columns.length ) {\n\t\t\tsettings._bLoadingState = false;\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\t\n\t\t// Store the saved state so it might be accessed at any time\n\t\tsettings.oLoadedState = $.extend( true, {}, s );\n\t\n\t\t// Page Length\n\t\tif ( s.length !== undefined ) {\n\t\t\t// If already initialised just set the value directly so that the select element is also updated\n\t\t\tif (api) {\n\t\t\t\tapi.page.len(s.length)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsettings._iDisplayLength   = s.length;\n\t\t\t}\n\t\t}\n\t\n\t\t// Restore key features - todo - for 1.11 this needs to be done by\n\t\t// subscribed events\n\t\tif ( s.start !== undefined ) {\n\t\t\tif(api === null) {\n\t\t\t\tsettings._iDisplayStart    = s.start;\n\t\t\t\tsettings.iInitDisplayStart = s.start;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnPageChange(settings, s.start/settings._iDisplayLength);\n\t\t\t}\n\t\t}\n\t\n\t\t// Order\n\t\tif ( s.order !== undefined ) {\n\t\t\tsettings.aaSorting = [];\n\t\t\t$.each( s.order, function ( i, col ) {\n\t\t\t\tsettings.aaSorting.push( col[0] >= columns.length ?\n\t\t\t\t\t[ 0, col[1] ] :\n\t\t\t\t\tcol\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\t\n\t\t// Search\n\t\tif ( s.search !== undefined ) {\n\t\t\t$.extend( settings.oPreviousSearch, _fnSearchToHung( s.search ) );\n\t\t}\n\t\n\t\t// Columns\n\t\tif ( s.columns ) {\n\t\t\tfor ( i=0, ien=s.columns.length ; i<ien ; i++ ) {\n\t\t\t\tvar col = s.columns[i];\n\t\n\t\t\t\t// Visibility\n\t\t\t\tif ( col.visible !== undefined ) {\n\t\t\t\t\t// If the api is defined, the table has been initialised so we need to use it rather than internal settings\n\t\t\t\t\tif (api) {\n\t\t\t\t\t\t// Don't redraw the columns on every iteration of this loop, we will do this at the end instead\n\t\t\t\t\t\tapi.column(i).visible(col.visible, false);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcolumns[i].bVisible = col.visible;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Search\n\t\t\t\tif ( col.search !== undefined ) {\n\t\t\t\t\t$.extend( settings.aoPreSearchCols[i], _fnSearchToHung( col.search ) );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// If the api is defined then we need to adjust the columns once the visibility has been changed\n\t\t\tif (api) {\n\t\t\t\tapi.columns.adjust();\n\t\t\t}\n\t\t}\n\t\n\t\tsettings._bLoadingState = false;\n\t\t_fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, s] );\n\t\tcallback();\n\t};\n\t\n\t\n\t/**\n\t * Return the settings object for a particular table\n\t *  @param {node} table table we are using as a dataTable\n\t *  @returns {object} Settings object - or null if not found\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSettingsFromNode ( table )\n\t{\n\t\tvar settings = DataTable.settings;\n\t\tvar idx = $.inArray( table, _pluck( settings, 'nTable' ) );\n\t\n\t\treturn idx !== -1 ?\n\t\t\tsettings[ idx ] :\n\t\t\tnull;\n\t}\n\t\n\t\n\t/**\n\t * Log an error message\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} level log error messages, or display them to the user\n\t *  @param {string} msg error message\n\t *  @param {int} tn Technical note id to get more information about the error.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLog( settings, level, msg, tn )\n\t{\n\t\tmsg = 'DataTables warning: '+\n\t\t\t(settings ? 'table id='+settings.sTableId+' - ' : '')+msg;\n\t\n\t\tif ( tn ) {\n\t\t\tmsg += '. For more information about this error, please see '+\n\t\t\t'http://datatables.net/tn/'+tn;\n\t\t}\n\t\n\t\tif ( ! level  ) {\n\t\t\t// Backwards compatibility pre 1.10\n\t\t\tvar ext = DataTable.ext;\n\t\t\tvar type = ext.sErrMode || ext.errMode;\n\t\n\t\t\tif ( settings ) {\n\t\t\t\t_fnCallbackFire( settings, null, 'error', [ settings, tn, msg ] );\n\t\t\t}\n\t\n\t\t\tif ( type == 'alert' ) {\n\t\t\t\talert( msg );\n\t\t\t}\n\t\t\telse if ( type == 'throw' ) {\n\t\t\t\tthrow new Error(msg);\n\t\t\t}\n\t\t\telse if ( typeof type == 'function' ) {\n\t\t\t\ttype( settings, tn, msg );\n\t\t\t}\n\t\t}\n\t\telse if ( window.console && console.log ) {\n\t\t\tconsole.log( msg );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * See if a property is defined on one object, if so assign it to the other object\n\t *  @param {object} ret target object\n\t *  @param {object} src source object\n\t *  @param {string} name property\n\t *  @param {string} [mappedName] name to map too - optional, name used if not given\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnMap( ret, src, name, mappedName )\n\t{\n\t\tif ( Array.isArray( name ) ) {\n\t\t\t$.each( name, function (i, val) {\n\t\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\t\t_fnMap( ret, src, val[0], val[1] );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t_fnMap( ret, src, val );\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( mappedName === undefined ) {\n\t\t\tmappedName = name;\n\t\t}\n\t\n\t\tif ( src[name] !== undefined ) {\n\t\t\tret[mappedName] = src[name];\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n\t * shallow copy arrays. The reason we need to do this, is that we don't want to\n\t * deep copy array init values (such as aaSorting) since the dev wouldn't be\n\t * able to override them, but we do want to deep copy arrays.\n\t *  @param {object} out Object to extend\n\t *  @param {object} extender Object from which the properties will be applied to\n\t *      out\n\t *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n\t *      independent copy with the exception of the `data` or `aaData` parameters\n\t *      if they are present. This is so you can pass in a collection to\n\t *      DataTables and have that used as your data source without breaking the\n\t *      references\n\t *  @returns {object} out Reference, just for convenience - out === the return.\n\t *  @memberof DataTable#oApi\n\t *  @todo This doesn't take account of arrays inside the deep copied objects.\n\t */\n\tfunction _fnExtend( out, extender, breakRefs )\n\t{\n\t\tvar val;\n\t\n\t\tfor ( var prop in extender ) {\n\t\t\tif ( extender.hasOwnProperty(prop) ) {\n\t\t\t\tval = extender[prop];\n\t\n\t\t\t\tif ( $.isPlainObject( val ) ) {\n\t\t\t\t\tif ( ! $.isPlainObject( out[prop] ) ) {\n\t\t\t\t\t\tout[prop] = {};\n\t\t\t\t\t}\n\t\t\t\t\t$.extend( true, out[prop], val );\n\t\t\t\t}\n\t\t\t\telse if ( breakRefs && prop !== 'data' && prop !== 'aaData' && Array.isArray(val) ) {\n\t\t\t\t\tout[prop] = val.slice();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout[prop] = val;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t}\n\t\n\t\n\t/**\n\t * Bind an event handers to allow a click or return key to activate the callback.\n\t * This is good for accessibility since a return on the keyboard will have the\n\t * same effect as a click, if the element has focus.\n\t *  @param {element} n Element to bind the action to\n\t *  @param {object} oData Data object to pass to the triggered function\n\t *  @param {function} fn Callback function for when the event is triggered\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBindAction( n, oData, fn )\n\t{\n\t\t$(n)\n\t\t\t.on( 'click.DT', oData, function (e) {\n\t\t\t\t\t$(n).trigger('blur'); // Remove focus outline for mouse users\n\t\t\t\t\tfn(e);\n\t\t\t\t} )\n\t\t\t.on( 'keypress.DT', oData, function (e){\n\t\t\t\t\tif ( e.which === 13 ) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tfn(e);\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t.on( 'selectstart.DT', function () {\n\t\t\t\t\t/* Take the brutal approach to cancelling text selection */\n\t\t\t\t\treturn false;\n\t\t\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Register a callback function. Easily allows a callback function to be added to\n\t * an array store of callback functions that can then all be called together.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sStore Name of the array storage for the callbacks in oSettings\n\t *  @param {function} fn Function to be called back\n\t *  @param {string} sName Identifying name for the callback (i.e. a label)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCallbackReg( oSettings, sStore, fn, sName )\n\t{\n\t\tif ( fn )\n\t\t{\n\t\t\toSettings[sStore].push( {\n\t\t\t\t\"fn\": fn,\n\t\t\t\t\"sName\": sName\n\t\t\t} );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Fire callback functions and trigger events. Note that the loop over the\n\t * callback array store is done backwards! Further note that you do not want to\n\t * fire off triggers in time sensitive applications (for example cell creation)\n\t * as its slow.\n\t *  @param {object} settings dataTables settings object\n\t *  @param {string} callbackArr Name of the array storage for the callbacks in\n\t *      oSettings\n\t *  @param {string} eventName Name of the jQuery custom event to trigger. If\n\t *      null no trigger is fired\n\t *  @param {array} args Array of arguments to pass to the callback function /\n\t *      trigger\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCallbackFire( settings, callbackArr, eventName, args )\n\t{\n\t\tvar ret = [];\n\t\n\t\tif ( callbackArr ) {\n\t\t\tret = $.map( settings[callbackArr].slice().reverse(), function (val, i) {\n\t\t\t\treturn val.fn.apply( settings.oInstance, args );\n\t\t\t} );\n\t\t}\n\t\n\t\tif ( eventName !== null ) {\n\t\t\tvar e = $.Event( eventName+'.dt' );\n\t\t\tvar table = $(settings.nTable);\n\t\n\t\t\ttable.trigger( e, args );\n\t\n\t\t\t// If not yet attached to the document, trigger the event\n\t\t\t// on the body directly to sort of simulate the bubble\n\t\t\tif (table.parents('body').length === 0) {\n\t\t\t\t$('body').trigger( e, args );\n\t\t\t}\n\t\n\t\t\tret.push( e.result );\n\t\t}\n\t\n\t\treturn ret;\n\t}\n\t\n\t\n\tfunction _fnLengthOverflow ( settings )\n\t{\n\t\tvar\n\t\t\tstart = settings._iDisplayStart,\n\t\t\tend = settings.fnDisplayEnd(),\n\t\t\tlen = settings._iDisplayLength;\n\t\n\t\t/* If we have space to show extra rows (backing up from the end point - then do so */\n\t\tif ( start >= end )\n\t\t{\n\t\t\tstart = end - len;\n\t\t}\n\t\n\t\t// Keep the start record on the current page\n\t\tstart -= (start % len);\n\t\n\t\tif ( len === -1 || start < 0 )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\n\t\tsettings._iDisplayStart = start;\n\t}\n\t\n\t\n\tfunction _fnRenderer( settings, type )\n\t{\n\t\tvar renderer = settings.renderer;\n\t\tvar host = DataTable.ext.renderer[type];\n\t\n\t\tif ( $.isPlainObject( renderer ) && renderer[type] ) {\n\t\t\t// Specific renderer for this type. If available use it, otherwise use\n\t\t\t// the default.\n\t\t\treturn host[renderer[type]] || host._;\n\t\t}\n\t\telse if ( typeof renderer === 'string' ) {\n\t\t\t// Common renderer - if there is one available for this type use it,\n\t\t\t// otherwise use the default\n\t\t\treturn host[renderer] || host._;\n\t\t}\n\t\n\t\t// Use the default\n\t\treturn host._;\n\t}\n\t\n\t\n\t/**\n\t * Detect the data source being used for the table. Used to simplify the code\n\t * a little (ajax) and to make it compress a little smaller.\n\t *\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {string} Data source\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDataSource ( settings )\n\t{\n\t\tif ( settings.oFeatures.bServerSide ) {\n\t\t\treturn 'ssp';\n\t\t}\n\t\telse if ( settings.ajax || settings.sAjaxSource ) {\n\t\t\treturn 'ajax';\n\t\t}\n\t\treturn 'dom';\n\t}\n\t\n\t\n\t\n\t\n\t/**\n\t * Computed structure of the DataTables API, defined by the options passed to\n\t * `DataTable.Api.register()` when building the API.\n\t *\n\t * The structure is built in order to speed creation and extension of the Api\n\t * objects since the extensions are effectively pre-parsed.\n\t *\n\t * The array is an array of objects with the following structure, where this\n\t * base array represents the Api prototype base:\n\t *\n\t *     [\n\t *       {\n\t *         name:      'data'                -- string   - Property name\n\t *         val:       function () {},       -- function - Api method (or undefined if just an object\n\t *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n\t *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n\t *       },\n\t *       {\n\t *         name:     'row'\n\t *         val:       {},\n\t *         methodExt: [ ... ],\n\t *         propExt:   [\n\t *           {\n\t *             name:      'data'\n\t *             val:       function () {},\n\t *             methodExt: [ ... ],\n\t *             propExt:   [ ... ]\n\t *           },\n\t *           ...\n\t *         ]\n\t *       }\n\t *     ]\n\t *\n\t * @type {Array}\n\t * @ignore\n\t */\n\tvar __apiStruct = [];\n\t\n\t\n\t/**\n\t * `Array.prototype` reference.\n\t *\n\t * @type object\n\t * @ignore\n\t */\n\tvar __arrayProto = Array.prototype;\n\t\n\t\n\t/**\n\t * Abstraction for `context` parameter of the `Api` constructor to allow it to\n\t * take several different forms for ease of use.\n\t *\n\t * Each of the input parameter types will be converted to a DataTables settings\n\t * object where possible.\n\t *\n\t * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n\t *   of:\n\t *\n\t *   * `string` - jQuery selector. Any DataTables' matching the given selector\n\t *     with be found and used.\n\t *   * `node` - `TABLE` node which has already been formed into a DataTable.\n\t *   * `jQuery` - A jQuery object of `TABLE` nodes.\n\t *   * `object` - DataTables settings object\n\t *   * `DataTables.Api` - API instance\n\t * @return {array|null} Matching DataTables settings objects. `null` or\n\t *   `undefined` is returned if no matching DataTable is found.\n\t * @ignore\n\t */\n\tvar _toSettings = function ( mixed )\n\t{\n\t\tvar idx, jq;\n\t\tvar settings = DataTable.settings;\n\t\tvar tables = $.map( settings, function (el, i) {\n\t\t\treturn el.nTable;\n\t\t} );\n\t\n\t\tif ( ! mixed ) {\n\t\t\treturn [];\n\t\t}\n\t\telse if ( mixed.nTable && mixed.oApi ) {\n\t\t\t// DataTables settings object\n\t\t\treturn [ mixed ];\n\t\t}\n\t\telse if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {\n\t\t\t// Table node\n\t\t\tidx = $.inArray( mixed, tables );\n\t\t\treturn idx !== -1 ? [ settings[idx] ] : null;\n\t\t}\n\t\telse if ( mixed && typeof mixed.settings === 'function' ) {\n\t\t\treturn mixed.settings().toArray();\n\t\t}\n\t\telse if ( typeof mixed === 'string' ) {\n\t\t\t// jQuery selector\n\t\t\tjq = $(mixed);\n\t\t}\n\t\telse if ( mixed instanceof $ ) {\n\t\t\t// jQuery object (also DataTables instance)\n\t\t\tjq = mixed;\n\t\t}\n\t\n\t\tif ( jq ) {\n\t\t\treturn jq.map( function(i) {\n\t\t\t\tidx = $.inArray( this, tables );\n\t\t\t\treturn idx !== -1 ? settings[idx] : null;\n\t\t\t} ).toArray();\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * DataTables API class - used to control and interface with  one or more\n\t * DataTables enhanced tables.\n\t *\n\t * The API class is heavily based on jQuery, presenting a chainable interface\n\t * that you can use to interact with tables. Each instance of the API class has\n\t * a \"context\" - i.e. the tables that it will operate on. This could be a single\n\t * table, all tables on a page or a sub-set thereof.\n\t *\n\t * Additionally the API is designed to allow you to easily work with the data in\n\t * the tables, retrieving and manipulating it as required. This is done by\n\t * presenting the API class as an array like interface. The contents of the\n\t * array depend upon the actions requested by each method (for example\n\t * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n\t * return an array of objects or arrays depending upon your table's\n\t * configuration). The API object has a number of array like methods (`push`,\n\t * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n\t * `unique` etc) to assist your working with the data held in a table.\n\t *\n\t * Most methods (those which return an Api instance) are chainable, which means\n\t * the return from a method call also has all of the methods available that the\n\t * top level object had. For example, these two calls are equivalent:\n\t *\n\t *     // Not chained\n\t *     api.row.add( {...} );\n\t *     api.draw();\n\t *\n\t *     // Chained\n\t *     api.row.add( {...} ).draw();\n\t *\n\t * @class DataTable.Api\n\t * @param {array|object|string|jQuery} context DataTable identifier. This is\n\t *   used to define which DataTables enhanced tables this API will operate on.\n\t *   Can be one of:\n\t *\n\t *   * `string` - jQuery selector. Any DataTables' matching the given selector\n\t *     with be found and used.\n\t *   * `node` - `TABLE` node which has already been formed into a DataTable.\n\t *   * `jQuery` - A jQuery object of `TABLE` nodes.\n\t *   * `object` - DataTables settings object\n\t * @param {array} [data] Data to initialise the Api instance with.\n\t *\n\t * @example\n\t *   // Direct initialisation during DataTables construction\n\t *   var api = $('#example').DataTable();\n\t *\n\t * @example\n\t *   // Initialisation using a DataTables jQuery object\n\t *   var api = $('#example').dataTable().api();\n\t *\n\t * @example\n\t *   // Initialisation as a constructor\n\t *   var api = new $.fn.DataTable.Api( 'table.dataTable' );\n\t */\n\t_Api = function ( context, data )\n\t{\n\t\tif ( ! (this instanceof _Api) ) {\n\t\t\treturn new _Api( context, data );\n\t\t}\n\t\n\t\tvar settings = [];\n\t\tvar ctxSettings = function ( o ) {\n\t\t\tvar a = _toSettings( o );\n\t\t\tif ( a ) {\n\t\t\t\tsettings.push.apply( settings, a );\n\t\t\t}\n\t\t};\n\t\n\t\tif ( Array.isArray( context ) ) {\n\t\t\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\t\tctxSettings( context[i] );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tctxSettings( context );\n\t\t}\n\t\n\t\t// Remove duplicates\n\t\tthis.context = _unique( settings );\n\t\n\t\t// Initial data\n\t\tif ( data ) {\n\t\t\t$.merge( this, data );\n\t\t}\n\t\n\t\t// selector\n\t\tthis.selector = {\n\t\t\trows: null,\n\t\t\tcols: null,\n\t\t\topts: null\n\t\t};\n\t\n\t\t_Api.extend( this, this, __apiStruct );\n\t};\n\t\n\tDataTable.Api = _Api;\n\t\n\t// Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n\t// isPlainObject.\n\t$.extend( _Api.prototype, {\n\t\tany: function ()\n\t\t{\n\t\t\treturn this.count() !== 0;\n\t\t},\n\t\n\t\n\t\tconcat:  __arrayProto.concat,\n\t\n\t\n\t\tcontext: [], // array of table settings objects\n\t\n\t\n\t\tcount: function ()\n\t\t{\n\t\t\treturn this.flatten().length;\n\t\t},\n\t\n\t\n\t\teach: function ( fn )\n\t\t{\n\t\t\tfor ( var i=0, ien=this.length ; i<ien; i++ ) {\n\t\t\t\tfn.call( this, this[i], i, this );\n\t\t\t}\n\t\n\t\t\treturn this;\n\t\t},\n\t\n\t\n\t\teq: function ( idx )\n\t\t{\n\t\t\tvar ctx = this.context;\n\t\n\t\t\treturn ctx.length > idx ?\n\t\t\t\tnew _Api( ctx[idx], this[idx] ) :\n\t\t\t\tnull;\n\t\t},\n\t\n\t\n\t\tfilter: function ( fn )\n\t\t{\n\t\t\tvar a = [];\n\t\n\t\t\tif ( __arrayProto.filter ) {\n\t\t\t\ta = __arrayProto.filter.call( this, fn, this );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( fn.call( this, this[i], i, this ) ) {\n\t\t\t\t\t\ta.push( this[i] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn new _Api( this.context, a );\n\t\t},\n\t\n\t\n\t\tflatten: function ()\n\t\t{\n\t\t\tvar a = [];\n\t\t\treturn new _Api( this.context, a.concat.apply( a, this.toArray() ) );\n\t\t},\n\t\n\t\n\t\tjoin:    __arrayProto.join,\n\t\n\t\n\t\tindexOf: __arrayProto.indexOf || function (obj, start)\n\t\t{\n\t\t\tfor ( var i=(start || 0), ien=this.length ; i<ien ; i++ ) {\n\t\t\t\tif ( this[i] === obj ) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t},\n\t\n\t\titerator: function ( flatten, type, fn, alwaysNew ) {\n\t\t\tvar\n\t\t\t\ta = [], ret,\n\t\t\t\ti, ien, j, jen,\n\t\t\t\tcontext = this.context,\n\t\t\t\trows, items, item,\n\t\t\t\tselector = this.selector;\n\t\n\t\t\t// Argument shifting\n\t\t\tif ( typeof flatten === 'string' ) {\n\t\t\t\talwaysNew = fn;\n\t\t\t\tfn = type;\n\t\t\t\ttype = flatten;\n\t\t\t\tflatten = false;\n\t\t\t}\n\t\n\t\t\tfor ( i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\t\tvar apiInst = new _Api( context[i] );\n\t\n\t\t\t\tif ( type === 'table' ) {\n\t\t\t\t\tret = fn.call( apiInst, context[i], i );\n\t\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( type === 'columns' || type === 'rows' ) {\n\t\t\t\t\t// this has same length as context - one entry for each table\n\t\t\t\t\tret = fn.call( apiInst, context[i], this[i], i );\n\t\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {\n\t\t\t\t\t// columns and rows share the same structure.\n\t\t\t\t\t// 'this' is an array of column indexes for each context\n\t\t\t\t\titems = this[i];\n\t\n\t\t\t\t\tif ( type === 'column-rows' ) {\n\t\t\t\t\t\trows = _selector_row_indexes( context[i], selector.opts );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfor ( j=0, jen=items.length ; j<jen ; j++ ) {\n\t\t\t\t\t\titem = items[j];\n\t\n\t\t\t\t\t\tif ( type === 'cell' ) {\n\t\t\t\t\t\t\tret = fn.call( apiInst, context[i], item.row, item.column, i, j );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tret = fn.call( apiInst, context[i], item, i, j, rows );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( a.length || alwaysNew ) {\n\t\t\t\tvar api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );\n\t\t\t\tvar apiSelector = api.selector;\n\t\t\t\tapiSelector.rows = selector.rows;\n\t\t\t\tapiSelector.cols = selector.cols;\n\t\t\t\tapiSelector.opts = selector.opts;\n\t\t\t\treturn api;\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\n\t\n\t\tlastIndexOf: __arrayProto.lastIndexOf || function (obj, start)\n\t\t{\n\t\t\t// Bit cheeky...\n\t\t\treturn this.indexOf.apply( this.toArray.reverse(), arguments );\n\t\t},\n\t\n\t\n\t\tlength:  0,\n\t\n\t\n\t\tmap: function ( fn )\n\t\t{\n\t\t\tvar a = [];\n\t\n\t\t\tif ( __arrayProto.map ) {\n\t\t\t\ta = __arrayProto.map.call( this, fn, this );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\n\t\t\t\t\ta.push( fn.call( this, this[i], i ) );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn new _Api( this.context, a );\n\t\t},\n\t\n\t\n\t\tpluck: function ( prop )\n\t\t{\n\t\t\tvar fn = DataTable.util.get(prop);\n\t\n\t\t\treturn this.map( function ( el ) {\n\t\t\t\treturn fn(el);\n\t\t\t} );\n\t\t},\n\t\n\t\tpop:     __arrayProto.pop,\n\t\n\t\n\t\tpush:    __arrayProto.push,\n\t\n\t\n\t\t// Does not return an API instance\n\t\treduce: __arrayProto.reduce || function ( fn, init )\n\t\t{\n\t\t\treturn _fnReduce( this, fn, init, 0, this.length, 1 );\n\t\t},\n\t\n\t\n\t\treduceRight: __arrayProto.reduceRight || function ( fn, init )\n\t\t{\n\t\t\treturn _fnReduce( this, fn, init, this.length-1, -1, -1 );\n\t\t},\n\t\n\t\n\t\treverse: __arrayProto.reverse,\n\t\n\t\n\t\t// Object with rows, columns and opts\n\t\tselector: null,\n\t\n\t\n\t\tshift:   __arrayProto.shift,\n\t\n\t\n\t\tslice: function () {\n\t\t\treturn new _Api( this.context, this );\n\t\t},\n\t\n\t\n\t\tsort:    __arrayProto.sort, // ? name - order?\n\t\n\t\n\t\tsplice:  __arrayProto.splice,\n\t\n\t\n\t\ttoArray: function ()\n\t\t{\n\t\t\treturn __arrayProto.slice.call( this );\n\t\t},\n\t\n\t\n\t\tto$: function ()\n\t\t{\n\t\t\treturn $( this );\n\t\t},\n\t\n\t\n\t\ttoJQuery: function ()\n\t\t{\n\t\t\treturn $( this );\n\t\t},\n\t\n\t\n\t\tunique: function ()\n\t\t{\n\t\t\treturn new _Api( this.context, _unique(this) );\n\t\t},\n\t\n\t\n\t\tunshift: __arrayProto.unshift\n\t} );\n\t\n\t\n\t_Api.extend = function ( scope, obj, ext )\n\t{\n\t\t// Only extend API instances and static properties of the API\n\t\tif ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar\n\t\t\ti, ien,\n\t\t\tstruct,\n\t\t\tmethodScoping = function ( scope, fn, struc ) {\n\t\t\t\treturn function () {\n\t\t\t\t\tvar ret = fn.apply( scope, arguments );\n\t\n\t\t\t\t\t// Method extension\n\t\t\t\t\t_Api.extend( ret, ret, struc.methodExt );\n\t\t\t\t\treturn ret;\n\t\t\t\t};\n\t\t\t};\n\t\n\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\t\tstruct = ext[i];\n\t\n\t\t\t// Value\n\t\t\tobj[ struct.name ] = struct.type === 'function' ?\n\t\t\t\tmethodScoping( scope, struct.val, struct ) :\n\t\t\t\tstruct.type === 'object' ?\n\t\t\t\t\t{} :\n\t\t\t\t\tstruct.val;\n\t\n\t\t\tobj[ struct.name ].__dt_wrapper = true;\n\t\n\t\t\t// Property extension\n\t\t\t_Api.extend( scope, obj[ struct.name ], struct.propExt );\n\t\t}\n\t};\n\t\n\t\n\t// @todo - Is there need for an augment function?\n\t// _Api.augment = function ( inst, name )\n\t// {\n\t// \t// Find src object in the structure from the name\n\t// \tvar parts = name.split('.');\n\t\n\t// \t_Api.extend( inst, obj );\n\t// };\n\t\n\t\n\t//     [\n\t//       {\n\t//         name:      'data'                -- string   - Property name\n\t//         val:       function () {},       -- function - Api method (or undefined if just an object\n\t//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n\t//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n\t//       },\n\t//       {\n\t//         name:     'row'\n\t//         val:       {},\n\t//         methodExt: [ ... ],\n\t//         propExt:   [\n\t//           {\n\t//             name:      'data'\n\t//             val:       function () {},\n\t//             methodExt: [ ... ],\n\t//             propExt:   [ ... ]\n\t//           },\n\t//           ...\n\t//         ]\n\t//       }\n\t//     ]\n\t\n\t_Api.register = _api_register = function ( name, val )\n\t{\n\t\tif ( Array.isArray( name ) ) {\n\t\t\tfor ( var j=0, jen=name.length ; j<jen ; j++ ) {\n\t\t\t\t_Api.register( name[j], val );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar\n\t\t\ti, ien,\n\t\t\their = name.split('.'),\n\t\t\tstruct = __apiStruct,\n\t\t\tkey, method;\n\t\n\t\tvar find = function ( src, name ) {\n\t\t\tfor ( var i=0, ien=src.length ; i<ien ; i++ ) {\n\t\t\t\tif ( src[i].name === name ) {\n\t\t\t\t\treturn src[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\n\t\tfor ( i=0, ien=heir.length ; i<ien ; i++ ) {\n\t\t\tmethod = heir[i].indexOf('()') !== -1;\n\t\t\tkey = method ?\n\t\t\t\their[i].replace('()', '') :\n\t\t\t\their[i];\n\t\n\t\t\tvar src = find( struct, key );\n\t\t\tif ( ! src ) {\n\t\t\t\tsrc = {\n\t\t\t\t\tname:      key,\n\t\t\t\t\tval:       {},\n\t\t\t\t\tmethodExt: [],\n\t\t\t\t\tpropExt:   [],\n\t\t\t\t\ttype:      'object'\n\t\t\t\t};\n\t\t\t\tstruct.push( src );\n\t\t\t}\n\t\n\t\t\tif ( i === ien-1 ) {\n\t\t\t\tsrc.val = val;\n\t\t\t\tsrc.type = typeof val === 'function' ?\n\t\t\t\t\t'function' :\n\t\t\t\t\t$.isPlainObject( val ) ?\n\t\t\t\t\t\t'object' :\n\t\t\t\t\t\t'other';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstruct = method ?\n\t\t\t\t\tsrc.methodExt :\n\t\t\t\t\tsrc.propExt;\n\t\t\t}\n\t\t}\n\t};\n\t\n\t_Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {\n\t\t_Api.register( pluralName, val );\n\t\n\t\t_Api.register( singularName, function () {\n\t\t\tvar ret = val.apply( this, arguments );\n\t\n\t\t\tif ( ret === this ) {\n\t\t\t\t// Returned item is the API instance that was passed in, return it\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\telse if ( ret instanceof _Api ) {\n\t\t\t\t// New API instance returned, want the value from the first item\n\t\t\t\t// in the returned array for the singular result.\n\t\t\t\treturn ret.length ?\n\t\t\t\t\tArray.isArray( ret[0] ) ?\n\t\t\t\t\t\tnew _Api( ret.context, ret[0] ) : // Array results are 'enhanced'\n\t\t\t\t\t\tret[0] :\n\t\t\t\t\tundefined;\n\t\t\t}\n\t\n\t\t\t// Non-API return - just fire it back\n\t\t\treturn ret;\n\t\t} );\n\t};\n\t\n\t\n\t/**\n\t * Selector for HTML tables. Apply the given selector to the give array of\n\t * DataTables settings objects.\n\t *\n\t * @param {string|integer} [selector] jQuery selector string or integer\n\t * @param  {array} Array of DataTables settings objects to be filtered\n\t * @return {array}\n\t * @ignore\n\t */\n\tvar __table_selector = function ( selector, a )\n\t{\n\t\tif ( Array.isArray(selector) ) {\n\t\t\treturn $.map( selector, function (item) {\n\t\t\t\treturn __table_selector(item, a);\n\t\t\t} );\n\t\t}\n\t\n\t\t// Integer is used to pick out a table by index\n\t\tif ( typeof selector === 'number' ) {\n\t\t\treturn [ a[ selector ] ];\n\t\t}\n\t\n\t\t// Perform a jQuery selector on the table nodes\n\t\tvar nodes = $.map( a, function (el, i) {\n\t\t\treturn el.nTable;\n\t\t} );\n\t\n\t\treturn $(nodes)\n\t\t\t.filter( selector )\n\t\t\t.map( function (i) {\n\t\t\t\t// Need to translate back from the table node to the settings\n\t\t\t\tvar idx = $.inArray( this, nodes );\n\t\t\t\treturn a[ idx ];\n\t\t\t} )\n\t\t\t.toArray();\n\t};\n\t\n\t\n\t\n\t/**\n\t * Context selector for the API's context (i.e. the tables the API instance\n\t * refers to.\n\t *\n\t * @name    DataTable.Api#tables\n\t * @param {string|integer} [selector] Selector to pick which tables the iterator\n\t *   should operate on. If not given, all tables in the current context are\n\t *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n\t *   select multiple tables or as an integer to select a single table.\n\t * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n\t */\n\t_api_register( 'tables()', function ( selector ) {\n\t\t// A new instance is created if there was a selector specified\n\t\treturn selector !== undefined && selector !== null ?\n\t\t\tnew _Api( __table_selector( selector, this.context ) ) :\n\t\t\tthis;\n\t} );\n\t\n\t\n\t_api_register( 'table()', function ( selector ) {\n\t\tvar tables = this.tables( selector );\n\t\tvar ctx = tables.context;\n\t\n\t\t// Truncate to the first matched table\n\t\treturn ctx.length ?\n\t\t\tnew _Api( ctx[0] ) :\n\t\t\ttables;\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().nodes()', 'table().node()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTable;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().body()', 'table().body()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTBody;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().header()', 'table().header()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTHead;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().footer()', 'table().footer()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTFoot;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().containers()', 'table().container()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTableWrapper;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Redraw the tables in the current context.\n\t */\n\t_api_register( 'draw()', function ( paging ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( paging === 'page' ) {\n\t\t\t\t_fnDraw( settings );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ( typeof paging === 'string' ) {\n\t\t\t\t\tpaging = paging === 'full-hold' ?\n\t\t\t\t\t\tfalse :\n\t\t\t\t\t\ttrue;\n\t\t\t\t}\n\t\n\t\t\t\t_fnReDraw( settings, paging===false );\n\t\t\t}\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Get the current page index.\n\t *\n\t * @return {integer} Current page index (zero based)\n\t *//**\n\t * Set the current page.\n\t *\n\t * Note that if you attempt to show a page which does not exist, DataTables will\n\t * not throw an error, but rather reset the paging.\n\t *\n\t * @param {integer|string} action The paging action to take. This can be one of:\n\t *  * `integer` - The page index to jump to\n\t *  * `string` - An action to take:\n\t *    * `first` - Jump to first page.\n\t *    * `next` - Jump to the next page\n\t *    * `previous` - Jump to previous page\n\t *    * `last` - Jump to the last page.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'page()', function ( action ) {\n\t\tif ( action === undefined ) {\n\t\t\treturn this.page.info().page; // not an expensive call\n\t\t}\n\t\n\t\t// else, have an action to take on all tables\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnPageChange( settings, action );\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Paging information for the first table in the current context.\n\t *\n\t * If you require paging information for another table, use the `table()` method\n\t * with a suitable selector.\n\t *\n\t * @return {object} Object with the following properties set:\n\t *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n\t *  * `pages` - Total number of pages\n\t *  * `start` - Display index for the first record shown on the current page\n\t *  * `end` - Display index for the last record shown on the current page\n\t *  * `length` - Display length (number of records). Note that generally `start\n\t *    + length = end`, but this is not always true, for example if there are\n\t *    only 2 records to show on the final page, with a length of 10.\n\t *  * `recordsTotal` - Full data set length\n\t *  * `recordsDisplay` - Data set length once the current filtering criterion\n\t *    are applied.\n\t */\n\t_api_register( 'page.info()', function ( action ) {\n\t\tif ( this.context.length === 0 ) {\n\t\t\treturn undefined;\n\t\t}\n\t\n\t\tvar\n\t\t\tsettings   = this.context[0],\n\t\t\tstart      = settings._iDisplayStart,\n\t\t\tlen        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n\t\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\t\tall        = len === -1;\n\t\n\t\treturn {\n\t\t\t\"page\":           all ? 0 : Math.floor( start / len ),\n\t\t\t\"pages\":          all ? 1 : Math.ceil( visRecords / len ),\n\t\t\t\"start\":          start,\n\t\t\t\"end\":            settings.fnDisplayEnd(),\n\t\t\t\"length\":         len,\n\t\t\t\"recordsTotal\":   settings.fnRecordsTotal(),\n\t\t\t\"recordsDisplay\": visRecords,\n\t\t\t\"serverSide\":     _fnDataSource( settings ) === 'ssp'\n\t\t};\n\t} );\n\t\n\t\n\t/**\n\t * Get the current page length.\n\t *\n\t * @return {integer} Current page length. Note `-1` indicates that all records\n\t *   are to be shown.\n\t *//**\n\t * Set the current page length.\n\t *\n\t * @param {integer} Page length to set. Use `-1` to show all records.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'page.len()', function ( len ) {\n\t\t// Note that we can't call this function 'length()' because `length`\n\t\t// is a Javascript property of functions which defines how many arguments\n\t\t// the function expects.\n\t\tif ( len === undefined ) {\n\t\t\treturn this.context.length !== 0 ?\n\t\t\t\tthis.context[0]._iDisplayLength :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// else, set the page length\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnLengthChange( settings, len );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\tvar __reload = function ( settings, holdPosition, callback ) {\n\t\t// Use the draw event to trigger a callback\n\t\tif ( callback ) {\n\t\t\tvar api = new _Api( settings );\n\t\n\t\t\tapi.one( 'draw', function () {\n\t\t\t\tcallback( api.ajax.json() );\n\t\t\t} );\n\t\t}\n\t\n\t\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t\t_fnReDraw( settings, holdPosition );\n\t\t}\n\t\telse {\n\t\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t\t// Cancel an existing request\n\t\t\tvar xhr = settings.jqXHR;\n\t\t\tif ( xhr && xhr.readyState !== 4 ) {\n\t\t\t\txhr.abort();\n\t\t\t}\n\t\n\t\t\t// Trigger xhr\n\t\t\t_fnBuildAjax( settings, [], function( json ) {\n\t\t\t\t_fnClearTable( settings );\n\t\n\t\t\t\tvar data = _fnAjaxDataSrc( settings, json );\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\t_fnAddData( settings, data[i] );\n\t\t\t\t}\n\t\n\t\t\t\t_fnReDraw( settings, holdPosition );\n\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t} );\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Get the JSON response from the last Ajax request that DataTables made to the\n\t * server. Note that this returns the JSON from the first table in the current\n\t * context.\n\t *\n\t * @return {object} JSON received from the server.\n\t */\n\t_api_register( 'ajax.json()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( ctx.length > 0 ) {\n\t\t\treturn ctx[0].json;\n\t\t}\n\t\n\t\t// else return undefined;\n\t} );\n\t\n\t\n\t/**\n\t * Get the data submitted in the last Ajax request\n\t */\n\t_api_register( 'ajax.params()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( ctx.length > 0 ) {\n\t\t\treturn ctx[0].oAjaxData;\n\t\t}\n\t\n\t\t// else return undefined;\n\t} );\n\t\n\t\n\t/**\n\t * Reload tables from the Ajax data source. Note that this function will\n\t * automatically re-draw the table when the remote data has been loaded.\n\t *\n\t * @param {boolean} [reset=true] Reset (default) or hold the current paging\n\t *   position. A full re-sort and re-filter is performed when this method is\n\t *   called, which is why the pagination reset is the default action.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.reload()', function ( callback, resetPaging ) {\n\t\treturn this.iterator( 'table', function (settings) {\n\t\t\t__reload( settings, resetPaging===false, callback );\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Get the current Ajax URL. Note that this returns the URL from the first\n\t * table in the current context.\n\t *\n\t * @return {string} Current Ajax source URL\n\t *//**\n\t * Set the Ajax URL. Note that this will set the URL for all tables in the\n\t * current context.\n\t *\n\t * @param {string} url URL to set.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.url()', function ( url ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( url === undefined ) {\n\t\t\t// get\n\t\t\tif ( ctx.length === 0 ) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tctx = ctx[0];\n\t\n\t\t\treturn ctx.ajax ?\n\t\t\t\t$.isPlainObject( ctx.ajax ) ?\n\t\t\t\t\tctx.ajax.url :\n\t\t\t\t\tctx.ajax :\n\t\t\t\tctx.sAjaxSource;\n\t\t}\n\t\n\t\t// set\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( $.isPlainObject( settings.ajax ) ) {\n\t\t\t\tsettings.ajax.url = url;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsettings.ajax = url;\n\t\t\t}\n\t\t\t// No need to consider sAjaxSource here since DataTables gives priority\n\t\t\t// to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any\n\t\t\t// value of `sAjaxSource` redundant.\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Load data from the newly set Ajax URL. Note that this method is only\n\t * available when `ajax.url()` is used to set a URL. Additionally, this method\n\t * has the same effect as calling `ajax.reload()` but is provided for\n\t * convenience when setting a new URL. Like `ajax.reload()` it will\n\t * automatically redraw the table once the remote data has been loaded.\n\t *\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.url().load()', function ( callback, resetPaging ) {\n\t\t// Same as a reload, but makes sense to present it for easy access after a\n\t\t// url change\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\t__reload( ctx, resetPaging===false, callback );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t\n\tvar _selector_run = function ( type, selector, selectFn, settings, opts )\n\t{\n\t\tvar\n\t\t\tout = [], res,\n\t\t\ta, i, ien, j, jen,\n\t\t\tselectorType = typeof selector;\n\t\n\t\t// Can't just check for isArray here, as an API or jQuery instance might be\n\t\t// given with their array like look\n\t\tif ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {\n\t\t\tselector = [ selector ];\n\t\t}\n\t\n\t\tfor ( i=0, ien=selector.length ; i<ien ; i++ ) {\n\t\t\t// Only split on simple strings - complex expressions will be jQuery selectors\n\t\t\ta = selector[i] && selector[i].split && ! selector[i].match(/[\\[\\(:]/) ?\n\t\t\t\tselector[i].split(',') :\n\t\t\t\t[ selector[i] ];\n\t\n\t\t\tfor ( j=0, jen=a.length ; j<jen ; j++ ) {\n\t\t\t\tres = selectFn( typeof a[j] === 'string' ? (a[j]).trim() : a[j] );\n\t\n\t\t\t\tif ( res && res.length ) {\n\t\t\t\t\tout = out.concat( res );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// selector extensions\n\t\tvar ext = _ext.selector[ type ];\n\t\tif ( ext.length ) {\n\t\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\t\t\tout = ext[i]( settings, opts, out );\n\t\t\t}\n\t\t}\n\t\n\t\treturn _unique( out );\n\t};\n\t\n\t\n\tvar _selector_opts = function ( opts )\n\t{\n\t\tif ( ! opts ) {\n\t\t\topts = {};\n\t\t}\n\t\n\t\t// Backwards compatibility for 1.9- which used the terminology filter rather\n\t\t// than search\n\t\tif ( opts.filter && opts.search === undefined ) {\n\t\t\topts.search = opts.filter;\n\t\t}\n\t\n\t\treturn $.extend( {\n\t\t\tsearch: 'none',\n\t\t\torder: 'current',\n\t\t\tpage: 'all'\n\t\t}, opts );\n\t};\n\t\n\t\n\tvar _selector_first = function ( inst )\n\t{\n\t\t// Reduce the API instance to the first item found\n\t\tfor ( var i=0, ien=inst.length ; i<ien ; i++ ) {\n\t\t\tif ( inst[i].length > 0 ) {\n\t\t\t\t// Assign the first element to the first item in the instance\n\t\t\t\t// and truncate the instance and context\n\t\t\t\tinst[0] = inst[i];\n\t\t\t\tinst[0].length = 1;\n\t\t\t\tinst.length = 1;\n\t\t\t\tinst.context = [ inst.context[i] ];\n\t\n\t\t\t\treturn inst;\n\t\t\t}\n\t\t}\n\t\n\t\t// Not found - return an empty instance\n\t\tinst.length = 0;\n\t\treturn inst;\n\t};\n\t\n\t\n\tvar _selector_row_indexes = function ( settings, opts )\n\t{\n\t\tvar\n\t\t\ti, ien, tmp, a=[],\n\t\t\tdisplayFiltered = settings.aiDisplay,\n\t\t\tdisplayMaster = settings.aiDisplayMaster;\n\t\n\t\tvar\n\t\t\tsearch = opts.search,  // none, applied, removed\n\t\t\torder  = opts.order,   // applied, current, index (original - compatibility with 1.9)\n\t\t\tpage   = opts.page;    // all, current\n\t\n\t\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t\t// In server-side processing mode, most options are irrelevant since\n\t\t\t// rows not shown don't exist and the index order is the applied order\n\t\t\t// Removed is a special case - for consistency just return an empty\n\t\t\t// array\n\t\t\treturn search === 'removed' ?\n\t\t\t\t[] :\n\t\t\t\t_range( 0, displayMaster.length );\n\t\t}\n\t\telse if ( page == 'current' ) {\n\t\t\t// Current page implies that order=current and filter=applied, since it is\n\t\t\t// fairly senseless otherwise, regardless of what order and search actually\n\t\t\t// are\n\t\t\tfor ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {\n\t\t\t\ta.push( displayFiltered[i] );\n\t\t\t}\n\t\t}\n\t\telse if ( order == 'current' || order == 'applied' ) {\n\t\t\tif ( search == 'none') {\n\t\t\t\ta = displayMaster.slice();\n\t\t\t}\n\t\t\telse if ( search == 'applied' ) {\n\t\t\t\ta = displayFiltered.slice();\n\t\t\t}\n\t\t\telse if ( search == 'removed' ) {\n\t\t\t\t// O(n+m) solution by creating a hash map\n\t\t\t\tvar displayFilteredMap = {};\n\t\n\t\t\t\tfor ( var i=0, ien=displayFiltered.length ; i<ien ; i++ ) {\n\t\t\t\t\tdisplayFilteredMap[displayFiltered[i]] = null;\n\t\t\t\t}\n\t\n\t\t\t\ta = $.map( displayMaster, function (el) {\n\t\t\t\t\treturn ! displayFilteredMap.hasOwnProperty(el) ?\n\t\t\t\t\t\tel :\n\t\t\t\t\t\tnull;\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\telse if ( order == 'index' || order == 'original' ) {\n\t\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\t\tif ( search == 'none' ) {\n\t\t\t\t\ta.push( i );\n\t\t\t\t}\n\t\t\t\telse { // applied | removed\n\t\t\t\t\ttmp = $.inArray( i, displayFiltered );\n\t\n\t\t\t\t\tif ((tmp === -1 && search == 'removed') ||\n\t\t\t\t\t\t(tmp >= 0   && search == 'applied') )\n\t\t\t\t\t{\n\t\t\t\t\t\ta.push( i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn a;\n\t};\n\t\n\t\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Rows\n\t *\n\t * {}          - no selector - use all available rows\n\t * {integer}   - row aoData index\n\t * {node}      - TR node\n\t * {string}    - jQuery selector to apply to the TR elements\n\t * {array}     - jQuery array of nodes, or simply an array of TR nodes\n\t *\n\t */\n\tvar __row_selector = function ( settings, selector, opts )\n\t{\n\t\tvar rows;\n\t\tvar run = function ( sel ) {\n\t\t\tvar selInt = _intVal( sel );\n\t\t\tvar i, ien;\n\t\t\tvar aoData = settings.aoData;\n\t\n\t\t\t// Short cut - selector is a number and no options provided (default is\n\t\t\t// all records, so no need to check if the index is in there, since it\n\t\t\t// must be - dev error if the index doesn't exist).\n\t\t\tif ( selInt !== null && ! opts ) {\n\t\t\t\treturn [ selInt ];\n\t\t\t}\n\t\n\t\t\tif ( ! rows ) {\n\t\t\t\trows = _selector_row_indexes( settings, opts );\n\t\t\t}\n\t\n\t\t\tif ( selInt !== null && $.inArray( selInt, rows ) !== -1 ) {\n\t\t\t\t// Selector - integer\n\t\t\t\treturn [ selInt ];\n\t\t\t}\n\t\t\telse if ( sel === null || sel === undefined || sel === '' ) {\n\t\t\t\t// Selector - none\n\t\t\t\treturn rows;\n\t\t\t}\n\t\n\t\t\t// Selector - function\n\t\t\tif ( typeof sel === 'function' ) {\n\t\t\t\treturn $.map( rows, function (idx) {\n\t\t\t\t\tvar row = aoData[ idx ];\n\t\t\t\t\treturn sel( idx, row._aData, row.nTr ) ? idx : null;\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\t// Selector - node\n\t\t\tif ( sel.nodeName ) {\n\t\t\t\tvar rowIdx = sel._DT_RowIndex;  // Property added by DT for fast lookup\n\t\t\t\tvar cellIdx = sel._DT_CellIndex;\n\t\n\t\t\t\tif ( rowIdx !== undefined ) {\n\t\t\t\t\t// Make sure that the row is actually still present in the table\n\t\t\t\t\treturn aoData[ rowIdx ] && aoData[ rowIdx ].nTr === sel ?\n\t\t\t\t\t\t[ rowIdx ] :\n\t\t\t\t\t\t[];\n\t\t\t\t}\n\t\t\t\telse if ( cellIdx ) {\n\t\t\t\t\treturn aoData[ cellIdx.row ] && aoData[ cellIdx.row ].nTr === sel.parentNode ?\n\t\t\t\t\t\t[ cellIdx.row ] :\n\t\t\t\t\t\t[];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar host = $(sel).closest('*[data-dt-row]');\n\t\t\t\t\treturn host.length ?\n\t\t\t\t\t\t[ host.data('dt-row') ] :\n\t\t\t\t\t\t[];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// ID selector. Want to always be able to select rows by id, regardless\n\t\t\t// of if the tr element has been created or not, so can't rely upon\n\t\t\t// jQuery here - hence a custom implementation. This does not match\n\t\t\t// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n\t\t\t// but to select it using a CSS selector engine (like Sizzle or\n\t\t\t// querySelect) it would need to need to be escaped for some characters.\n\t\t\t// DataTables simplifies this for row selectors since you can select\n\t\t\t// only a row. A # indicates an id any anything that follows is the id -\n\t\t\t// unescaped.\n\t\t\tif ( typeof sel === 'string' && sel.charAt(0) === '#' ) {\n\t\t\t\t// get row index from id\n\t\t\t\tvar rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];\n\t\t\t\tif ( rowObj !== undefined ) {\n\t\t\t\t\treturn [ rowObj.idx ];\n\t\t\t\t}\n\t\n\t\t\t\t// need to fall through to jQuery in case there is DOM id that\n\t\t\t\t// matches\n\t\t\t}\n\t\t\t\n\t\t\t// Get nodes in the order from the `rows` array with null values removed\n\t\t\tvar nodes = _removeEmpty(\n\t\t\t\t_pluck_order( settings.aoData, rows, 'nTr' )\n\t\t\t);\n\t\n\t\t\t// Selector - jQuery selector string, array of nodes or jQuery object/\n\t\t\t// As jQuery's .filter() allows jQuery objects to be passed in filter,\n\t\t\t// it also allows arrays, so this will cope with all three options\n\t\t\treturn $(nodes)\n\t\t\t\t.filter( sel )\n\t\t\t\t.map( function () {\n\t\t\t\t\treturn this._DT_RowIndex;\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\t\t};\n\t\n\t\treturn _selector_run( 'row', selector, run, settings, opts );\n\t};\n\t\n\t\n\t_api_register( 'rows()', function ( selector, opts ) {\n\t\t// argument shifting\n\t\tif ( selector === undefined ) {\n\t\t\tselector = '';\n\t\t}\n\t\telse if ( $.isPlainObject( selector ) ) {\n\t\t\topts = selector;\n\t\t\tselector = '';\n\t\t}\n\t\n\t\topts = _selector_opts( opts );\n\t\n\t\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\t\treturn __row_selector( settings, selector, opts );\n\t\t}, 1 );\n\t\n\t\t// Want argument shifting here and in __row_selector?\n\t\tinst.selector.rows = selector;\n\t\tinst.selector.opts = opts;\n\t\n\t\treturn inst;\n\t} );\n\t\n\t_api_register( 'rows().nodes()', function () {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\treturn settings.aoData[ row ].nTr || undefined;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'rows().data()', function () {\n\t\treturn this.iterator( true, 'rows', function ( settings, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows, '_aData' );\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\tvar r = settings.aoData[ row ];\n\t\t\treturn type === 'search' ? r._aFilterData : r._aSortData;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\t_fnInvalidate( settings, row, src );\n\t\t} );\n\t} );\n\t\n\t_api_registerPlural( 'rows().indexes()', 'row().index()', function () {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\treturn row;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {\n\t\tvar a = [];\n\t\tvar context = this.context;\n\t\n\t\t// `iterator` will drop undefined values, but in this case we want them\n\t\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\tfor ( var j=0, jen=this[i].length ; j<jen ; j++ ) {\n\t\t\t\tvar id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );\n\t\t\t\ta.push( (hash === true ? '#' : '' )+ id );\n\t\t\t}\n\t\t}\n\t\n\t\treturn new _Api( context, a );\n\t} );\n\t\n\t_api_registerPlural( 'rows().remove()', 'row().remove()', function () {\n\t\tvar that = this;\n\t\n\t\tthis.iterator( 'row', function ( settings, row, thatIdx ) {\n\t\t\tvar data = settings.aoData;\n\t\t\tvar rowData = data[ row ];\n\t\t\tvar i, ien, j, jen;\n\t\t\tvar loopRow, loopCells;\n\t\n\t\t\tdata.splice( row, 1 );\n\t\n\t\t\t// Update the cached indexes\n\t\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\tloopRow = data[i];\n\t\t\t\tloopCells = loopRow.anCells;\n\t\n\t\t\t\t// Rows\n\t\t\t\tif ( loopRow.nTr !== null ) {\n\t\t\t\t\tloopRow.nTr._DT_RowIndex = i;\n\t\t\t\t}\n\t\n\t\t\t\t// Cells\n\t\t\t\tif ( loopCells !== null ) {\n\t\t\t\t\tfor ( j=0, jen=loopCells.length ; j<jen ; j++ ) {\n\t\t\t\t\t\tloopCells[j]._DT_CellIndex.row = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Delete from the display arrays\n\t\t\t_fnDeleteIndex( settings.aiDisplayMaster, row );\n\t\t\t_fnDeleteIndex( settings.aiDisplay, row );\n\t\t\t_fnDeleteIndex( that[ thatIdx ], row, false ); // maintain local indexes\n\t\n\t\t\t// For server-side processing tables - subtract the deleted row from the count\n\t\t\tif ( settings._iRecordsDisplay > 0 ) {\n\t\t\t\tsettings._iRecordsDisplay--;\n\t\t\t}\n\t\n\t\t\t// Check for an 'overflow' they case for displaying the table\n\t\t\t_fnLengthOverflow( settings );\n\t\n\t\t\t// Remove the row's ID reference if there is one\n\t\t\tvar id = settings.rowIdFn( rowData._aData );\n\t\t\tif ( id !== undefined ) {\n\t\t\t\tdelete settings.aIds[ id ];\n\t\t\t}\n\t\t} );\n\t\n\t\tthis.iterator( 'table', function ( settings ) {\n\t\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\t\tsettings.aoData[i].idx = i;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( 'rows.add()', function ( rows ) {\n\t\tvar newRows = this.iterator( 'table', function ( settings ) {\n\t\t\t\tvar row, i, ien;\n\t\t\t\tvar out = [];\n\t\n\t\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = rows[i];\n\t\n\t\t\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\t\t\t\tout.push( _fnAddTr( settings, row )[0] );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tout.push( _fnAddData( settings, row ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn out;\n\t\t\t}, 1 );\n\t\n\t\t// Return an Api.rows() extended instance, so rows().nodes() etc can be used\n\t\tvar modRows = this.rows( -1 );\n\t\tmodRows.pop();\n\t\t$.merge( modRows, newRows );\n\t\n\t\treturn modRows;\n\t} );\n\t\n\t\n\t\n\t\n\t\n\t/**\n\t *\n\t */\n\t_api_register( 'row()', function ( selector, opts ) {\n\t\treturn _selector_first( this.rows( selector, opts ) );\n\t} );\n\t\n\t\n\t_api_register( 'row().data()', function ( data ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( data === undefined ) {\n\t\t\t// Get\n\t\t\treturn ctx.length && this.length ?\n\t\t\t\tctx[0].aoData[ this[0] ]._aData :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// Set\n\t\tvar row = ctx[0].aoData[ this[0] ];\n\t\trow._aData = data;\n\t\n\t\t// If the DOM has an id, and the data source is an array\n\t\tif ( Array.isArray( data ) && row.nTr && row.nTr.id ) {\n\t\t\t_fnSetObjectDataFn( ctx[0].rowId )( data, row.nTr.id );\n\t\t}\n\t\n\t\t// Automatically invalidate\n\t\t_fnInvalidate( ctx[0], this[0], 'data' );\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( 'row().node()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\treturn ctx.length && this.length ?\n\t\t\tctx[0].aoData[ this[0] ].nTr || null :\n\t\t\tnull;\n\t} );\n\t\n\t\n\t_api_register( 'row.add()', function ( row ) {\n\t\t// Allow a jQuery object to be passed in - only a single row is added from\n\t\t// it though - the first element in the set\n\t\tif ( row instanceof $ && row.length ) {\n\t\t\trow = row[0];\n\t\t}\n\t\n\t\tvar rows = this.iterator( 'table', function ( settings ) {\n\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\t\treturn _fnAddTr( settings, row )[0];\n\t\t\t}\n\t\t\treturn _fnAddData( settings, row );\n\t\t} );\n\t\n\t\t// Return an Api.rows() extended instance, with the newly added row selected\n\t\treturn this.row( rows[0] );\n\t} );\n\t\n\t\n\t$(document).on('plugin-init.dt', function (e, context) {\n\t\tvar api = new _Api( context );\n\t\tvar namespace = 'on-plugin-init';\n\t\tvar stateSaveParamsEvent = 'stateSaveParams.' + namespace;\n\t\tvar destroyEvent = 'destroy. ' + namespace;\n\t\n\t\tapi.on( stateSaveParamsEvent, function ( e, settings, d ) {\n\t\t\t// This could be more compact with the API, but it is a lot faster as a simple\n\t\t\t// internal loop\n\t\t\tvar idFn = settings.rowIdFn;\n\t\t\tvar data = settings.aoData;\n\t\t\tvar ids = [];\n\t\n\t\t\tfor (var i=0 ; i<data.length ; i++) {\n\t\t\t\tif (data[i]._detailsShow) {\n\t\t\t\t\tids.push( '#' + idFn(data[i]._aData) );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\td.childRows = ids;\n\t\t});\n\t\n\t\tapi.on( destroyEvent, function () {\n\t\t\tapi.off(stateSaveParamsEvent + ' ' + destroyEvent);\n\t\t});\n\t\n\t\tvar loaded = api.state.loaded();\n\t\n\t\tif ( loaded && loaded.childRows ) {\n\t\t\tapi\n\t\t\t\t.rows( $.map(loaded.childRows, function (id){\n\t\t\t\t\treturn id.replace(/:/g, '\\\\:')\n\t\t\t\t}) )\n\t\t\t\t.every( function () {\n\t\t\t\t\t_fnCallbackFire( context, null, 'requestChild', [ this ] )\n\t\t\t\t});\n\t\t}\n\t});\n\t\n\tvar __details_add = function ( ctx, row, data, klass )\n\t{\n\t\t// Convert to array of TR elements\n\t\tvar rows = [];\n\t\tvar addRow = function ( r, k ) {\n\t\t\t// Recursion to allow for arrays of jQuery objects\n\t\t\tif ( Array.isArray( r ) || r instanceof $ ) {\n\t\t\t\tfor ( var i=0, ien=r.length ; i<ien ; i++ ) {\n\t\t\t\t\taddRow( r[i], k );\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If we get a TR element, then just add it directly - up to the dev\n\t\t\t// to add the correct number of columns etc\n\t\t\tif ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {\n\t\t\t\trows.push( r );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Otherwise create a row with a wrapper\n\t\t\t\tvar created = $('<tr><td></td></tr>').addClass( k );\n\t\t\t\t$('td', created)\n\t\t\t\t\t.addClass( k )\n\t\t\t\t\t.html( r )\n\t\t\t\t\t[0].colSpan = _fnVisbleColumns( ctx );\n\t\n\t\t\t\trows.push( created[0] );\n\t\t\t}\n\t\t};\n\t\n\t\taddRow( data, klass );\n\t\n\t\tif ( row._details ) {\n\t\t\trow._details.detach();\n\t\t}\n\t\n\t\trow._details = $(rows);\n\t\n\t\t// If the children were already shown, that state should be retained\n\t\tif ( row._detailsShow ) {\n\t\t\trow._details.insertAfter( row.nTr );\n\t\t}\n\t};\n\t\n\t\n\t// Make state saving of child row details async to allow them to be batch processed\n\tvar __details_state = DataTable.util.throttle(\n\t\tfunction (ctx) {\n\t\t\t_fnSaveState( ctx[0] )\n\t\t},\n\t\t500\n\t);\n\t\n\t\n\tvar __details_remove = function ( api, idx )\n\t{\n\t\tvar ctx = api.context;\n\t\n\t\tif ( ctx.length ) {\n\t\t\tvar row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];\n\t\n\t\t\tif ( row && row._details ) {\n\t\t\t\trow._details.remove();\n\t\n\t\t\t\trow._detailsShow = undefined;\n\t\t\t\trow._details = undefined;\n\t\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\n\t\t\t\t__details_state( ctx );\n\t\t\t}\n\t\t}\n\t};\n\t\n\t\n\tvar __details_display = function ( api, show ) {\n\t\tvar ctx = api.context;\n\t\n\t\tif ( ctx.length && api.length ) {\n\t\t\tvar row = ctx[0].aoData[ api[0] ];\n\t\n\t\t\tif ( row._details ) {\n\t\t\t\trow._detailsShow = show;\n\t\n\t\t\t\tif ( show ) {\n\t\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t\t$( row.nTr ).addClass( 'dt-hasChild' );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\trow._details.detach();\n\t\t\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\n\t\t\t\t}\n\t\n\t\t\t\t_fnCallbackFire( ctx[0], null, 'childRow', [ show, api.row( api[0] ) ] )\n\t\n\t\t\t\t__details_events( ctx[0] );\n\t\t\t\t__details_state( ctx );\n\t\t\t}\n\t\t}\n\t};\n\t\n\t\n\tvar __details_events = function ( settings )\n\t{\n\t\tvar api = new _Api( settings );\n\t\tvar namespace = '.dt.DT_details';\n\t\tvar drawEvent = 'draw'+namespace;\n\t\tvar colvisEvent = 'column-sizing'+namespace;\n\t\tvar destroyEvent = 'destroy'+namespace;\n\t\tvar data = settings.aoData;\n\t\n\t\tapi.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );\n\t\n\t\tif ( _pluck( data, '_details' ).length > 0 ) {\n\t\t\t// On each draw, insert the required elements into the document\n\t\t\tapi.on( drawEvent, function ( e, ctx ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tapi.rows( {page:'current'} ).eq(0).each( function (idx) {\n\t\t\t\t\t// Internal data grab\n\t\t\t\t\tvar row = data[ idx ];\n\t\n\t\t\t\t\tif ( row._detailsShow ) {\n\t\t\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\n\t\t\t// Column visibility change - update the colspan\n\t\t\tapi.on( colvisEvent, function ( e, ctx, idx, vis ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t// Update the colspan for the details rows (note, only if it already has\n\t\t\t\t// a colspan)\n\t\t\t\tvar row, visible = _fnVisbleColumns( ctx );\n\t\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = data[i];\n\t\n\t\t\t\t\tif ( row._details ) {\n\t\t\t\t\t\trow._details.children('td[colspan]').attr('colspan', visible );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\t// Table destroyed - nuke any child rows\n\t\t\tapi.on( destroyEvent, function ( e, ctx ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( data[i]._details ) {\n\t\t\t\t\t\t__details_remove( api, i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t};\n\t\n\t// Strings for the method names to help minification\n\tvar _emp = '';\n\tvar _child_obj = _emp+'row().child';\n\tvar _child_mth = _child_obj+'()';\n\t\n\t// data can be:\n\t//  tr\n\t//  string\n\t//  jQuery or array of any of the above\n\t_api_register( _child_mth, function ( data, klass ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( data === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length && this.length ?\n\t\t\t\tctx[0].aoData[ this[0] ]._details :\n\t\t\t\tundefined;\n\t\t}\n\t\telse if ( data === true ) {\n\t\t\t// show\n\t\t\tthis.child.show();\n\t\t}\n\t\telse if ( data === false ) {\n\t\t\t// remove\n\t\t\t__details_remove( this );\n\t\t}\n\t\telse if ( ctx.length && this.length ) {\n\t\t\t// set\n\t\t\t__details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );\n\t\t}\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( [\n\t\t_child_obj+'.show()',\n\t\t_child_mth+'.show()' // only when `child()` was called with parameters (without\n\t], function ( show ) {   // it returns an object and this method is not executed)\n\t\t__details_display( this, true );\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( [\n\t\t_child_obj+'.hide()',\n\t\t_child_mth+'.hide()' // only when `child()` was called with parameters (without\n\t], function () {         // it returns an object and this method is not executed)\n\t\t__details_display( this, false );\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( [\n\t\t_child_obj+'.remove()',\n\t\t_child_mth+'.remove()' // only when `child()` was called with parameters (without\n\t], function () {           // it returns an object and this method is not executed)\n\t\t__details_remove( this );\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( _child_obj+'.isShown()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( ctx.length && this.length ) {\n\t\t\t// _detailsShown as false or undefined will fall through to return false\n\t\t\treturn ctx[0].aoData[ this[0] ]._detailsShow || false;\n\t\t}\n\t\treturn false;\n\t} );\n\t\n\t\n\t\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Columns\n\t *\n\t * {integer}           - column index (>=0 count from left, <0 count from right)\n\t * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n\t * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n\t * \"{string}:name\"     - column name\n\t * \"{string}\"          - jQuery selector on column header nodes\n\t *\n\t */\n\t\n\t// can be an array of these items, comma separated list, or an array of comma\n\t// separated lists\n\t\n\tvar __re_column_selector = /^([^:]+):(name|visIdx|visible)$/;\n\t\n\t\n\t// r1 and r2 are redundant - but it means that the parameters match for the\n\t// iterator callback in columns().data()\n\tvar __columnData = function ( settings, column, r1, r2, rows ) {\n\t\tvar a = [];\n\t\tfor ( var row=0, ien=rows.length ; row<ien ; row++ ) {\n\t\t\ta.push( _fnGetCellData( settings, rows[row], column ) );\n\t\t}\n\t\treturn a;\n\t};\n\t\n\t\n\tvar __column_selector = function ( settings, selector, opts )\n\t{\n\t\tvar\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tnames = _pluck( columns, 'sName' ),\n\t\t\tnodes = _pluck( columns, 'nTh' );\n\t\n\t\tvar run = function ( s ) {\n\t\t\tvar selInt = _intVal( s );\n\t\n\t\t\t// Selector - all\n\t\t\tif ( s === '' ) {\n\t\t\t\treturn _range( columns.length );\n\t\t\t}\n\t\n\t\t\t// Selector - index\n\t\t\tif ( selInt !== null ) {\n\t\t\t\treturn [ selInt >= 0 ?\n\t\t\t\t\tselInt : // Count from left\n\t\t\t\t\tcolumns.length + selInt // Count from right (+ because its a negative value)\n\t\t\t\t];\n\t\t\t}\n\t\n\t\t\t// Selector = function\n\t\t\tif ( typeof s === 'function' ) {\n\t\t\t\tvar rows = _selector_row_indexes( settings, opts );\n\t\n\t\t\t\treturn $.map( columns, function (col, idx) {\n\t\t\t\t\treturn s(\n\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t__columnData( settings, idx, 0, 0, rows ),\n\t\t\t\t\t\t\tnodes[ idx ]\n\t\t\t\t\t\t) ? idx : null;\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\t// jQuery or string selector\n\t\t\tvar match = typeof s === 'string' ?\n\t\t\t\ts.match( __re_column_selector ) :\n\t\t\t\t'';\n\t\n\t\t\tif ( match ) {\n\t\t\t\tswitch( match[2] ) {\n\t\t\t\t\tcase 'visIdx':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\t\tvar idx = parseInt( match[1], 10 );\n\t\t\t\t\t\t// Visible index given, convert to column index\n\t\t\t\t\t\tif ( idx < 0 ) {\n\t\t\t\t\t\t\t// Counting from the right\n\t\t\t\t\t\t\tvar visColumns = $.map( columns, function (col,i) {\n\t\t\t\t\t\t\t\treturn col.bVisible ? i : null;\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\treturn [ visColumns[ visColumns.length + idx ] ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Counting from the left\n\t\t\t\t\t\treturn [ _fnVisibleToColumnIndex( settings, idx ) ];\n\t\n\t\t\t\t\tcase 'name':\n\t\t\t\t\t\t// match by name. `names` is column index complete and in order\n\t\t\t\t\t\treturn $.map( names, function (name, i) {\n\t\t\t\t\t\t\treturn name === match[1] ? i : null;\n\t\t\t\t\t\t} );\n\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Cell in the table body\n\t\t\tif ( s.nodeName && s._DT_CellIndex ) {\n\t\t\t\treturn [ s._DT_CellIndex.column ];\n\t\t\t}\n\t\n\t\t\t// jQuery selector on the TH elements for the columns\n\t\t\tvar jqResult = $( nodes )\n\t\t\t\t.filter( s )\n\t\t\t\t.map( function () {\n\t\t\t\t\treturn $.inArray( this, nodes ); // `nodes` is column index complete and in order\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\t\n\t\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\t\treturn jqResult;\n\t\t\t}\n\t\n\t\t\t// Otherwise a node which might have a `dt-column` data attribute, or be\n\t\t\t// a child or such an element\n\t\t\tvar host = $(s).closest('*[data-dt-column]');\n\t\t\treturn host.length ?\n\t\t\t\t[ host.data('dt-column') ] :\n\t\t\t\t[];\n\t\t};\n\t\n\t\treturn _selector_run( 'column', selector, run, settings, opts );\n\t};\n\t\n\t\n\tvar __setColumnVis = function ( settings, column, vis ) {\n\t\tvar\n\t\t\tcols = settings.aoColumns,\n\t\t\tcol  = cols[ column ],\n\t\t\tdata = settings.aoData,\n\t\t\trow, cells, i, ien, tr;\n\t\n\t\t// Get\n\t\tif ( vis === undefined ) {\n\t\t\treturn col.bVisible;\n\t\t}\n\t\n\t\t// Set\n\t\t// No change\n\t\tif ( col.bVisible === vis ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( vis ) {\n\t\t\t// Insert column\n\t\t\t// Need to decide if we should use appendChild or insertBefore\n\t\t\tvar insertBefore = $.inArray( true, _pluck(cols, 'bVisible'), column+1 );\n\t\n\t\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\ttr = data[i].nTr;\n\t\t\t\tcells = data[i].anCells;\n\t\n\t\t\t\tif ( tr ) {\n\t\t\t\t\t// insertBefore can act like appendChild if 2nd arg is null\n\t\t\t\t\ttr.insertBefore( cells[ column ], cells[ insertBefore ] || null );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Remove column\n\t\t\t$( _pluck( settings.aoData, 'anCells', column ) ).detach();\n\t\t}\n\t\n\t\t// Common actions\n\t\tcol.bVisible = vis;\n\t};\n\t\n\t\n\t_api_register( 'columns()', function ( selector, opts ) {\n\t\t// argument shifting\n\t\tif ( selector === undefined ) {\n\t\t\tselector = '';\n\t\t}\n\t\telse if ( $.isPlainObject( selector ) ) {\n\t\t\topts = selector;\n\t\t\tselector = '';\n\t\t}\n\t\n\t\topts = _selector_opts( opts );\n\t\n\t\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\t\treturn __column_selector( settings, selector, opts );\n\t\t}, 1 );\n\t\n\t\t// Want argument shifting here and in _row_selector?\n\t\tinst.selector.cols = selector;\n\t\tinst.selector.opts = opts;\n\t\n\t\treturn inst;\n\t} );\n\t\n\t_api_registerPlural( 'columns().header()', 'column().header()', function ( selector, opts ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column].nTh;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().footer()', 'column().footer()', function ( selector, opts ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column].nTf;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().data()', 'column().data()', function () {\n\t\treturn this.iterator( 'column-rows', __columnData, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column].mData;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {\n\t\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows,\n\t\t\t\ttype === 'search' ? '_aFilterData' : '_aSortData', column\n\t\t\t);\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {\n\t\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows, 'anCells', column ) ;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {\n\t\tvar that = this;\n\t\tvar ret = this.iterator( 'column', function ( settings, column ) {\n\t\t\tif ( vis === undefined ) {\n\t\t\t\treturn settings.aoColumns[ column ].bVisible;\n\t\t\t} // else\n\t\t\t__setColumnVis( settings, column, vis );\n\t\t} );\n\t\n\t\t// Group the column visibility changes\n\t\tif ( vis !== undefined ) {\n\t\t\tthis.iterator( 'table', function ( settings ) {\n\t\t\t\t// Redraw the header after changes\n\t\t\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t\t\t_fnDrawHead( settings, settings.aoFooter );\n\t\t\n\t\t\t\t// Update colspan for no records display. Child rows and extensions will use their own\n\t\t\t\t// listeners to do this - only need to update the empty table item here\n\t\t\t\tif ( ! settings.aiDisplay.length ) {\n\t\t\t\t\t$(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));\n\t\t\t\t}\n\t\t\n\t\t\t\t_fnSaveState( settings );\n\t\n\t\t\t\t// Second loop once the first is done for events\n\t\t\t\tthat.iterator( 'column', function ( settings, column ) {\n\t\t\t\t\t_fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, calc] );\n\t\t\t\t} );\n\t\n\t\t\t\tif ( calc === undefined || calc ) {\n\t\t\t\t\tthat.columns.adjust();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\n\t\treturn ret;\n\t} );\n\t\n\t_api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn type === 'visible' ?\n\t\t\t\t_fnColumnIndexToVisible( settings, column ) :\n\t\t\t\tcolumn;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'columns.adjust()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'column.index()', function ( type, idx ) {\n\t\tif ( this.context.length !== 0 ) {\n\t\t\tvar ctx = this.context[0];\n\t\n\t\t\tif ( type === 'fromVisible' || type === 'toData' ) {\n\t\t\t\treturn _fnVisibleToColumnIndex( ctx, idx );\n\t\t\t}\n\t\t\telse if ( type === 'fromData' || type === 'toVisible' ) {\n\t\t\t\treturn _fnColumnIndexToVisible( ctx, idx );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t_api_register( 'column()', function ( selector, opts ) {\n\t\treturn _selector_first( this.columns( selector, opts ) );\n\t} );\n\t\n\tvar __cell_selector = function ( settings, selector, opts )\n\t{\n\t\tvar data = settings.aoData;\n\t\tvar rows = _selector_row_indexes( settings, opts );\n\t\tvar cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );\n\t\tvar allCells = $(_flatten( [], cells ));\n\t\tvar row;\n\t\tvar columns = settings.aoColumns.length;\n\t\tvar a, i, ien, j, o, host;\n\t\n\t\tvar run = function ( s ) {\n\t\t\tvar fnSelector = typeof s === 'function';\n\t\n\t\t\tif ( s === null || s === undefined || fnSelector ) {\n\t\t\t\t// All cells and function selectors\n\t\t\t\ta = [];\n\t\n\t\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = rows[i];\n\t\n\t\t\t\t\tfor ( j=0 ; j<columns ; j++ ) {\n\t\t\t\t\t\to = {\n\t\t\t\t\t\t\trow: row,\n\t\t\t\t\t\t\tcolumn: j\n\t\t\t\t\t\t};\n\t\n\t\t\t\t\t\tif ( fnSelector ) {\n\t\t\t\t\t\t\t// Selector - function\n\t\t\t\t\t\t\thost = data[ row ];\n\t\n\t\t\t\t\t\t\tif ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {\n\t\t\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Selector - all\n\t\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn a;\n\t\t\t}\n\t\t\t\n\t\t\t// Selector - index\n\t\t\tif ( $.isPlainObject( s ) ) {\n\t\t\t\t// Valid cell index and its in the array of selectable rows\n\t\t\t\treturn s.column !== undefined && s.row !== undefined && $.inArray( s.row, rows ) !== -1 ?\n\t\t\t\t\t[s] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\n\t\t\t// Selector - jQuery filtered cells\n\t\t\tvar jqResult = allCells\n\t\t\t\t.filter( s )\n\t\t\t\t.map( function (i, el) {\n\t\t\t\t\treturn { // use a new object, in case someone changes the values\n\t\t\t\t\t\trow:    el._DT_CellIndex.row,\n\t\t\t\t\t\tcolumn: el._DT_CellIndex.column\n\t \t\t\t\t};\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\t\n\t\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\t\treturn jqResult;\n\t\t\t}\n\t\n\t\t\t// Otherwise the selector is a node, and there is one last option - the\n\t\t\t// element might be a child of an element which has dt-row and dt-column\n\t\t\t// data attributes\n\t\t\thost = $(s).closest('*[data-dt-row]');\n\t\t\treturn host.length ?\n\t\t\t\t[ {\n\t\t\t\t\trow: host.data('dt-row'),\n\t\t\t\t\tcolumn: host.data('dt-column')\n\t\t\t\t} ] :\n\t\t\t\t[];\n\t\t};\n\t\n\t\treturn _selector_run( 'cell', selector, run, settings, opts );\n\t};\n\t\n\t\n\t\n\t\n\t_api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {\n\t\t// Argument shifting\n\t\tif ( $.isPlainObject( rowSelector ) ) {\n\t\t\t// Indexes\n\t\t\tif ( rowSelector.row === undefined ) {\n\t\t\t\t// Selector options in first parameter\n\t\t\t\topts = rowSelector;\n\t\t\t\trowSelector = null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Cell index objects in first parameter\n\t\t\t\topts = columnSelector;\n\t\t\t\tcolumnSelector = null;\n\t\t\t}\n\t\t}\n\t\tif ( $.isPlainObject( columnSelector ) ) {\n\t\t\topts = columnSelector;\n\t\t\tcolumnSelector = null;\n\t\t}\n\t\n\t\t// Cell selector\n\t\tif ( columnSelector === null || columnSelector === undefined ) {\n\t\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t\treturn __cell_selector( settings, rowSelector, _selector_opts( opts ) );\n\t\t\t} );\n\t\t}\n\t\n\t\t// The default built in options need to apply to row and columns\n\t\tvar internalOpts = opts ? {\n\t\t\tpage: opts.page,\n\t\t\torder: opts.order,\n\t\t\tsearch: opts.search\n\t\t} : {};\n\t\n\t\t// Row + column selector\n\t\tvar columns = this.columns( columnSelector, internalOpts );\n\t\tvar rows = this.rows( rowSelector, internalOpts );\n\t\tvar i, ien, j, jen;\n\t\n\t\tvar cellsNoOpts = this.iterator( 'table', function ( settings, idx ) {\n\t\t\tvar a = [];\n\t\n\t\t\tfor ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {\n\t\t\t\tfor ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {\n\t\t\t\t\ta.push( {\n\t\t\t\t\t\trow:    rows[idx][i],\n\t\t\t\t\t\tcolumn: columns[idx][j]\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn a;\n\t\t}, 1 );\n\t\n\t\t// There is currently only one extension which uses a cell selector extension\n\t\t// It is a _major_ performance drag to run this if it isn't needed, so this is\n\t\t// an extension specific check at the moment\n\t\tvar cells = opts && opts.selected ?\n\t\t\tthis.cells( cellsNoOpts, opts ) :\n\t\t\tcellsNoOpts;\n\t\n\t\t$.extend( cells.selector, {\n\t\t\tcols: columnSelector,\n\t\t\trows: rowSelector,\n\t\t\topts: opts\n\t\t} );\n\t\n\t\treturn cells;\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().nodes()', 'cell().node()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\tvar data = settings.aoData[ row ];\n\t\n\t\t\treturn data && data.anCells ?\n\t\t\t\tdata.anCells[ column ] :\n\t\t\t\tundefined;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_register( 'cells().data()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn _fnGetCellData( settings, row, column );\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {\n\t\ttype = type === 'search' ? '_aFilterData' : '_aSortData';\n\t\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn settings.aoData[ row ][ type ][ column ];\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn _fnGetCellData( settings, row, column, type );\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().indexes()', 'cell().index()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn {\n\t\t\t\trow: row,\n\t\t\t\tcolumn: column,\n\t\t\t\tcolumnVisible: _fnColumnIndexToVisible( settings, column )\n\t\t\t};\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\t_fnInvalidate( settings, row, src, column );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t_api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {\n\t\treturn _selector_first( this.cells( rowSelector, columnSelector, opts ) );\n\t} );\n\t\n\t\n\t_api_register( 'cell().data()', function ( data ) {\n\t\tvar ctx = this.context;\n\t\tvar cell = this[0];\n\t\n\t\tif ( data === undefined ) {\n\t\t\t// Get\n\t\t\treturn ctx.length && cell.length ?\n\t\t\t\t_fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// Set\n\t\t_fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );\n\t\t_fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Get current ordering (sorting) that has been applied to the table.\n\t *\n\t * @returns {array} 2D array containing the sorting information for the first\n\t *   table in the current context. Each element in the parent array represents\n\t *   a column being sorted upon (i.e. multi-sorting with two columns would have\n\t *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n\t *   the column index that the sorting condition applies to, the second is the\n\t *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n\t *   index of the sorting order from the `column.sorting` initialisation array.\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {integer} order Column index to sort upon.\n\t * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n\t * @returns {DataTables.Api} this\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {array} order 1D array of sorting information to be applied.\n\t * @param {array} [...] Optional additional sorting conditions\n\t * @returns {DataTables.Api} this\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {array} order 2D array of sorting information to be applied.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'order()', function ( order, dir ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( order === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length !== 0 ?\n\t\t\t\tctx[0].aaSorting :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// set\n\t\tif ( typeof order === 'number' ) {\n\t\t\t// Simple column / direction passed in\n\t\t\torder = [ [ order, dir ] ];\n\t\t}\n\t\telse if ( order.length && ! Array.isArray( order[0] ) ) {\n\t\t\t// Arguments passed in (list of 1D arrays)\n\t\t\torder = Array.prototype.slice.call( arguments );\n\t\t}\n\t\t// otherwise a 2D array was passed in\n\t\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tsettings.aaSorting = order.slice();\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Attach a sort listener to an element for a given column\n\t *\n\t * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n\t *   listener to. This can take the form of a single DOM node, a jQuery\n\t *   collection of nodes or a jQuery selector which will identify the node(s).\n\t * @param {integer} column the column that a click on this node will sort on\n\t * @param {function} [callback] callback function when sort is run\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'order.listener()', function ( node, column, callback ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnSortAttachListener( settings, node, column, callback );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'order.fixed()', function ( set ) {\n\t\tif ( ! set ) {\n\t\t\tvar ctx = this.context;\n\t\t\tvar fixed = ctx.length ?\n\t\t\t\tctx[0].aaSortingFixed :\n\t\t\t\tundefined;\n\t\n\t\t\treturn Array.isArray( fixed ) ?\n\t\t\t\t{ pre: fixed } :\n\t\t\t\tfixed;\n\t\t}\n\t\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tsettings.aaSortingFixed = $.extend( true, {}, set );\n\t\t} );\n\t} );\n\t\n\t\n\t// Order by the selected column(s)\n\t_api_register( [\n\t\t'columns().order()',\n\t\t'column().order()'\n\t], function ( dir ) {\n\t\tvar that = this;\n\t\n\t\treturn this.iterator( 'table', function ( settings, i ) {\n\t\t\tvar sort = [];\n\t\n\t\t\t$.each( that[i], function (j, col) {\n\t\t\t\tsort.push( [ col, dir ] );\n\t\t\t} );\n\t\n\t\t\tsettings.aaSorting = sort;\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t_api_register( 'search()', function ( input, regex, smart, caseInsen ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( input === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length !== 0 ?\n\t\t\t\tctx[0].oPreviousSearch.sSearch :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// set\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t_fnFilterComplete( settings, $.extend( {}, settings.oPreviousSearch, {\n\t\t\t\t\"sSearch\": input+\"\",\n\t\t\t\t\"bRegex\":  regex === null ? false : regex,\n\t\t\t\t\"bSmart\":  smart === null ? true  : smart,\n\t\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t\t} ), 1 );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_registerPlural(\n\t\t'columns().search()',\n\t\t'column().search()',\n\t\tfunction ( input, regex, smart, caseInsen ) {\n\t\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\t\tvar preSearch = settings.aoPreSearchCols;\n\t\n\t\t\t\tif ( input === undefined ) {\n\t\t\t\t\t// get\n\t\t\t\t\treturn preSearch[ column ].sSearch;\n\t\t\t\t}\n\t\n\t\t\t\t// set\n\t\t\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t$.extend( preSearch[ column ], {\n\t\t\t\t\t\"sSearch\": input+\"\",\n\t\t\t\t\t\"bRegex\":  regex === null ? false : regex,\n\t\t\t\t\t\"bSmart\":  smart === null ? true  : smart,\n\t\t\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t\t\t} );\n\t\n\t\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch, 1 );\n\t\t\t} );\n\t\t}\n\t);\n\t\n\t/*\n\t * State API methods\n\t */\n\t\n\t_api_register( 'state()', function () {\n\t\treturn this.context.length ?\n\t\t\tthis.context[0].oSavedState :\n\t\t\tnull;\n\t} );\n\t\n\t\n\t_api_register( 'state.clear()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t// Save an empty object\n\t\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, {} );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'state.loaded()', function () {\n\t\treturn this.context.length ?\n\t\t\tthis.context[0].oLoadedState :\n\t\t\tnull;\n\t} );\n\t\n\t\n\t_api_register( 'state.save()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnSaveState( settings );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Set the jQuery or window object to be used by DataTables\n\t *\n\t * @param {*} module Library / container object\n\t * @param {string} type Library or container type `lib` or `win`.\n\t */\n\tDataTable.use = function (module, type) {\n\t\tif (type === 'lib' || module.fn) {\n\t\t\t$ = module;\n\t\t}\n\t\telse if (type == 'win' || module.document) {\n\t\t\twindow = module;\n\t\t\tdocument = module.document;\n\t\t}\n\t}\n\t\n\t/**\n\t * CommonJS factory function pass through. This will check if the arguments\n\t * given are a window object or a jQuery object. If so they are set\n\t * accordingly.\n\t * @param {*} root Window\n\t * @param {*} jq jQUery\n\t * @returns {boolean} Indicator\n\t */\n\tDataTable.factory = function (root, jq) {\n\t\tvar is = false;\n\t\n\t\t// Test if the first parameter is a window object\n\t\tif (root && root.document) {\n\t\t\twindow = root;\n\t\t\tdocument = root.document;\n\t\t}\n\t\n\t\t// Test if the second parameter is a jQuery object\n\t\tif (jq && jq.fn && jq.fn.jquery) {\n\t\t\t$ = jq;\n\t\t\tis = true;\n\t\t}\n\t\n\t\treturn is;\n\t}\n\t\n\t/**\n\t * Provide a common method for plug-ins to check the version of DataTables being\n\t * used, in order to ensure compatibility.\n\t *\n\t *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n\t *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n\t *  @returns {boolean} true if this version of DataTables is greater or equal to\n\t *    the required version, or false if this version of DataTales is not\n\t *    suitable\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n\t */\n\tDataTable.versionCheck = DataTable.fnVersionCheck = function( version )\n\t{\n\t\tvar aThis = DataTable.version.split('.');\n\t\tvar aThat = version.split('.');\n\t\tvar iThis, iThat;\n\t\n\t\tfor ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {\n\t\t\tiThis = parseInt( aThis[i], 10 ) || 0;\n\t\t\tiThat = parseInt( aThat[i], 10 ) || 0;\n\t\n\t\t\t// Parts are the same, keep comparing\n\t\t\tif (iThis === iThat) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\t// Parts are different, return immediately\n\t\t\treturn iThis > iThat;\n\t\t}\n\t\n\t\treturn true;\n\t};\n\t\n\t\n\t/**\n\t * Check if a `<table>` node is a DataTable table already or not.\n\t *\n\t *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n\t *      selector for the table to test. Note that if more than more than one\n\t *      table is passed on, only the first will be checked\n\t *  @returns {boolean} true the table given is a DataTable, or false otherwise\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n\t *      $('#example').dataTable();\n\t *    }\n\t */\n\tDataTable.isDataTable = DataTable.fnIsDataTable = function ( table )\n\t{\n\t\tvar t = $(table).get(0);\n\t\tvar is = false;\n\t\n\t\tif ( table instanceof DataTable.Api ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\t$.each( DataTable.settings, function (i, o) {\n\t\t\tvar head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\n\t\t\tvar foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\n\t\n\t\t\tif ( o.nTable === t || head === t || foot === t ) {\n\t\t\t\tis = true;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn is;\n\t};\n\t\n\t\n\t/**\n\t * Get all DataTable tables that have been initialised - optionally you can\n\t * select to get only currently visible tables.\n\t *\n\t *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n\t *    or visible tables only.\n\t *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n\t *    DataTables\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    $.each( $.fn.dataTable.tables(true), function () {\n\t *      $(table).DataTable().columns.adjust();\n\t *    } );\n\t */\n\tDataTable.tables = DataTable.fnTables = function ( visible )\n\t{\n\t\tvar api = false;\n\t\n\t\tif ( $.isPlainObject( visible ) ) {\n\t\t\tapi = visible.api;\n\t\t\tvisible = visible.visible;\n\t\t}\n\t\n\t\tvar a = $.map( DataTable.settings, function (o) {\n\t\t\tif ( !visible || (visible && $(o.nTable).is(':visible')) ) {\n\t\t\t\treturn o.nTable;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn api ?\n\t\t\tnew _Api( a ) :\n\t\t\ta;\n\t};\n\t\n\t\n\t/**\n\t * Convert from camel case parameters to Hungarian notation. This is made public\n\t * for the extensions to provide the same ability as DataTables core to accept\n\t * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n\t * parameters.\n\t *\n\t *  @param {object} src The model object which holds all parameters that can be\n\t *    mapped.\n\t *  @param {object} user The object to convert from camel case to Hungarian.\n\t *  @param {boolean} force When set to `true`, properties which already have a\n\t *    Hungarian value in the `user` object will be overwritten. Otherwise they\n\t *    won't be.\n\t */\n\tDataTable.camelToHungarian = _fnCamelToHungarian;\n\t\n\t\n\t\n\t/**\n\t *\n\t */\n\t_api_register( '$()', function ( selector, opts ) {\n\t\tvar\n\t\t\trows   = this.rows( opts ).nodes(), // Get all rows\n\t\t\tjqRows = $(rows);\n\t\n\t\treturn $( [].concat(\n\t\t\tjqRows.filter( selector ).toArray(),\n\t\t\tjqRows.find( selector ).toArray()\n\t\t) );\n\t} );\n\t\n\t\n\t// jQuery functions to operate on the tables\n\t$.each( [ 'on', 'one', 'off' ], function (i, key) {\n\t\t_api_register( key+'()', function ( /* event, handler */ ) {\n\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\n\t\t\t// Add the `dt` namespace automatically if it isn't already present\n\t\t\targs[0] = $.map( args[0].split( /\\s/ ), function ( e ) {\n\t\t\t\treturn ! e.match(/\\.dt\\b/) ?\n\t\t\t\t\te+'.dt' :\n\t\t\t\t\te;\n\t\t\t\t} ).join( ' ' );\n\t\n\t\t\tvar inst = $( this.tables().nodes() );\n\t\t\tinst[key].apply( inst, args );\n\t\t\treturn this;\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'clear()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnClearTable( settings );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'settings()', function () {\n\t\treturn new _Api( this.context, this.context );\n\t} );\n\t\n\t\n\t_api_register( 'init()', function () {\n\t\tvar ctx = this.context;\n\t\treturn ctx.length ? ctx[0].oInit : null;\n\t} );\n\t\n\t\n\t_api_register( 'data()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\treturn _pluck( settings.aoData, '_aData' );\n\t\t} ).flatten();\n\t} );\n\t\n\t\n\t_api_register( 'destroy()', function ( remove ) {\n\t\tremove = remove || false;\n\t\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tvar classes   = settings.oClasses;\n\t\t\tvar table     = settings.nTable;\n\t\t\tvar tbody     = settings.nTBody;\n\t\t\tvar thead     = settings.nTHead;\n\t\t\tvar tfoot     = settings.nTFoot;\n\t\t\tvar jqTable   = $(table);\n\t\t\tvar jqTbody   = $(tbody);\n\t\t\tvar jqWrapper = $(settings.nTableWrapper);\n\t\t\tvar rows      = $.map( settings.aoData, function (r) { return r.nTr; } );\n\t\t\tvar i, ien;\n\t\n\t\t\t// Flag to note that the table is currently being destroyed - no action\n\t\t\t// should be taken\n\t\t\tsettings.bDestroying = true;\n\t\n\t\t\t// Fire off the destroy callbacks for plug-ins etc\n\t\t\t_fnCallbackFire( settings, \"aoDestroyCallback\", \"destroy\", [settings] );\n\t\n\t\t\t// If not being removed from the document, make all columns visible\n\t\t\tif ( ! remove ) {\n\t\t\t\tnew _Api( settings ).columns().visible( true );\n\t\t\t}\n\t\n\t\t\t// Blitz all `DT` namespaced events (these are internal events, the\n\t\t\t// lowercase, `dt` events are user subscribed and they are responsible\n\t\t\t// for removing them\n\t\t\tjqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\n\t\t\t$(window).off('.DT-'+settings.sInstance);\n\t\n\t\t\t// When scrolling we had to break the table up - restore it\n\t\t\tif ( table != thead.parentNode ) {\n\t\t\t\tjqTable.children('thead').detach();\n\t\t\t\tjqTable.append( thead );\n\t\t\t}\n\t\n\t\t\tif ( tfoot && table != tfoot.parentNode ) {\n\t\t\t\tjqTable.children('tfoot').detach();\n\t\t\t\tjqTable.append( tfoot );\n\t\t\t}\n\t\n\t\t\tsettings.aaSorting = [];\n\t\t\tsettings.aaSortingFixed = [];\n\t\t\t_fnSortingClasses( settings );\n\t\n\t\t\t$( rows ).removeClass( settings.asStripeClasses.join(' ') );\n\t\n\t\t\t$('th, td', thead).removeClass( classes.sSortable+' '+\n\t\t\t\tclasses.sSortableAsc+' '+classes.sSortableDesc+' '+classes.sSortableNone\n\t\t\t);\n\t\n\t\t\t// Add the TR elements back into the table in their original order\n\t\t\tjqTbody.children().detach();\n\t\t\tjqTbody.append( rows );\n\t\n\t\t\tvar orig = settings.nTableWrapper.parentNode;\n\t\n\t\t\t// Remove the DataTables generated nodes, events and classes\n\t\t\tvar removedMethod = remove ? 'remove' : 'detach';\n\t\t\tjqTable[ removedMethod ]();\n\t\t\tjqWrapper[ removedMethod ]();\n\t\n\t\t\t// If we need to reattach the table to the document\n\t\t\tif ( ! remove && orig ) {\n\t\t\t\t// insertBefore acts like appendChild if !arg[1]\n\t\t\t\torig.insertBefore( table, settings.nTableReinsertBefore );\n\t\n\t\t\t\t// Restore the width of the original table - was read from the style property,\n\t\t\t\t// so we can restore directly to that\n\t\t\t\tjqTable\n\t\t\t\t\t.css( 'width', settings.sDestroyWidth )\n\t\t\t\t\t.removeClass( classes.sTable );\n\t\n\t\t\t\t// If the were originally stripe classes - then we add them back here.\n\t\t\t\t// Note this is not fool proof (for example if not all rows had stripe\n\t\t\t\t// classes - but it's a good effort without getting carried away\n\t\t\t\tien = settings.asDestroyStripes.length;\n\t\n\t\t\t\tif ( ien ) {\n\t\t\t\t\tjqTbody.children().each( function (i) {\n\t\t\t\t\t\t$(this).addClass( settings.asDestroyStripes[i % ien] );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/* Remove the settings object from the settings array */\n\t\t\tvar idx = $.inArray( settings, DataTable.settings );\n\t\t\tif ( idx !== -1 ) {\n\t\t\t\tDataTable.settings.splice( idx, 1 );\n\t\t\t}\n\t\t} );\n\t} );\n\t\n\t\n\t// Add the `every()` method for rows, columns and cells in a compact form\n\t$.each( [ 'column', 'row', 'cell' ], function ( i, type ) {\n\t\t_api_register( type+'s().every()', function ( fn ) {\n\t\t\tvar opts = this.selector.opts;\n\t\t\tvar api = this;\n\t\n\t\t\treturn this.iterator( type, function ( settings, arg1, arg2, arg3, arg4 ) {\n\t\t\t\t// Rows and columns:\n\t\t\t\t//  arg1 - index\n\t\t\t\t//  arg2 - table counter\n\t\t\t\t//  arg3 - loop counter\n\t\t\t\t//  arg4 - undefined\n\t\t\t\t// Cells:\n\t\t\t\t//  arg1 - row index\n\t\t\t\t//  arg2 - column index\n\t\t\t\t//  arg3 - table counter\n\t\t\t\t//  arg4 - loop counter\n\t\t\t\tfn.call(\n\t\t\t\t\tapi[ type ](\n\t\t\t\t\t\targ1,\n\t\t\t\t\t\ttype==='cell' ? arg2 : opts,\n\t\t\t\t\t\ttype==='cell' ? opts : undefined\n\t\t\t\t\t),\n\t\t\t\t\targ1, arg2, arg3, arg4\n\t\t\t\t);\n\t\t\t} );\n\t\t} );\n\t} );\n\t\n\t\n\t// i18n method for extensions to be able to use the language object from the\n\t// DataTable\n\t_api_register( 'i18n()', function ( token, def, plural ) {\n\t\tvar ctx = this.context[0];\n\t\tvar resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );\n\t\n\t\tif ( resolved === undefined ) {\n\t\t\tresolved = def;\n\t\t}\n\t\n\t\tif ( plural !== undefined && $.isPlainObject( resolved ) ) {\n\t\t\tresolved = resolved[ plural ] !== undefined ?\n\t\t\t\tresolved[ plural ] :\n\t\t\t\tresolved._;\n\t\t}\n\t\n\t\treturn resolved.replace( '%d', plural ); // nb: plural might be undefined,\n\t} );\t\n\t/**\n\t * Version string for plug-ins to check compatibility. Allowed format is\n\t * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n\t * only for non-release builds. See http://semver.org/ for more information.\n\t *  @member\n\t *  @type string\n\t *  @default Version number\n\t */\n\tDataTable.version = \"1.13.4\";\n\t\n\t/**\n\t * Private data store, containing all of the settings objects that are\n\t * created for the tables on a given page.\n\t *\n\t * Note that the `DataTable.settings` object is aliased to\n\t * `jQuery.fn.dataTableExt` through which it may be accessed and\n\t * manipulated, or `jQuery.fn.dataTable.settings`.\n\t *  @member\n\t *  @type array\n\t *  @default []\n\t *  @private\n\t */\n\tDataTable.settings = [];\n\t\n\t/**\n\t * Object models container, for the various models that DataTables has\n\t * available to it. These models define the objects that are used to hold\n\t * the active state and configuration of the table.\n\t *  @namespace\n\t */\n\tDataTable.models = {};\n\t\n\t\n\t\n\t/**\n\t * Template object for the way in which DataTables holds information about\n\t * search information for the global filter and individual column filters.\n\t *  @namespace\n\t */\n\tDataTable.models.oSearch = {\n\t\t/**\n\t\t * Flag to indicate if the filtering should be case insensitive or not\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bCaseInsensitive\": true,\n\t\n\t\t/**\n\t\t * Applied search term\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t */\n\t\t\"sSearch\": \"\",\n\t\n\t\t/**\n\t\t * Flag to indicate if the search term should be interpreted as a\n\t\t * regular expression (true) or not (false) and therefore and special\n\t\t * regex characters escaped.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bRegex\": false,\n\t\n\t\t/**\n\t\t * Flag to indicate if DataTables is to use its smart filtering or not.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bSmart\": true,\n\t\n\t\t/**\n\t\t * Flag to indicate if DataTables should only trigger a search when\n\t\t * the return key is pressed.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"return\": false\n\t};\n\t\n\t\n\t\n\t\n\t/**\n\t * Template object for the way in which DataTables holds information about\n\t * each individual row. This is the object format used for the settings\n\t * aoData array.\n\t *  @namespace\n\t */\n\tDataTable.models.oRow = {\n\t\t/**\n\t\t * TR element for the row\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTr\": null,\n\t\n\t\t/**\n\t\t * Array of TD elements for each row. This is null until the row has been\n\t\t * created.\n\t\t *  @type array nodes\n\t\t *  @default []\n\t\t */\n\t\t\"anCells\": null,\n\t\n\t\t/**\n\t\t * Data object from the original data source for the row. This is either\n\t\t * an array if using the traditional form of DataTables, or an object if\n\t\t * using mData options. The exact type will depend on the passed in\n\t\t * data from the data source, or will be an array if using DOM a data\n\t\t * source.\n\t\t *  @type array|object\n\t\t *  @default []\n\t\t */\n\t\t\"_aData\": [],\n\t\n\t\t/**\n\t\t * Sorting data cache - this array is ostensibly the same length as the\n\t\t * number of columns (although each index is generated only as it is\n\t\t * needed), and holds the data that is used for sorting each column in the\n\t\t * row. We do this cache generation at the start of the sort in order that\n\t\t * the formatting of the sort data need be done only once for each cell\n\t\t * per sort. This array should not be read from or written to by anything\n\t\t * other than the master sorting methods.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_aSortData\": null,\n\t\n\t\t/**\n\t\t * Per cell filtering data cache. As per the sort data cache, used to\n\t\t * increase the performance of the filtering in DataTables\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_aFilterData\": null,\n\t\n\t\t/**\n\t\t * Filtering data cache. This is the same as the cell filtering cache, but\n\t\t * in this case a string rather than an array. This is easily computed with\n\t\t * a join on `_aFilterData`, but is provided as a cache so the join isn't\n\t\t * needed on every search (memory traded for performance)\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_sFilterRow\": null,\n\t\n\t\t/**\n\t\t * Cache of the class name that DataTables has applied to the row, so we\n\t\t * can quickly look at this variable rather than needing to do a DOM check\n\t\t * on className for the nTr property.\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *  @private\n\t\t */\n\t\t\"_sRowStripe\": \"\",\n\t\n\t\t/**\n\t\t * Denote if the original data source was from the DOM, or the data source\n\t\t * object. This is used for invalidating data, so DataTables can\n\t\t * automatically read data from the original source, unless uninstructed\n\t\t * otherwise.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"src\": null,\n\t\n\t\t/**\n\t\t * Index in the aoData array. This saves an indexOf lookup when we have the\n\t\t * object, but want to know the index\n\t\t *  @type integer\n\t\t *  @default -1\n\t\t *  @private\n\t\t */\n\t\t\"idx\": -1\n\t};\n\t\n\t\n\t/**\n\t * Template object for the column information object in DataTables. This object\n\t * is held in the settings aoColumns array and contains all the information that\n\t * DataTables needs about each individual column.\n\t *\n\t * Note that this object is related to {@link DataTable.defaults.column}\n\t * but this one is the internal data store for DataTables's cache of columns.\n\t * It should NOT be manipulated outside of DataTables. Any configuration should\n\t * be done through the initialisation options.\n\t *  @namespace\n\t */\n\tDataTable.models.oColumn = {\n\t\t/**\n\t\t * Column index. This could be worked out on-the-fly with $.inArray, but it\n\t\t * is faster to just hold it as a variable\n\t\t *  @type integer\n\t\t *  @default null\n\t\t */\n\t\t\"idx\": null,\n\t\n\t\t/**\n\t\t * A list of the columns that sorting should occur on when this column\n\t\t * is sorted. That this property is an array allows multi-column sorting\n\t\t * to be defined for a column (for example first name / last name columns\n\t\t * would benefit from this). The values are integers pointing to the\n\t\t * columns to be sorted on (typically it will be a single integer pointing\n\t\t * at itself, but that doesn't need to be the case).\n\t\t *  @type array\n\t\t */\n\t\t\"aDataSort\": null,\n\t\n\t\t/**\n\t\t * Define the sorting directions that are applied to the column, in sequence\n\t\t * as the column is repeatedly sorted upon - i.e. the first value is used\n\t\t * as the sorting direction when the column if first sorted (clicked on).\n\t\t * Sort it again (click again) and it will move on to the next index.\n\t\t * Repeat until loop.\n\t\t *  @type array\n\t\t */\n\t\t\"asSorting\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if the column is searchable, and thus should be included\n\t\t * in the filtering or not.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSearchable\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if the column is sortable or not.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortable\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if the column is currently visible in the table or not\n\t\t *  @type boolean\n\t\t */\n\t\t\"bVisible\": null,\n\t\n\t\t/**\n\t\t * Store for manual type assignment using the `column.type` option. This\n\t\t * is held in store so we can manipulate the column's `sType` property.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_sManualType\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if HTML5 data attributes should be used as the data\n\t\t * source for filtering or sorting. True is either are.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @private\n\t\t */\n\t\t\"_bAttrSrc\": false,\n\t\n\t\t/**\n\t\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t\t * allowing you to modify the DOM element (add background colour for example) when the\n\t\t * element is available.\n\t\t *  @type function\n\t\t *  @param {element} nTd The TD node that has been created\n\t\t *  @param {*} sData The Data for the cell\n\t\t *  @param {array|object} oData The data for the whole row\n\t\t *  @param {int} iRow The row index for the aoData data store\n\t\t *  @default null\n\t\t */\n\t\t\"fnCreatedCell\": null,\n\t\n\t\t/**\n\t\t * Function to get data from a cell in a column. You should <b>never</b>\n\t\t * access data directly through _aData internally in DataTables - always use\n\t\t * the method attached to this property. It allows mData to function as\n\t\t * required. This function is automatically assigned by the column\n\t\t * initialisation method\n\t\t *  @type function\n\t\t *  @param {array|object} oData The data array/object for the array\n\t\t *    (i.e. aoData[]._aData)\n\t\t *  @param {string} sSpecific The specific data type you want to get -\n\t\t *    'display', 'type' 'filter' 'sort'\n\t\t *  @returns {*} The data for the cell from the given row's data\n\t\t *  @default null\n\t\t */\n\t\t\"fnGetData\": null,\n\t\n\t\t/**\n\t\t * Function to set data for a cell in the column. You should <b>never</b>\n\t\t * set the data directly to _aData internally in DataTables - always use\n\t\t * this method. It allows mData to function as required. This function\n\t\t * is automatically assigned by the column initialisation method\n\t\t *  @type function\n\t\t *  @param {array|object} oData The data array/object for the array\n\t\t *    (i.e. aoData[]._aData)\n\t\t *  @param {*} sValue Value to set\n\t\t *  @default null\n\t\t */\n\t\t\"fnSetData\": null,\n\t\n\t\t/**\n\t\t * Property to read the value for the cells in the column from the data\n\t\t * source array / object. If null, then the default content is used, if a\n\t\t * function is given then the return from the function is used.\n\t\t *  @type function|int|string|null\n\t\t *  @default null\n\t\t */\n\t\t\"mData\": null,\n\t\n\t\t/**\n\t\t * Partner property to mData which is used (only when defined) to get\n\t\t * the data - i.e. it is basically the same as mData, but without the\n\t\t * 'set' option, and also the data fed to it is the result from mData.\n\t\t * This is the rendering method to match the data method of mData.\n\t\t *  @type function|int|string|null\n\t\t *  @default null\n\t\t */\n\t\t\"mRender\": null,\n\t\n\t\t/**\n\t\t * Unique header TH/TD element for this column - this is what the sorting\n\t\t * listener is attached to (if sorting is enabled.)\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTh\": null,\n\t\n\t\t/**\n\t\t * Unique footer TH/TD element for this column (if there is one). Not used\n\t\t * in DataTables as such, but can be used for plug-ins to reference the\n\t\t * footer for each column.\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTf\": null,\n\t\n\t\t/**\n\t\t * The class to apply to all TD elements in the table's TBODY for the column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sClass\": null,\n\t\n\t\t/**\n\t\t * When DataTables calculates the column widths to assign to each column,\n\t\t * it finds the longest string in each column and then constructs a\n\t\t * temporary table and reads the widths from that. The problem with this\n\t\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t\t * string - thus the calculation can go wrong (doing it properly and putting\n\t\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t\t * a \"work around\" we provide this option. It will append its value to the\n\t\t * text that is found to be the longest string for the column - i.e. padding.\n\t\t *  @type string\n\t\t */\n\t\t\"sContentPadding\": null,\n\t\n\t\t/**\n\t\t * Allows a default value to be given for a column's data, and will be used\n\t\t * whenever a null data source is encountered (this can be because mData\n\t\t * is set to null, or because the data source itself is null).\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sDefaultContent\": null,\n\t\n\t\t/**\n\t\t * Name for the column, allowing reference to the column by name as well as\n\t\t * by index (needs a lookup to work by name).\n\t\t *  @type string\n\t\t */\n\t\t\"sName\": null,\n\t\n\t\t/**\n\t\t * Custom sorting data type - defines which of the available plug-ins in\n\t\t * afnSortData the custom sorting will use - if any is defined.\n\t\t *  @type string\n\t\t *  @default std\n\t\t */\n\t\t\"sSortDataType\": 'std',\n\t\n\t\t/**\n\t\t * Class to be applied to the header element when sorting on this column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sSortingClass\": null,\n\t\n\t\t/**\n\t\t * Class to be applied to the header element when sorting on this column -\n\t\t * when jQuery UI theming is used.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sSortingClassJUI\": null,\n\t\n\t\t/**\n\t\t * Title of the column - what is seen in the TH element (nTh).\n\t\t *  @type string\n\t\t */\n\t\t\"sTitle\": null,\n\t\n\t\t/**\n\t\t * Column sorting and filtering type\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sType\": null,\n\t\n\t\t/**\n\t\t * Width of the column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sWidth\": null,\n\t\n\t\t/**\n\t\t * Width of the column when it was first \"encountered\"\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sWidthOrig\": null\n\t};\n\t\n\t\n\t/*\n\t * Developer note: The properties of the object below are given in Hungarian\n\t * notation, that was used as the interface for DataTables prior to v1.10, however\n\t * from v1.10 onwards the primary interface is camel case. In order to avoid\n\t * breaking backwards compatibility utterly with this change, the Hungarian\n\t * version is still, internally the primary interface, but is is not documented\n\t * - hence the @name tags in each doc comment. This allows a Javascript function\n\t * to create a map from Hungarian notation to camel case (going the other direction\n\t * would require each property to be listed, which would add around 3K to the size\n\t * of DataTables, while this method is about a 0.5K hit).\n\t *\n\t * Ultimately this does pave the way for Hungarian notation to be dropped\n\t * completely, but that is a massive amount of work and will break current\n\t * installs (therefore is on-hold until v2).\n\t */\n\t\n\t/**\n\t * Initialisation options that can be given to DataTables at initialisation\n\t * time.\n\t *  @namespace\n\t */\n\tDataTable.defaults = {\n\t\t/**\n\t\t * An array of data to use for the table, passed in at initialisation which\n\t\t * will be used in preference to any data which is already in the DOM. This is\n\t\t * particularly useful for constructing tables purely in Javascript, for\n\t\t * example with a custom Ajax call.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.data\n\t\t *\n\t\t *  @example\n\t\t *    // Using a 2D array data source\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"data\": [\n\t\t *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],\n\t\t *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],\n\t\t *        ],\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"Engine\" },\n\t\t *          { \"title\": \"Browser\" },\n\t\t *          { \"title\": \"Platform\" },\n\t\t *          { \"title\": \"Version\" },\n\t\t *          { \"title\": \"Grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using an array of objects as a data source (`data`)\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"data\": [\n\t\t *          {\n\t\t *            \"engine\":   \"Trident\",\n\t\t *            \"browser\":  \"Internet Explorer 4.0\",\n\t\t *            \"platform\": \"Win 95+\",\n\t\t *            \"version\":  4,\n\t\t *            \"grade\":    \"X\"\n\t\t *          },\n\t\t *          {\n\t\t *            \"engine\":   \"Trident\",\n\t\t *            \"browser\":  \"Internet Explorer 5.0\",\n\t\t *            \"platform\": \"Win 95+\",\n\t\t *            \"version\":  5,\n\t\t *            \"grade\":    \"C\"\n\t\t *          }\n\t\t *        ],\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"Engine\",   \"data\": \"engine\" },\n\t\t *          { \"title\": \"Browser\",  \"data\": \"browser\" },\n\t\t *          { \"title\": \"Platform\", \"data\": \"platform\" },\n\t\t *          { \"title\": \"Version\",  \"data\": \"version\" },\n\t\t *          { \"title\": \"Grade\",    \"data\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aaData\": null,\n\t\n\t\n\t\t/**\n\t\t * If ordering is enabled, then DataTables will perform a first pass sort on\n\t\t * initialisation. You can define which column(s) the sort is performed\n\t\t * upon, and the sorting direction, with this variable. The `sorting` array\n\t\t * should contain an array for each column to be sorted initially containing\n\t\t * the column's index and a direction string ('asc' or 'desc').\n\t\t *  @type array\n\t\t *  @default [[0,'asc']]\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.order\n\t\t *\n\t\t *  @example\n\t\t *    // Sort by 3rd column first, and then 4th column\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"order\": [[2,'asc'], [3,'desc']]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *    // No initial sorting\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"order\": []\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aaSorting\": [[0,'asc']],\n\t\n\t\n\t\t/**\n\t\t * This parameter is basically identical to the `sorting` parameter, but\n\t\t * cannot be overridden by user interaction with the table. What this means\n\t\t * is that you could have a column (visible or hidden) which the sorting\n\t\t * will always be forced on first - any sorting after that (from the user)\n\t\t * will then be performed as required. This can be useful for grouping rows\n\t\t * together.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.orderFixed\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderFixed\": [[0,'asc']]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"aaSortingFixed\": [],\n\t\n\t\n\t\t/**\n\t\t * DataTables can be instructed to load data to display in the table from a\n\t\t * Ajax source. This option defines how that Ajax call is made and where to.\n\t\t *\n\t\t * The `ajax` property has three different modes of operation, depending on\n\t\t * how it is defined. These are:\n\t\t *\n\t\t * * `string` - Set the URL from where the data should be loaded from.\n\t\t * * `object` - Define properties for `jQuery.ajax`.\n\t\t * * `function` - Custom data get function\n\t\t *\n\t\t * `string`\n\t\t * --------\n\t\t *\n\t\t * As a string, the `ajax` property simply defines the URL from which\n\t\t * DataTables will load data.\n\t\t *\n\t\t * `object`\n\t\t * --------\n\t\t *\n\t\t * As an object, the parameters in the object are passed to\n\t\t * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control\n\t\t * of the Ajax request. DataTables has a number of default parameters which\n\t\t * you can override using this option. Please refer to the jQuery\n\t\t * documentation for a full description of the options available, although\n\t\t * the following parameters provide additional options in DataTables or\n\t\t * require special consideration:\n\t\t *\n\t\t * * `data` - As with jQuery, `data` can be provided as an object, but it\n\t\t *   can also be used as a function to manipulate the data DataTables sends\n\t\t *   to the server. The function takes a single parameter, an object of\n\t\t *   parameters with the values that DataTables has readied for sending. An\n\t\t *   object may be returned which will be merged into the DataTables\n\t\t *   defaults, or you can add the items to the object that was passed in and\n\t\t *   not return anything from the function. This supersedes `fnServerParams`\n\t\t *   from DataTables 1.9-.\n\t\t *\n\t\t * * `dataSrc` - By default DataTables will look for the property `data` (or\n\t\t *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n\t\t *   from an Ajax source or for server-side processing - this parameter\n\t\t *   allows that property to be changed. You can use Javascript dotted\n\t\t *   object notation to get a data source for multiple levels of nesting, or\n\t\t *   it my be used as a function. As a function it takes a single parameter,\n\t\t *   the JSON returned from the server, which can be manipulated as\n\t\t *   required, with the returned value being that used by DataTables as the\n\t\t *   data source for the table. This supersedes `sAjaxDataProp` from\n\t\t *   DataTables 1.9-.\n\t\t *\n\t\t * * `success` - Should not be overridden it is used internally in\n\t\t *   DataTables. To manipulate / transform the data returned by the server\n\t\t *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n\t\t *\n\t\t * `function`\n\t\t * ----------\n\t\t *\n\t\t * As a function, making the Ajax call is left up to yourself allowing\n\t\t * complete control of the Ajax request. Indeed, if desired, a method other\n\t\t * than Ajax could be used to obtain the required data, such as Web storage\n\t\t * or an AIR database.\n\t\t *\n\t\t * The function is given four parameters and no return is required. The\n\t\t * parameters are:\n\t\t *\n\t\t * 1. _object_ - Data to send to the server\n\t\t * 2. _function_ - Callback function that must be executed when the required\n\t\t *    data has been obtained. That data should be passed into the callback\n\t\t *    as the only parameter\n\t\t * 3. _object_ - DataTables settings object for the table\n\t\t *\n\t\t * Note that this supersedes `fnServerData` from DataTables 1.9-.\n\t\t *\n\t\t *  @type string|object|function\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.ajax\n\t\t *  @since 1.10.0\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax.\n\t\t *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": \"data.json\"\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax, using `dataSrc` to change\n\t\t *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": \"tableData\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax, using `dataSrc` to read data\n\t\t *   // from a plain array rather than an array in an object\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": \"\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Manipulate the data returned from the server - add a link to data\n\t\t *   // (note this can, should, be done using `render` for the column - this\n\t\t *   // is just a simple example of how the data can be manipulated).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": function ( json ) {\n\t\t *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {\n\t\t *           json[i][0] = '<a href=\"/message/'+json[i][0]+'>View message</a>';\n\t\t *         }\n\t\t *         return json;\n\t\t *       }\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Add data to the request\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"data\": function ( d ) {\n\t\t *         return {\n\t\t *           \"extra_search\": $('#extra').val()\n\t\t *         };\n\t\t *       }\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Send request as POST\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"type\": \"POST\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get the data from localStorage (could interface with a form for\n\t\t *   // adding, editing and removing rows).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": function (data, callback, settings) {\n\t\t *       callback(\n\t\t *         JSON.parse( localStorage.getItem('dataTablesData') )\n\t\t *       );\n\t\t *     }\n\t\t *   } );\n\t\t */\n\t\t\"ajax\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter allows you to readily specify the entries in the length drop\n\t\t * down menu that DataTables shows when pagination is enabled. It can be\n\t\t * either a 1D array of options which will be used for both the displayed\n\t\t * option and the value, or a 2D array which will use the array in the first\n\t\t * position as the value, and the array in the second position as the\n\t\t * displayed options (useful for language strings such as 'All').\n\t\t *\n\t\t * Note that the `pageLength` property will be automatically set to the\n\t\t * first value given in this array, unless `pageLength` is also provided.\n\t\t *  @type array\n\t\t *  @default [ 10, 25, 50, 100 ]\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.lengthMenu\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"lengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aLengthMenu\": [ 10, 25, 50, 100 ],\n\t\n\t\n\t\t/**\n\t\t * The `columns` option in the initialisation parameter allows you to define\n\t\t * details about the way individual columns behave. For a full list of\n\t\t * column options that can be set, please see\n\t\t * {@link DataTable.defaults.column}. Note that if you use `columns` to\n\t\t * define your columns, you must have an entry in the array for every single\n\t\t * column that you have in your table (these can be null if you don't which\n\t\t * to specify any options).\n\t\t *  @member\n\t\t *\n\t\t *  @name DataTable.defaults.column\n\t\t */\n\t\t\"aoColumns\": null,\n\t\n\t\t/**\n\t\t * Very similar to `columns`, `columnDefs` allows you to target a specific\n\t\t * column, multiple columns, or all columns, using the `targets` property of\n\t\t * each object in the array. This allows great flexibility when creating\n\t\t * tables, as the `columnDefs` arrays can be of any length, targeting the\n\t\t * columns you specifically want. `columnDefs` may use any of the column\n\t\t * options available: {@link DataTable.defaults.column}, but it _must_\n\t\t * have `targets` defined in each object in the array. Values in the `targets`\n\t\t * array may be:\n\t\t *   <ul>\n\t\t *     <li>a string - class name will be matched on the TH for the column</li>\n\t\t *     <li>0 or a positive integer - column index counting from the left</li>\n\t\t *     <li>a negative integer - column index counting from the right</li>\n\t\t *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n\t\t *   </ul>\n\t\t *  @member\n\t\t *\n\t\t *  @name DataTable.defaults.columnDefs\n\t\t */\n\t\t\"aoColumnDefs\": null,\n\t\n\t\n\t\t/**\n\t\t * Basically the same as `search`, this parameter defines the individual column\n\t\t * filtering state at initialisation time. The array must be of the same size\n\t\t * as the number of columns, and each element be an object with the parameters\n\t\t * `search` and `escapeRegex` (the latter is optional). 'null' is also\n\t\t * accepted and the default will be used.\n\t\t *  @type array\n\t\t *  @default []\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.searchCols\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searchCols\": [\n\t\t *          null,\n\t\t *          { \"search\": \"My filter\" },\n\t\t *          null,\n\t\t *          { \"search\": \"^[0-9]\", \"escapeRegex\": false }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"aoSearchCols\": [],\n\t\n\t\n\t\t/**\n\t\t * An array of CSS classes that should be applied to displayed rows. This\n\t\t * array may be of any length, and DataTables will apply each class\n\t\t * sequentially, looping when required.\n\t\t *  @type array\n\t\t *  @default null <i>Will take the values determined by the `oClasses.stripe*`\n\t\t *    options</i>\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.stripeClasses\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stripeClasses\": [ 'strip1', 'strip2', 'strip3' ]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"asStripeClasses\": null,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable automatic column width calculation. This can be disabled\n\t\t * as an optimisation (it takes some time to calculate the widths) if the\n\t\t * tables widths are passed in using `columns`.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.autoWidth\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"autoWidth\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bAutoWidth\": true,\n\t\n\t\n\t\t/**\n\t\t * Deferred rendering can provide DataTables with a huge speed boost when you\n\t\t * are using an Ajax or JS data source for the table. This option, when set to\n\t\t * true, will cause DataTables to defer the creation of the table elements for\n\t\t * each row until they are needed for a draw - saving a significant amount of\n\t\t * time.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.deferRender\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajax\": \"sources/arrays.txt\",\n\t\t *        \"deferRender\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bDeferRender\": false,\n\t\n\t\n\t\t/**\n\t\t * Replace a DataTable which matches the given selector and replace it with\n\t\t * one which has the properties of the new initialisation object passed. If no\n\t\t * table matches the selector, then the new DataTable will be constructed as\n\t\t * per normal.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.destroy\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"srollY\": \"200px\",\n\t\t *        \"paginate\": false\n\t\t *      } );\n\t\t *\n\t\t *      // Some time later....\n\t\t *      $('#example').dataTable( {\n\t\t *        \"filter\": false,\n\t\t *        \"destroy\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bDestroy\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n\t\t * that it allows the end user to input multiple words (space separated) and\n\t\t * will match a row containing those words, even if not in the order that was\n\t\t * specified (this allow matching across multiple columns). Note that if you\n\t\t * wish to use filtering in DataTables this must remain 'true' - to remove the\n\t\t * default filtering input box and retain filtering abilities, please use\n\t\t * {@link DataTable.defaults.dom}.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.searching\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searching\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bFilter\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the table information display. This shows information\n\t\t * about the data that is currently visible on the page, including information\n\t\t * about filtered data if that action is being performed.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.info\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"info\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bInfo\": true,\n\t\n\t\n\t\t/**\n\t\t * Allows the end user to select the size of a formatted page from a select\n\t\t * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.lengthChange\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"lengthChange\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bLengthChange\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable pagination.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.paging\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"paging\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bPaginate\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the display of a 'processing' indicator when the table is\n\t\t * being processed (e.g. a sort). This is particularly useful for tables with\n\t\t * large amounts of data where it can take a noticeable amount of time to sort\n\t\t * the entries.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.processing\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"processing\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bProcessing\": false,\n\t\n\t\n\t\t/**\n\t\t * Retrieve the DataTables object for the given selector. Note that if the\n\t\t * table has already been initialised, this parameter will cause DataTables\n\t\t * to simply return the object that has already been set up - it will not take\n\t\t * account of any changes you might have made to the initialisation object\n\t\t * passed to DataTables (setting this parameter to true is an acknowledgement\n\t\t * that you understand this). `destroy` can be used to reinitialise a table if\n\t\t * you need.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.retrieve\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      initTable();\n\t\t *      tableActions();\n\t\t *    } );\n\t\t *\n\t\t *    function initTable ()\n\t\t *    {\n\t\t *      return $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200px\",\n\t\t *        \"paginate\": false,\n\t\t *        \"retrieve\": true\n\t\t *      } );\n\t\t *    }\n\t\t *\n\t\t *    function tableActions ()\n\t\t *    {\n\t\t *      var table = initTable();\n\t\t *      // perform API operations with oTable\n\t\t *    }\n\t\t */\n\t\t\"bRetrieve\": false,\n\t\n\t\n\t\t/**\n\t\t * When vertical (y) scrolling is enabled, DataTables will force the height of\n\t\t * the table's viewport to the given height at all times (useful for layout).\n\t\t * However, this can look odd when filtering data down to a small data set,\n\t\t * and the footer is left \"floating\" further down. This parameter (when\n\t\t * enabled) will cause DataTables to collapse the table's viewport down when\n\t\t * the result set will fit within the given Y height.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.scrollCollapse\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200\",\n\t\t *        \"scrollCollapse\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bScrollCollapse\": false,\n\t\n\t\n\t\t/**\n\t\t * Configure DataTables to use server-side processing. Note that the\n\t\t * `ajax` parameter must also be given in order to give DataTables a\n\t\t * source to obtain the required data for each draw.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverSide\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"xhr.php\"\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bServerSide\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable sorting of columns. Sorting of individual columns can be\n\t\t * disabled by the `sortable` option for each column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.ordering\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ordering\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSort\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or display DataTables' ability to sort multiple columns at the\n\t\t * same time (activated by shift-click by the user).\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.orderMulti\n\t\t *\n\t\t *  @example\n\t\t *    // Disable multiple column sorting ability\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderMulti\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortMulti\": true,\n\t\n\t\n\t\t/**\n\t\t * Allows control over whether DataTables should use the top (true) unique\n\t\t * cell that is found for a single column, or the bottom (false - default).\n\t\t * This is useful when using complex headers.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.orderCellsTop\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderCellsTop\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortCellsTop\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n\t\t * `sorting\\_3` to the columns which are currently being sorted on. This is\n\t\t * presented as a feature switch as it can increase processing time (while\n\t\t * classes are removed and added) so for large data sets you might want to\n\t\t * turn this off.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.orderClasses\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderClasses\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortClasses\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n\t\t * used to save table display information such as pagination information,\n\t\t * display length, filtering and sorting. As such when the end user reloads\n\t\t * the page the display display will match what thy had previously set up.\n\t\t *\n\t\t * Due to the use of `localStorage` the default state saving is not supported\n\t\t * in IE6 or 7. If state saving is required in those browsers, use\n\t\t * `stateSaveCallback` to provide a storage solution such as cookies.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.stateSave\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bStateSave\": false,\n\t\n\t\n\t\t/**\n\t\t * This function is called when a TR element is created (and all TD child\n\t\t * elements have been inserted), or registered if using a DOM source, allowing\n\t\t * manipulation of the TR element (adding classes etc).\n\t\t *  @type function\n\t\t *  @param {node} row \"TR\" element for the current row\n\t\t *  @param {array} data Raw data array for this row\n\t\t *  @param {int} dataIndex The index of this row in the internal aoData array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.createdRow\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"createdRow\": function( row, data, dataIndex ) {\n\t\t *          // Bold the grade for all 'A' grade browsers\n\t\t *          if ( data[4] == \"A\" )\n\t\t *          {\n\t\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnCreatedRow\": null,\n\t\n\t\n\t\t/**\n\t\t * This function is called on every 'draw' event, and allows you to\n\t\t * dynamically modify any aspect you want about the created DOM.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.drawCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"drawCallback\": function( settings ) {\n\t\t *          alert( 'DataTables has redrawn the table' );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnDrawCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * Identical to fnHeaderCallback() but for the table footer this function\n\t\t * allows you to modify the table footer on every 'draw' event.\n\t\t *  @type function\n\t\t *  @param {node} foot \"TR\" element for the footer\n\t\t *  @param {array} data Full table data (as derived from the original HTML)\n\t\t *  @param {int} start Index for the current display starting point in the\n\t\t *    display array\n\t\t *  @param {int} end Index for the current display ending point in the\n\t\t *    display array\n\t\t *  @param {array int} display Index array to translate the visual position\n\t\t *    to the full data array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.footerCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"footerCallback\": function( tfoot, data, start, end, display ) {\n\t\t *          tfoot.getElementsByTagName('th')[0].innerHTML = \"Starting index is \"+start;\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnFooterCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * When rendering large numbers in the information element for the table\n\t\t * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n\t\t * to have a comma separator for the 'thousands' units (e.g. 1 million is\n\t\t * rendered as \"1,000,000\") to help readability for the end user. This\n\t\t * function will override the default method DataTables uses.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {int} toFormat number to be formatted\n\t\t *  @returns {string} formatted string for DataTables to show the number\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.formatNumber\n\t\t *\n\t\t *  @example\n\t\t *    // Format a number using a single quote for the separator (note that\n\t\t *    // this can also be done with the language.thousands option)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"formatNumber\": function ( toFormat ) {\n\t\t *          return toFormat.toString().replace(\n\t\t *            /\\B(?=(\\d{3})+(?!\\d))/g, \"'\"\n\t\t *          );\n\t\t *        };\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnFormatNumber\": function ( toFormat ) {\n\t\t\treturn toFormat.toString().replace(\n\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g,\n\t\t\t\tthis.oLanguage.sThousands\n\t\t\t);\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * This function is called on every 'draw' event, and allows you to\n\t\t * dynamically modify the header row. This can be used to calculate and\n\t\t * display useful information about the table.\n\t\t *  @type function\n\t\t *  @param {node} head \"TR\" element for the header\n\t\t *  @param {array} data Full table data (as derived from the original HTML)\n\t\t *  @param {int} start Index for the current display starting point in the\n\t\t *    display array\n\t\t *  @param {int} end Index for the current display ending point in the\n\t\t *    display array\n\t\t *  @param {array int} display Index array to translate the visual position\n\t\t *    to the full data array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.headerCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"fheaderCallback\": function( head, data, start, end, display ) {\n\t\t *          head.getElementsByTagName('th')[0].innerHTML = \"Displaying \"+(end-start)+\" records\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnHeaderCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * The information element can be used to convey information about the current\n\t\t * state of the table. Although the internationalisation options presented by\n\t\t * DataTables are quite capable of dealing with most customisations, there may\n\t\t * be times where you wish to customise the string further. This callback\n\t\t * allows you to do exactly that.\n\t\t *  @type function\n\t\t *  @param {object} oSettings DataTables settings object\n\t\t *  @param {int} start Starting position in data for the draw\n\t\t *  @param {int} end End position in data for the draw\n\t\t *  @param {int} max Total number of rows in the table (regardless of\n\t\t *    filtering)\n\t\t *  @param {int} total Total number of rows in the data set, after filtering\n\t\t *  @param {string} pre The string that DataTables has formatted using it's\n\t\t *    own rules\n\t\t *  @returns {string} The string to be displayed in the information element.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.infoCallback\n\t\t *\n\t\t *  @example\n\t\t *    $('#example').dataTable( {\n\t\t *      \"infoCallback\": function( settings, start, end, max, total, pre ) {\n\t\t *        return start +\" to \"+ end;\n\t\t *      }\n\t\t *    } );\n\t\t */\n\t\t\"fnInfoCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * Called when the table has been initialised. Normally DataTables will\n\t\t * initialise sequentially and there will be no need for this function,\n\t\t * however, this does not hold true when using external language information\n\t\t * since that is obtained using an async XHR call.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} json The JSON object request from the server - only\n\t\t *    present if client-side Ajax sourced data is used\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.initComplete\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"initComplete\": function(settings, json) {\n\t\t *          alert( 'DataTables has finished its initialisation.' );\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnInitComplete\": null,\n\t\n\t\n\t\t/**\n\t\t * Called at the very start of each table draw and can be used to cancel the\n\t\t * draw by returning false, any other return (including undefined) results in\n\t\t * the full draw occurring).\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @returns {boolean} False will cancel the draw, anything else (including no\n\t\t *    return) will allow it to complete.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.preDrawCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"preDrawCallback\": function( settings ) {\n\t\t *          if ( $('#test').val() == 1 ) {\n\t\t *            return false;\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnPreDrawCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * This function allows you to 'post process' each row after it have been\n\t\t * generated for each table draw, but before it is rendered on screen. This\n\t\t * function might be used for setting the row class name etc.\n\t\t *  @type function\n\t\t *  @param {node} row \"TR\" element for the current row\n\t\t *  @param {array} data Raw data array for this row\n\t\t *  @param {int} displayIndex The display index for the current table draw\n\t\t *  @param {int} displayIndexFull The index of the data in the full list of\n\t\t *    rows (after filtering)\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.rowCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"rowCallback\": function( row, data, displayIndex, displayIndexFull ) {\n\t\t *          // Bold the grade for all 'A' grade browsers\n\t\t *          if ( data[4] == \"A\" ) {\n\t\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnRowCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * This parameter allows you to override the default function which obtains\n\t\t * the data from the server so something more suitable for your application.\n\t\t * For example you could use POST data, or pull information from a Gears or\n\t\t * AIR database.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {string} source HTTP source to obtain the data from (`ajax`)\n\t\t *  @param {array} data A key/value pair object containing the data to send\n\t\t *    to the server\n\t\t *  @param {function} callback to be called on completion of the data get\n\t\t *    process that will draw the data on the page.\n\t\t *  @param {object} settings DataTables settings object\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverData\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"fnServerData\": null,\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t *  It is often useful to send extra data to the server when making an Ajax\n\t\t * request - for example custom filtering information, and this callback\n\t\t * function makes it trivial to send extra information to the server. The\n\t\t * passed in parameter is the data set that has been constructed by\n\t\t * DataTables, and you can add to this or modify it as you require.\n\t\t *  @type function\n\t\t *  @param {array} data Data array (array of objects which are name/value\n\t\t *    pairs) that has been constructed by DataTables and will be sent to the\n\t\t *    server. In the case of Ajax sourced data with server-side processing\n\t\t *    this will be an empty array, for server-side processing there will be a\n\t\t *    significant number of parameters!\n\t\t *  @returns {undefined} Ensure that you modify the data array passed in,\n\t\t *    as this is passed by reference.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverParams\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"fnServerParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Load the table state. With this function you can define from where, and how, the\n\t\t * state of a table is loaded. By default DataTables will load from `localStorage`\n\t\t * but you might wish to use a server-side database or cookies.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} callback Callback that can be executed when done. It\n\t\t *    should be passed the loaded state object.\n\t\t *  @return {object} The DataTables state object to be loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoadCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadCallback\": function (settings, callback) {\n\t\t *          $.ajax( {\n\t\t *            \"url\": \"/state_load\",\n\t\t *            \"dataType\": \"json\",\n\t\t *            \"success\": function (json) {\n\t\t *              callback( json );\n\t\t *            }\n\t\t *          } );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoadCallback\": function ( settings ) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(\n\t\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(\n\t\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} catch (e) {\n\t\t\t\treturn {};\n\t\t\t}\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Callback which allows modification of the saved state prior to loading that state.\n\t\t * This callback is called when the table is loading state from the stored data, but\n\t\t * prior to the settings object being modified by the saved state. Note that for\n\t\t * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n\t\t * a plug-in.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object that is to be loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoadParams\n\t\t *\n\t\t *  @example\n\t\t *    // Remove a saved filter, so filtering is never loaded\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadParams\": function (settings, data) {\n\t\t *          data.oSearch.sSearch = \"\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Disallow state loading by returning false\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadParams\": function (settings, data) {\n\t\t *          return false;\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoadParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Callback that is called when the state has been loaded from the state saving method\n\t\t * and the DataTables settings object has been modified as a result of the loaded state.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object that was loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoaded\n\t\t *\n\t\t *  @example\n\t\t *    // Show an alert with the filtering value that was saved\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoaded\": function (settings, data) {\n\t\t *          alert( 'Saved filter was: '+data.oSearch.sSearch );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoaded\": null,\n\t\n\t\n\t\t/**\n\t\t * Save the table state. This function allows you to define where and how the state\n\t\t * information for the table is stored By default DataTables will use `localStorage`\n\t\t * but you might wish to use a server-side database or cookies.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object to be saved\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateSaveCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateSaveCallback\": function (settings, data) {\n\t\t *          // Send an Ajax request to the server with the state object\n\t\t *          $.ajax( {\n\t\t *            \"url\": \"/state_save\",\n\t\t *            \"data\": data,\n\t\t *            \"dataType\": \"json\",\n\t\t *            \"method\": \"POST\"\n\t\t *            \"success\": function () {}\n\t\t *          } );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateSaveCallback\": function ( settings, data ) {\n\t\t\ttry {\n\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(\n\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname,\n\t\t\t\t\tJSON.stringify( data )\n\t\t\t\t);\n\t\t\t} catch (e) {}\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Callback which allows modification of the state to be saved. Called when the table\n\t\t * has changed state a new state save is required. This method allows modification of\n\t\t * the state saving object prior to actually doing the save, including addition or\n\t\t * other state properties or modification. Note that for plug-in authors, you should\n\t\t * use the `stateSaveParams` event to save parameters for a plug-in.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object to be saved\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateSaveParams\n\t\t *\n\t\t *  @example\n\t\t *    // Remove a saved filter, so filtering is never saved\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateSaveParams\": function (settings, data) {\n\t\t *          data.oSearch.sSearch = \"\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateSaveParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Duration for which the saved state information is considered valid. After this period\n\t\t * has elapsed the state will be returned to the default.\n\t\t * Value is given in seconds.\n\t\t *  @type int\n\t\t *  @default 7200 <i>(2 hours)</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.stateDuration\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateDuration\": 60*60*24; // 1 day\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iStateDuration\": 7200,\n\t\n\t\n\t\t/**\n\t\t * When enabled DataTables will not make a request to the server for the first\n\t\t * page draw - rather it will use the data already on the page (no sorting etc\n\t\t * will be applied to it), thus saving on an XHR at load time. `deferLoading`\n\t\t * is used to indicate that deferred loading is required, but it is also used\n\t\t * to tell DataTables how many records there are in the full table (allowing\n\t\t * the information element and pagination to be displayed correctly). In the case\n\t\t * where a filtering is applied to the table on initial load, this can be\n\t\t * indicated by giving the parameter as an array, where the first element is\n\t\t * the number of records available after filtering and the second element is the\n\t\t * number of records without filtering (allowing the table information element\n\t\t * to be shown correctly).\n\t\t *  @type int | array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.deferLoading\n\t\t *\n\t\t *  @example\n\t\t *    // 57 records available in the table, no filtering applied\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"scripts/server_processing.php\",\n\t\t *        \"deferLoading\": 57\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // 57 records after filtering, 100 without filtering (an initial filter applied)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"scripts/server_processing.php\",\n\t\t *        \"deferLoading\": [ 57, 100 ],\n\t\t *        \"search\": {\n\t\t *          \"search\": \"my_filter\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"iDeferLoading\": null,\n\t\n\t\n\t\t/**\n\t\t * Number of rows to display on a single page when using pagination. If\n\t\t * feature enabled (`lengthChange`) then the end user will be able to override\n\t\t * this to a custom setting using a pop-up menu.\n\t\t *  @type int\n\t\t *  @default 10\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.pageLength\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"pageLength\": 50\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iDisplayLength\": 10,\n\t\n\t\n\t\t/**\n\t\t * Define the starting point for data display when using DataTables with\n\t\t * pagination. Note that this parameter is the number of records, rather than\n\t\t * the page number, so if you have 10 records per page and want to start on\n\t\t * the third page, it should be \"20\".\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.displayStart\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"displayStart\": 20\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iDisplayStart\": 0,\n\t\n\t\n\t\t/**\n\t\t * By default DataTables allows keyboard navigation of the table (sorting, paging,\n\t\t * and filtering) by adding a `tabindex` attribute to the required elements. This\n\t\t * allows you to tab through the controls and press the enter key to activate them.\n\t\t * The tabindex is default 0, meaning that the tab follows the flow of the document.\n\t\t * You can overrule this using this parameter if you wish. Use a value of -1 to\n\t\t * disable built-in keyboard navigation.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.tabIndex\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"tabIndex\": 1\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"iTabIndex\": 0,\n\t\n\t\n\t\t/**\n\t\t * Classes that DataTables assigns to the various components and features\n\t\t * that it adds to the HTML table. This allows classes to be configured\n\t\t * during initialisation in addition to through the static\n\t\t * {@link DataTable.ext.oStdClasses} object).\n\t\t *  @namespace\n\t\t *  @name DataTable.defaults.classes\n\t\t */\n\t\t\"oClasses\": {},\n\t\n\t\n\t\t/**\n\t\t * All strings that DataTables uses in the user interface that it creates\n\t\t * are defined in this object, allowing you to modified them individually or\n\t\t * completely replace them all as required.\n\t\t *  @namespace\n\t\t *  @name DataTable.defaults.language\n\t\t */\n\t\t\"oLanguage\": {\n\t\t\t/**\n\t\t\t * Strings that are used for WAI-ARIA labels and controls only (these are not\n\t\t\t * actually visible on the page, but will be read by screenreaders, and thus\n\t\t\t * must be internationalised as well).\n\t\t\t *  @namespace\n\t\t\t *  @name DataTable.defaults.language.aria\n\t\t\t */\n\t\t\t\"oAria\": {\n\t\t\t\t/**\n\t\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t\t * sorted ascending by activing the column (click or return when focused).\n\t\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default : activate to sort column ascending\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.aria.sortAscending\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"aria\": {\n\t\t\t\t *            \"sortAscending\": \" - click/return to sort ascending\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sSortAscending\": \": activate to sort column ascending\",\n\t\n\t\t\t\t/**\n\t\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t\t * sorted descending by activing the column (click or return when focused).\n\t\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default : activate to sort column ascending\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.aria.sortDescending\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"aria\": {\n\t\t\t\t *            \"sortDescending\": \" - click/return to sort descending\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sSortDescending\": \": activate to sort column descending\"\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Pagination string used by DataTables for the built-in pagination\n\t\t\t * control types.\n\t\t\t *  @namespace\n\t\t\t *  @name DataTable.defaults.language.paginate\n\t\t\t */\n\t\t\t\"oPaginate\": {\n\t\t\t\t/**\n\t\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t\t * button to take the user to the first page.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default First\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.first\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"first\": \"First page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sFirst\": \"First\",\n\t\n\t\n\t\t\t\t/**\n\t\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t\t * button to take the user to the last page.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Last\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.last\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"last\": \"Last page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sLast\": \"Last\",\n\t\n\t\n\t\t\t\t/**\n\t\t\t\t * Text to use for the 'next' pagination button (to take the user to the\n\t\t\t\t * next page).\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Next\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.next\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"next\": \"Next page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sNext\": \"Next\",\n\t\n\t\n\t\t\t\t/**\n\t\t\t\t * Text to use for the 'previous' pagination button (to take the user to\n\t\t\t\t * the previous page).\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Previous\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.previous\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"previous\": \"Previous page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sPrevious\": \"Previous\"\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * This string is shown in preference to `zeroRecords` when the table is\n\t\t\t * empty of data (regardless of filtering). Note that this is an optional\n\t\t\t * parameter - if it is not given, the value of `zeroRecords` will be used\n\t\t\t * instead (either the default or given value).\n\t\t\t *  @type string\n\t\t\t *  @default No data available in table\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.emptyTable\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"emptyTable\": \"No data available in table\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sEmptyTable\": \"No data available in table\",\n\t\n\t\n\t\t\t/**\n\t\t\t * This string gives information to the end user about the information\n\t\t\t * that is current on display on the page. The following tokens can be\n\t\t\t * used in the string and will be dynamically replaced as the table\n\t\t\t * display updates. This tokens can be placed anywhere in the string, or\n\t\t\t * removed as needed by the language requires:\n\t\t\t *\n\t\t\t * * `\\_START\\_` - Display index of the first record on the current page\n\t\t\t * * `\\_END\\_` - Display index of the last record on the current page\n\t\t\t * * `\\_TOTAL\\_` - Number of records in the table after filtering\n\t\t\t * * `\\_MAX\\_` - Number of records in the table without filtering\n\t\t\t * * `\\_PAGE\\_` - Current page number\n\t\t\t * * `\\_PAGES\\_` - Total number of pages of data in the table\n\t\t\t *\n\t\t\t *  @type string\n\t\t\t *  @default Showing _START_ to _END_ of _TOTAL_ entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.info\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"info\": \"Showing page _PAGE_ of _PAGES_\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ entries\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Display information string for when the table is empty. Typically the\n\t\t\t * format of this string should match `info`.\n\t\t\t *  @type string\n\t\t\t *  @default Showing 0 to 0 of 0 entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoEmpty\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoEmpty\": \"No entries to show\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoEmpty\": \"Showing 0 to 0 of 0 entries\",\n\t\n\t\n\t\t\t/**\n\t\t\t * When a user filters the information in a table, this string is appended\n\t\t\t * to the information (`info`) to give an idea of how strong the filtering\n\t\t\t * is. The variable _MAX_ is dynamically updated.\n\t\t\t *  @type string\n\t\t\t *  @default (filtered from _MAX_ total entries)\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoFiltered\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoFiltered\": \" - filtering from _MAX_ records\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoFiltered\": \"(filtered from _MAX_ total entries)\",\n\t\n\t\n\t\t\t/**\n\t\t\t * If can be useful to append extra information to the info string at times,\n\t\t\t * and this variable does exactly that. This information will be appended to\n\t\t\t * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n\t\t\t * being used) at all times.\n\t\t\t *  @type string\n\t\t\t *  @default <i>Empty string</i>\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoPostFix\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoPostFix\": \"All records shown are derived from real information.\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoPostFix\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * This decimal place operator is a little different from the other\n\t\t\t * language options since DataTables doesn't output floating point\n\t\t\t * numbers, so it won't ever use this for display of a number. Rather,\n\t\t\t * what this parameter does is modify the sort methods of the table so\n\t\t\t * that numbers which are in a format which has a character other than\n\t\t\t * a period (`.`) as a decimal place will be sorted numerically.\n\t\t\t *\n\t\t\t * Note that numbers with different decimal places cannot be shown in\n\t\t\t * the same table and still be sortable, the table must be consistent.\n\t\t\t * However, multiple different tables on the page can use different\n\t\t\t * decimal place characters.\n\t\t\t *  @type string\n\t\t\t *  @default \n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.decimal\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"decimal\": \",\"\n\t\t\t *          \"thousands\": \".\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sDecimal\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * DataTables has a build in number formatter (`formatNumber`) which is\n\t\t\t * used to format large numbers that are used in the table information.\n\t\t\t * By default a comma is used, but this can be trivially changed to any\n\t\t\t * character you wish with this parameter.\n\t\t\t *  @type string\n\t\t\t *  @default ,\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.thousands\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"thousands\": \"'\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sThousands\": \",\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Detail the action that will be taken when the drop down menu for the\n\t\t\t * pagination length option is changed. The '_MENU_' variable is replaced\n\t\t\t * with a default select list of 10, 25, 50 and 100, and can be replaced\n\t\t\t * with a custom select box if required.\n\t\t\t *  @type string\n\t\t\t *  @default Show _MENU_ entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.lengthMenu\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Language change only\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"lengthMenu\": \"Display _MENU_ records\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Language and options change\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"lengthMenu\": 'Display <select>'+\n\t\t\t *            '<option value=\"10\">10</option>'+\n\t\t\t *            '<option value=\"20\">20</option>'+\n\t\t\t *            '<option value=\"30\">30</option>'+\n\t\t\t *            '<option value=\"40\">40</option>'+\n\t\t\t *            '<option value=\"50\">50</option>'+\n\t\t\t *            '<option value=\"-1\">All</option>'+\n\t\t\t *            '</select> records'\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sLengthMenu\": \"Show _MENU_ entries\",\n\t\n\t\n\t\t\t/**\n\t\t\t * When using Ajax sourced data and during the first draw when DataTables is\n\t\t\t * gathering the data, this message is shown in an empty row in the table to\n\t\t\t * indicate to the end user the the data is being loaded. Note that this\n\t\t\t * parameter is not used when loading data by server-side processing, just\n\t\t\t * Ajax sourced data with client-side processing.\n\t\t\t *  @type string\n\t\t\t *  @default Loading...\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.loadingRecords\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"loadingRecords\": \"Please wait - loading...\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sLoadingRecords\": \"Loading...\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Text which is displayed when the table is processing a user action\n\t\t\t * (usually a sort command or similar).\n\t\t\t *  @type string\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.processing\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"processing\": \"DataTables is currently busy\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sProcessing\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Details the actions that will be taken when the user types into the\n\t\t\t * filtering input text box. The variable \"_INPUT_\", if used in the string,\n\t\t\t * is replaced with the HTML text box for the filtering input allowing\n\t\t\t * control over where it appears in the string. If \"_INPUT_\" is not given\n\t\t\t * then the input box is appended to the string automatically.\n\t\t\t *  @type string\n\t\t\t *  @default Search:\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.search\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Input text box will be appended at the end automatically\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"search\": \"Filter records:\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Specify where the filter should appear\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"search\": \"Apply filter _INPUT_ to table\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sSearch\": \"Search:\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Assign a `placeholder` attribute to the search `input` element\n\t\t\t *  @type string\n\t\t\t *  @default \n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.searchPlaceholder\n\t\t\t */\n\t\t\t\"sSearchPlaceholder\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * All of the language information can be stored in a file on the\n\t\t\t * server-side, which DataTables will look up if this parameter is passed.\n\t\t\t * It must store the URL of the language file, which is in a JSON format,\n\t\t\t * and the object has the same properties as the oLanguage object in the\n\t\t\t * initialiser object (i.e. the above parameters). Please refer to one of\n\t\t\t * the example language files to see how this works in action.\n\t\t\t *  @type string\n\t\t\t *  @default <i>Empty string - i.e. disabled</i>\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.url\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"url\": \"http://www.sprymedia.co.uk/dataTables/lang.txt\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sUrl\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Text shown inside the table records when the is no information to be\n\t\t\t * displayed after filtering. `emptyTable` is shown when there is simply no\n\t\t\t * information in the table at all (regardless of filtering).\n\t\t\t *  @type string\n\t\t\t *  @default No matching records found\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.zeroRecords\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"zeroRecords\": \"No records to display\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sZeroRecords\": \"No matching records found\"\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * This parameter allows you to have define the global filtering state at\n\t\t * initialisation time. As an object the `search` parameter must be\n\t\t * defined, but all other parameters are optional. When `regex` is true,\n\t\t * the search string will be treated as a regular expression, when false\n\t\t * (default) it will be treated as a straight string. When `smart`\n\t\t * DataTables will use it's smart filtering methods (to word match at\n\t\t * any point in the data), when false this will not be done.\n\t\t *  @namespace\n\t\t *  @extends DataTable.models.oSearch\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.search\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"search\": {\"search\": \"Initial search\"}\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"oSearch\": $.extend( {}, DataTable.models.oSearch ),\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * By default DataTables will look for the property `data` (or `aaData` for\n\t\t * compatibility with DataTables 1.9-) when obtaining data from an Ajax\n\t\t * source or for server-side processing - this parameter allows that\n\t\t * property to be changed. You can use Javascript dotted object notation to\n\t\t * get a data source for multiple levels of nesting.\n\t\t *  @type string\n\t\t *  @default data\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.ajaxDataProp\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sAjaxDataProp\": \"data\",\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * You can instruct DataTables to load data from an external\n\t\t * source using this parameter (use aData if you want to pass data in you\n\t\t * already have). Simply provide a url a JSON object can be obtained from.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.ajaxSource\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sAjaxSource\": null,\n\t\n\t\n\t\t/**\n\t\t * This initialisation variable allows you to specify exactly where in the\n\t\t * DOM you want DataTables to inject the various controls it adds to the page\n\t\t * (for example you might want the pagination controls at the top of the\n\t\t * table). DIV elements (with or without a custom class) can also be added to\n\t\t * aid styling. The follow syntax is used:\n\t\t *   <ul>\n\t\t *     <li>The following options are allowed:\n\t\t *       <ul>\n\t\t *         <li>'l' - Length changing</li>\n\t\t *         <li>'f' - Filtering input</li>\n\t\t *         <li>'t' - The table!</li>\n\t\t *         <li>'i' - Information</li>\n\t\t *         <li>'p' - Pagination</li>\n\t\t *         <li>'r' - pRocessing</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>The following constants are allowed:\n\t\t *       <ul>\n\t\t *         <li>'H' - jQueryUI theme \"header\" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>\n\t\t *         <li>'F' - jQueryUI theme \"footer\" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>The following syntax is expected:\n\t\t *       <ul>\n\t\t *         <li>'&lt;' and '&gt;' - div elements</li>\n\t\t *         <li>'&lt;\"class\" and '&gt;' - div with a class</li>\n\t\t *         <li>'&lt;\"#id\" and '&gt;' - div with an ID</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>Examples:\n\t\t *       <ul>\n\t\t *         <li>'&lt;\"wrapper\"flipt&gt;'</li>\n\t\t *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *   </ul>\n\t\t *  @type string\n\t\t *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>\n\t\t *    <\"H\"lfr>t<\"F\"ip> <i>(when `jQueryUI` is true)</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.dom\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"dom\": '&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&gt;'\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sDom\": \"lfrtip\",\n\t\n\t\n\t\t/**\n\t\t * Search delay option. This will throttle full table searches that use the\n\t\t * DataTables provided search input element (it does not effect calls to\n\t\t * `dt-api search()`, providing a delay before the search is made.\n\t\t *  @type integer\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.searchDelay\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searchDelay\": 200\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"searchDelay\": null,\n\t\n\t\n\t\t/**\n\t\t * DataTables features six different built-in options for the buttons to\n\t\t * display for pagination control:\n\t\t *\n\t\t * * `numbers` - Page number buttons only\n\t\t * * `simple` - 'Previous' and 'Next' buttons only\n\t\t * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n\t\t * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n\t\t * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\n\t\t * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\n\t\t *  \n\t\t * Further methods can be added using {@link DataTable.ext.oPagination}.\n\t\t *  @type string\n\t\t *  @default simple_numbers\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.pagingType\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"pagingType\": \"full_numbers\"\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"sPaginationType\": \"simple_numbers\",\n\t\n\t\n\t\t/**\n\t\t * Enable horizontal scrolling. When a table is too wide to fit into a\n\t\t * certain layout, or you have a large number of columns in the table, you\n\t\t * can enable x-scrolling to show the table in a viewport, which can be\n\t\t * scrolled. This property can be `true` which will allow the table to\n\t\t * scroll horizontally when needed, or any CSS unit, or a number (in which\n\t\t * case it will be treated as a pixel measurement). Setting as simply `true`\n\t\t * is recommended.\n\t\t *  @type boolean|string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.scrollX\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollX\": true,\n\t\t *        \"scrollCollapse\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollX\": \"\",\n\t\n\t\n\t\t/**\n\t\t * This property can be used to force a DataTable to use more width than it\n\t\t * might otherwise do when x-scrolling is enabled. For example if you have a\n\t\t * table which requires to be well spaced, this parameter is useful for\n\t\t * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n\t\t * any CSS unit, or a number (in which case it will be treated as a pixel\n\t\t * measurement).\n\t\t *  @type string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.scrollXInner\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollX\": \"100%\",\n\t\t *        \"scrollXInner\": \"110%\"\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollXInner\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n\t\t * to the given height, and enable scrolling for any data which overflows the\n\t\t * current viewport. This can be used as an alternative to paging to display\n\t\t * a lot of data in a small area (although paging and scrolling can both be\n\t\t * enabled at the same time). This property can be any CSS unit, or a number\n\t\t * (in which case it will be treated as a pixel measurement).\n\t\t *  @type string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.scrollY\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200px\",\n\t\t *        \"paginate\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollY\": \"\",\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * Set the HTTP method that is used to make the Ajax call for server-side\n\t\t * processing or Ajax sourced data.\n\t\t *  @type string\n\t\t *  @default GET\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverMethod\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sServerMethod\": \"GET\",\n\t\n\t\n\t\t/**\n\t\t * DataTables makes use of renderers when displaying HTML elements for\n\t\t * a table. These renderers can be added or modified by plug-ins to\n\t\t * generate suitable mark-up for a site. For example the Bootstrap\n\t\t * integration plug-in for DataTables uses a paging button renderer to\n\t\t * display pagination buttons in the mark-up required by Bootstrap.\n\t\t *\n\t\t * For further information about the renderers available see\n\t\t * DataTable.ext.renderer\n\t\t *  @type string|object\n\t\t *  @default null\n\t\t *\n\t\t *  @name DataTable.defaults.renderer\n\t\t *\n\t\t */\n\t\t\"renderer\": null,\n\t\n\t\n\t\t/**\n\t\t * Set the data property name that DataTables should use to get a row's id\n\t\t * to set as the `id` property in the node.\n\t\t *  @type string\n\t\t *  @default DT_RowId\n\t\t *\n\t\t *  @name DataTable.defaults.rowId\n\t\t */\n\t\t\"rowId\": \"DT_RowId\"\n\t};\n\t\n\t_fnHungarianMap( DataTable.defaults );\n\t\n\t\n\t\n\t/*\n\t * Developer note - See note in model.defaults.js about the use of Hungarian\n\t * notation and camel case.\n\t */\n\t\n\t/**\n\t * Column options that can be given to DataTables at initialisation time.\n\t *  @namespace\n\t */\n\tDataTable.defaults.column = {\n\t\t/**\n\t\t * Define which column(s) an order will occur on for this column. This\n\t\t * allows a column's ordering to take multiple columns into account when\n\t\t * doing a sort or use the data from a different column. For example first\n\t\t * name / last name columns make sense to do a multi-column sort over the\n\t\t * two columns.\n\t\t *  @type array|int\n\t\t *  @default null <i>Takes the value of the column index automatically</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderData\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderData\": [ 0, 1 ], \"targets\": [ 0 ] },\n\t\t *          { \"orderData\": [ 1, 0 ], \"targets\": [ 1 ] },\n\t\t *          { \"orderData\": 2, \"targets\": [ 2 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"orderData\": [ 0, 1 ] },\n\t\t *          { \"orderData\": [ 1, 0 ] },\n\t\t *          { \"orderData\": 2 },\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aDataSort\": null,\n\t\t\"iDataSort\": -1,\n\t\n\t\n\t\t/**\n\t\t * You can control the default ordering direction, and even alter the\n\t\t * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n\t\t * using this parameter.\n\t\t *  @type array\n\t\t *  @default [ 'asc', 'desc' ]\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderSequence\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderSequence\": [ \"asc\" ], \"targets\": [ 1 ] },\n\t\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ], \"targets\": [ 2 ] },\n\t\t *          { \"orderSequence\": [ \"desc\" ], \"targets\": [ 3 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          { \"orderSequence\": [ \"asc\" ] },\n\t\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ] },\n\t\t *          { \"orderSequence\": [ \"desc\" ] },\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"asSorting\": [ 'asc', 'desc' ],\n\t\n\t\n\t\t/**\n\t\t * Enable or disable filtering on the data in this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.searchable\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"searchable\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"searchable\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bSearchable\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable ordering on this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderable\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderable\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"orderable\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortable\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the display of this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.visible\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"visible\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"visible\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bVisible\": true,\n\t\n\t\n\t\t/**\n\t\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t\t * allowing you to modify the DOM element (add background colour for example) when the\n\t\t * element is available.\n\t\t *  @type function\n\t\t *  @param {element} td The TD node that has been created\n\t\t *  @param {*} cellData The Data for the cell\n\t\t *  @param {array|object} rowData The data for the whole row\n\t\t *  @param {int} row The row index for the aoData data store\n\t\t *  @param {int} col The column index for aoColumns\n\t\t *\n\t\t *  @name DataTable.defaults.column.createdCell\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [3],\n\t\t *          \"createdCell\": function (td, cellData, rowData, row, col) {\n\t\t *            if ( cellData == \"1.7\" ) {\n\t\t *              $(td).css('color', 'blue')\n\t\t *            }\n\t\t *          }\n\t\t *        } ]\n\t\t *      });\n\t\t *    } );\n\t\t */\n\t\t\"fnCreatedCell\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter has been replaced by `data` in DataTables to ensure naming\n\t\t * consistency. `dataProp` can still be used, as there is backwards\n\t\t * compatibility in DataTables for this option, but it is strongly\n\t\t * recommended that you use `data` in preference to `dataProp`.\n\t\t *  @name DataTable.defaults.column.dataProp\n\t\t */\n\t\n\t\n\t\t/**\n\t\t * This property can be used to read data from any data source property,\n\t\t * including deeply nested objects / properties. `data` can be given in a\n\t\t * number of different ways which effect its behaviour:\n\t\t *\n\t\t * * `integer` - treated as an array index for the data source. This is the\n\t\t *   default that DataTables uses (incrementally increased for each column).\n\t\t * * `string` - read an object property from the data source. There are\n\t\t *   three 'special' options that can be used in the string to alter how\n\t\t *   DataTables reads the data from the source object:\n\t\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t\t *      Javascript to read from nested objects, so to can the options\n\t\t *      specified in `data`. For example: `browser.version` or\n\t\t *      `browser.name`. If your object parameter name contains a period, use\n\t\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t\t *      from and array source, joining the data with the characters provided\n\t\t *      between the two brackets. For example: `name[, ]` would provide a\n\t\t *      comma-space separated list from the source array. If no characters\n\t\t *      are provided between the brackets, the original array source is\n\t\t *      returned.\n\t\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t\t *      execute a function of the name given. For example: `browser()` for a\n\t\t *      simple function on the data source, `browser.version()` for a\n\t\t *      function in a nested property or even `browser().version` to get an\n\t\t *      object property if the function called returns an object. Note that\n\t\t *      function notation is recommended for use in `render` rather than\n\t\t *      `data` as it is much simpler to use as a renderer.\n\t\t * * `null` - use the original data source for the row rather than plucking\n\t\t *   data directly from it. This action has effects on two other\n\t\t *   initialisation options:\n\t\t *    * `defaultContent` - When null is given as the `data` option and\n\t\t *      `defaultContent` is specified for the column, the value defined by\n\t\t *      `defaultContent` will be used for the cell.\n\t\t *    * `render` - When null is used for the `data` option and the `render`\n\t\t *      option is specified for the column, the whole data source for the\n\t\t *      row is used for the renderer.\n\t\t * * `function` - the function given will be executed whenever DataTables\n\t\t *   needs to set or get the data for a cell in the column. The function\n\t\t *   takes three parameters:\n\t\t *    * Parameters:\n\t\t *      * `{array|object}` The data source for the row\n\t\t *      * `{string}` The type call data requested - this will be 'set' when\n\t\t *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n\t\t *        when gathering data. Note that when `undefined` is given for the\n\t\t *        type DataTables expects to get the raw data for the object back<\n\t\t *      * `{*}` Data to set when the second parameter is 'set'.\n\t\t *    * Return:\n\t\t *      * The return value from the function is not required when 'set' is\n\t\t *        the type of call, but otherwise the return is what will be used\n\t\t *        for the data requested.\n\t\t *\n\t\t * Note that `data` is a getter and setter option. If you just require\n\t\t * formatting of data for output, you will likely want to use `render` which\n\t\t * is simply a getter and thus simpler to use.\n\t\t *\n\t\t * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n\t\t * name change reflects the flexibility of this property and is consistent\n\t\t * with the naming of mRender. If 'mDataProp' is given, then it will still\n\t\t * be used by DataTables, as it automatically maps the old name to the new\n\t\t * if required.\n\t\t *\n\t\t *  @type string|int|function|null\n\t\t *  @default null <i>Use automatically calculated column index</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.data\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Read table data from objects\n\t\t *    // JSON structure for each row:\n\t\t *    //   {\n\t\t *    //      \"engine\": {value},\n\t\t *    //      \"browser\": {value},\n\t\t *    //      \"platform\": {value},\n\t\t *    //      \"version\": {value},\n\t\t *    //      \"grade\": {value}\n\t\t *    //   }\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/objects.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          { \"data\": \"platform\" },\n\t\t *          { \"data\": \"version\" },\n\t\t *          { \"data\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Read information from deeply nested objects\n\t\t *    // JSON structure for each row:\n\t\t *    //   {\n\t\t *    //      \"engine\": {value},\n\t\t *    //      \"browser\": {value},\n\t\t *    //      \"platform\": {\n\t\t *    //         \"inner\": {value}\n\t\t *    //      },\n\t\t *    //      \"details\": [\n\t\t *    //         {value}, {value}\n\t\t *    //      ]\n\t\t *    //   }\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          { \"data\": \"platform.inner\" },\n\t\t *          { \"data\": \"details.0\" },\n\t\t *          { \"data\": \"details.1\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `data` as a function to provide different information for\n\t\t *    // sorting, filtering and display. In this case, currency (price)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": function ( source, type, val ) {\n\t\t *            if (type === 'set') {\n\t\t *              source.price = val;\n\t\t *              // Store the computed display and filter values for efficiency\n\t\t *              source.price_display = val==\"\" ? \"\" : \"$\"+numberFormat(val);\n\t\t *              source.price_filter  = val==\"\" ? \"\" : \"$\"+numberFormat(val)+\" \"+val;\n\t\t *              return;\n\t\t *            }\n\t\t *            else if (type === 'display') {\n\t\t *              return source.price_display;\n\t\t *            }\n\t\t *            else if (type === 'filter') {\n\t\t *              return source.price_filter;\n\t\t *            }\n\t\t *            // 'sort', 'type' and undefined all just use the integer\n\t\t *            return source.price;\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using default content\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null,\n\t\t *          \"defaultContent\": \"Click to edit\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using array notation - outputting a list from an array\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": \"name[, ]\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t */\n\t\t\"mData\": null,\n\t\n\t\n\t\t/**\n\t\t * This property is the rendering partner to `data` and it is suggested that\n\t\t * when you want to manipulate data for display (including filtering,\n\t\t * sorting etc) without altering the underlying data for the table, use this\n\t\t * property. `render` can be considered to be the the read only companion to\n\t\t * `data` which is read / write (then as such more complex). Like `data`\n\t\t * this option can be given in a number of different ways to effect its\n\t\t * behaviour:\n\t\t *\n\t\t * * `integer` - treated as an array index for the data source. This is the\n\t\t *   default that DataTables uses (incrementally increased for each column).\n\t\t * * `string` - read an object property from the data source. There are\n\t\t *   three 'special' options that can be used in the string to alter how\n\t\t *   DataTables reads the data from the source object:\n\t\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t\t *      Javascript to read from nested objects, so to can the options\n\t\t *      specified in `data`. For example: `browser.version` or\n\t\t *      `browser.name`. If your object parameter name contains a period, use\n\t\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t\t *      from and array source, joining the data with the characters provided\n\t\t *      between the two brackets. For example: `name[, ]` would provide a\n\t\t *      comma-space separated list from the source array. If no characters\n\t\t *      are provided between the brackets, the original array source is\n\t\t *      returned.\n\t\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t\t *      execute a function of the name given. For example: `browser()` for a\n\t\t *      simple function on the data source, `browser.version()` for a\n\t\t *      function in a nested property or even `browser().version` to get an\n\t\t *      object property if the function called returns an object.\n\t\t * * `object` - use different data for the different data types requested by\n\t\t *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n\t\t *   of the object is the data type the property refers to and the value can\n\t\t *   defined using an integer, string or function using the same rules as\n\t\t *   `render` normally does. Note that an `_` option _must_ be specified.\n\t\t *   This is the default value to use if you haven't specified a value for\n\t\t *   the data type requested by DataTables.\n\t\t * * `function` - the function given will be executed whenever DataTables\n\t\t *   needs to set or get the data for a cell in the column. The function\n\t\t *   takes three parameters:\n\t\t *    * Parameters:\n\t\t *      * {array|object} The data source for the row (based on `data`)\n\t\t *      * {string} The type call data requested - this will be 'filter',\n\t\t *        'display', 'type' or 'sort'.\n\t\t *      * {array|object} The full data source for the row (not based on\n\t\t *        `data`)\n\t\t *    * Return:\n\t\t *      * The return value from the function is what will be used for the\n\t\t *        data requested.\n\t\t *\n\t\t *  @type string|int|function|object|null\n\t\t *  @default null Use the data source value.\n\t\t *\n\t\t *  @name DataTable.defaults.column.render\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Create a comma separated list from an array of objects\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          {\n\t\t *            \"data\": \"platform\",\n\t\t *            \"render\": \"[, ].name\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Execute a function to obtain data\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t\t *          \"render\": \"browserName()\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // As an object, extracting different data for the different types\n\t\t *    // This would be used with a data source such as:\n\t\t *    //   { \"phone\": 5552368, \"phone_filter\": \"5552368 555-2368\", \"phone_display\": \"555-2368\" }\n\t\t *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`\n\t\t *    // (which has both forms) is used for filtering for if a user inputs either format, while\n\t\t *    // the formatted phone number is the one that is shown in the table.\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t\t *          \"render\": {\n\t\t *            \"_\": \"phone\",\n\t\t *            \"filter\": \"phone_filter\",\n\t\t *            \"display\": \"phone_display\"\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Use as a function to create a link from the data source\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": \"download_link\",\n\t\t *          \"render\": function ( data, type, full ) {\n\t\t *            return '<a href=\"'+data+'\">Download</a>';\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"mRender\": null,\n\t\n\t\n\t\t/**\n\t\t * Change the cell type created for the column - either TD cells or TH cells. This\n\t\t * can be useful as TH cells have semantic meaning in the table body, allowing them\n\t\t * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n\t\t *  @type string\n\t\t *  @default td\n\t\t *\n\t\t *  @name DataTable.defaults.column.cellType\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Make the first column use TH cells\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"cellType\": \"th\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sCellType\": \"td\",\n\t\n\t\n\t\t/**\n\t\t * Class to give to each cell in this column.\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.class\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"class\": \"my_class\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"class\": \"my_class\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sClass\": \"\",\n\t\n\t\t/**\n\t\t * When DataTables calculates the column widths to assign to each column,\n\t\t * it finds the longest string in each column and then constructs a\n\t\t * temporary table and reads the widths from that. The problem with this\n\t\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t\t * string - thus the calculation can go wrong (doing it properly and putting\n\t\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t\t * a \"work around\" we provide this option. It will append its value to the\n\t\t * text that is found to be the longest string for the column - i.e. padding.\n\t\t * Generally you shouldn't need this!\n\t\t *  @type string\n\t\t *  @default <i>Empty string<i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.contentPadding\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          {\n\t\t *            \"contentPadding\": \"mmm\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sContentPadding\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Allows a default value to be given for a column's data, and will be used\n\t\t * whenever a null data source is encountered (this can be because `data`\n\t\t * is set to null, or because the data source itself is null).\n\t\t *  @type string\n\t\t *  @default null\n\t\t *\n\t\t *  @name DataTable.defaults.column.defaultContent\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          {\n\t\t *            \"data\": null,\n\t\t *            \"defaultContent\": \"Edit\",\n\t\t *            \"targets\": [ -1 ]\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          {\n\t\t *            \"data\": null,\n\t\t *            \"defaultContent\": \"Edit\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sDefaultContent\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter is only used in DataTables' server-side processing. It can\n\t\t * be exceptionally useful to know what columns are being displayed on the\n\t\t * client side, and to map these to database fields. When defined, the names\n\t\t * also allow DataTables to reorder information from the server if it comes\n\t\t * back in an unexpected order (i.e. if you switch your columns around on the\n\t\t * client-side, your server-side code does not also need updating).\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.name\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"name\": \"engine\", \"targets\": [ 0 ] },\n\t\t *          { \"name\": \"browser\", \"targets\": [ 1 ] },\n\t\t *          { \"name\": \"platform\", \"targets\": [ 2 ] },\n\t\t *          { \"name\": \"version\", \"targets\": [ 3 ] },\n\t\t *          { \"name\": \"grade\", \"targets\": [ 4 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"name\": \"engine\" },\n\t\t *          { \"name\": \"browser\" },\n\t\t *          { \"name\": \"platform\" },\n\t\t *          { \"name\": \"version\" },\n\t\t *          { \"name\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sName\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Defines a data source type for the ordering which can be used to read\n\t\t * real-time information from the table (updating the internally cached\n\t\t * version) prior to ordering. This allows ordering to occur on user\n\t\t * editable elements such as form inputs.\n\t\t *  @type string\n\t\t *  @default std\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderDataType\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderDataType\": \"dom-text\", \"targets\": [ 2, 3 ] },\n\t\t *          { \"type\": \"numeric\", \"targets\": [ 3 ] },\n\t\t *          { \"orderDataType\": \"dom-select\", \"targets\": [ 4 ] },\n\t\t *          { \"orderDataType\": \"dom-checkbox\", \"targets\": [ 5 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          { \"orderDataType\": \"dom-text\" },\n\t\t *          { \"orderDataType\": \"dom-text\", \"type\": \"numeric\" },\n\t\t *          { \"orderDataType\": \"dom-select\" },\n\t\t *          { \"orderDataType\": \"dom-checkbox\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sSortDataType\": \"std\",\n\t\n\t\n\t\t/**\n\t\t * The title of this column.\n\t\t *  @type string\n\t\t *  @default null <i>Derived from the 'TH' value for this column in the\n\t\t *    original HTML table.</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.title\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"title\": \"My column title\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"My column title\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sTitle\": null,\n\t\n\t\n\t\t/**\n\t\t * The type allows you to specify how the data for this column will be\n\t\t * ordered. Four types (string, numeric, date and html (which will strip\n\t\t * HTML tags before ordering)) are currently available. Note that only date\n\t\t * formats understood by Javascript's Date() object will be accepted as type\n\t\t * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n\t\t * 'numeric', 'date' or 'html' (by default). Further types can be adding\n\t\t * through plug-ins.\n\t\t *  @type string\n\t\t *  @default null <i>Auto-detected from raw data</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.type\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"type\": \"html\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"type\": \"html\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sType\": null,\n\t\n\t\n\t\t/**\n\t\t * Defining the width of the column, this parameter may take any CSS value\n\t\t * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n\t\t * been given a specific width through this interface ensuring that the table\n\t\t * remains readable.\n\t\t *  @type string\n\t\t *  @default null <i>Automatic</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.width\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"width\": \"20%\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"width\": \"20%\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sWidth\": null\n\t};\n\t\n\t_fnHungarianMap( DataTable.defaults.column );\n\t\n\t\n\t\n\t/**\n\t * DataTables settings object - this holds all the information needed for a\n\t * given table, including configuration, data and current application of the\n\t * table options. DataTables does not have a single instance for each DataTable\n\t * with the settings attached to that instance, but rather instances of the\n\t * DataTable \"class\" are created on-the-fly as needed (typically by a\n\t * $().dataTable() call) and the settings object is then applied to that\n\t * instance.\n\t *\n\t * Note that this object is related to {@link DataTable.defaults} but this\n\t * one is the internal data store for DataTables's cache of columns. It should\n\t * NOT be manipulated outside of DataTables. Any configuration should be done\n\t * through the initialisation options.\n\t *  @namespace\n\t *  @todo Really should attach the settings object to individual instances so we\n\t *    don't need to create new instances on each $().dataTable() call (if the\n\t *    table already exists). It would also save passing oSettings around and\n\t *    into every single function. However, this is a very significant\n\t *    architecture change for DataTables and will almost certainly break\n\t *    backwards compatibility with older installations. This is something that\n\t *    will be done in 2.0.\n\t */\n\tDataTable.models.oSettings = {\n\t\t/**\n\t\t * Primary features of DataTables and their enablement state.\n\t\t *  @namespace\n\t\t */\n\t\t\"oFeatures\": {\n\t\n\t\t\t/**\n\t\t\t * Flag to say if DataTables should automatically try to calculate the\n\t\t\t * optimum table and columns widths (true) or not (false).\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bAutoWidth\": null,\n\t\n\t\t\t/**\n\t\t\t * Delay the creation of TR and TD elements until they are actually\n\t\t\t * needed by a driven page draw. This can give a significant speed\n\t\t\t * increase for Ajax source and Javascript source data, but makes no\n\t\t\t * difference at all for DOM and server-side processing tables.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bDeferRender\": null,\n\t\n\t\t\t/**\n\t\t\t * Enable filtering on the table or not. Note that if this is disabled\n\t\t\t * then there is no filtering at all on the table, including fnFilter.\n\t\t\t * To just remove the filtering input use sDom and remove the 'f' option.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bFilter\": null,\n\t\n\t\t\t/**\n\t\t\t * Table information element (the 'Showing x of y records' div) enable\n\t\t\t * flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bInfo\": null,\n\t\n\t\t\t/**\n\t\t\t * Present a user control allowing the end user to change the page size\n\t\t\t * when pagination is enabled.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bLengthChange\": null,\n\t\n\t\t\t/**\n\t\t\t * Pagination enabled or not. Note that if this is disabled then length\n\t\t\t * changing must also be disabled.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bPaginate\": null,\n\t\n\t\t\t/**\n\t\t\t * Processing indicator enable flag whenever DataTables is enacting a\n\t\t\t * user request - typically an Ajax request for server-side processing.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bProcessing\": null,\n\t\n\t\t\t/**\n\t\t\t * Server-side processing enabled flag - when enabled DataTables will\n\t\t\t * get all data from the server for every draw - there is no filtering,\n\t\t\t * sorting or paging done on the client-side.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bServerSide\": null,\n\t\n\t\t\t/**\n\t\t\t * Sorting enablement flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSort\": null,\n\t\n\t\t\t/**\n\t\t\t * Multi-column sorting\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSortMulti\": null,\n\t\n\t\t\t/**\n\t\t\t * Apply a class to the columns which are being sorted to provide a\n\t\t\t * visual highlight or not. This can slow things down when enabled since\n\t\t\t * there is a lot of DOM interaction.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSortClasses\": null,\n\t\n\t\t\t/**\n\t\t\t * State saving enablement flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bStateSave\": null\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Scrolling settings for a table.\n\t\t *  @namespace\n\t\t */\n\t\t\"oScroll\": {\n\t\t\t/**\n\t\t\t * When the table is shorter in height than sScrollY, collapse the\n\t\t\t * table container down to the height of the table (when true).\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bCollapse\": null,\n\t\n\t\t\t/**\n\t\t\t * Width of the scrollbar for the web-browser's platform. Calculated\n\t\t\t * during table initialisation.\n\t\t\t *  @type int\n\t\t\t *  @default 0\n\t\t\t */\n\t\t\t\"iBarWidth\": 0,\n\t\n\t\t\t/**\n\t\t\t * Viewport width for horizontal scrolling. Horizontal scrolling is\n\t\t\t * disabled if an empty string.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t */\n\t\t\t\"sX\": null,\n\t\n\t\t\t/**\n\t\t\t * Width to expand the table to when using x-scrolling. Typically you\n\t\t\t * should not need to use this.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t *  @deprecated\n\t\t\t */\n\t\t\t\"sXInner\": null,\n\t\n\t\t\t/**\n\t\t\t * Viewport height for vertical scrolling. Vertical scrolling is disabled\n\t\t\t * if an empty string.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t */\n\t\t\t\"sY\": null\n\t\t},\n\t\n\t\t/**\n\t\t * Language information for the table.\n\t\t *  @namespace\n\t\t *  @extends DataTable.defaults.oLanguage\n\t\t */\n\t\t\"oLanguage\": {\n\t\t\t/**\n\t\t\t * Information callback function. See\n\t\t\t * {@link DataTable.defaults.fnInfoCallback}\n\t\t\t *  @type function\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"fnInfoCallback\": null\n\t\t},\n\t\n\t\t/**\n\t\t * Browser support parameters\n\t\t *  @namespace\n\t\t */\n\t\t\"oBrowser\": {\n\t\t\t/**\n\t\t\t * Indicate if the browser incorrectly calculates width:100% inside a\n\t\t\t * scrolling element (IE6/7)\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bScrollOversize\": false,\n\t\n\t\t\t/**\n\t\t\t * Determine if the vertical scrollbar is on the right or left of the\n\t\t\t * scrolling container - needed for rtl language layout, although not\n\t\t\t * all browsers move the scrollbar (Safari).\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bScrollbarLeft\": false,\n\t\n\t\t\t/**\n\t\t\t * Flag for if `getBoundingClientRect` is fully supported or not\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bBounding\": false,\n\t\n\t\t\t/**\n\t\t\t * Browser scrollbar width\n\t\t\t *  @type integer\n\t\t\t *  @default 0\n\t\t\t */\n\t\t\t\"barWidth\": 0\n\t\t},\n\t\n\t\n\t\t\"ajax\": null,\n\t\n\t\n\t\t/**\n\t\t * Array referencing the nodes which are used for the features. The\n\t\t * parameters of this object match what is allowed by sDom - i.e.\n\t\t *   <ul>\n\t\t *     <li>'l' - Length changing</li>\n\t\t *     <li>'f' - Filtering input</li>\n\t\t *     <li>'t' - The table!</li>\n\t\t *     <li>'i' - Information</li>\n\t\t *     <li>'p' - Pagination</li>\n\t\t *     <li>'r' - pRocessing</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aanFeatures\": [],\n\t\n\t\t/**\n\t\t * Store data information - see {@link DataTable.models.oRow} for detailed\n\t\t * information.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoData\": [],\n\t\n\t\t/**\n\t\t * Array of indexes which are in the current display (after filtering etc)\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aiDisplay\": [],\n\t\n\t\t/**\n\t\t * Array of indexes for display - no filtering\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aiDisplayMaster\": [],\n\t\n\t\t/**\n\t\t * Map of row ids to data indexes\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"aIds\": {},\n\t\n\t\t/**\n\t\t * Store information about each column that is in use\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoColumns\": [],\n\t\n\t\t/**\n\t\t * Store information about the table's header\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoHeader\": [],\n\t\n\t\t/**\n\t\t * Store information about the table's footer\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoFooter\": [],\n\t\n\t\t/**\n\t\t * Store the applied global search information in case we want to force a\n\t\t * research or compare the old search to a new one.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @namespace\n\t\t *  @extends DataTable.models.oSearch\n\t\t */\n\t\t\"oPreviousSearch\": {},\n\t\n\t\t/**\n\t\t * Store the applied search for each column - see\n\t\t * {@link DataTable.models.oSearch} for the format that is used for the\n\t\t * filtering information for each column.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoPreSearchCols\": [],\n\t\n\t\t/**\n\t\t * Sorting that is applied to the table. Note that the inner arrays are\n\t\t * used in the following manner:\n\t\t * <ul>\n\t\t *   <li>Index 0 - column number</li>\n\t\t *   <li>Index 1 - current sorting direction</li>\n\t\t * </ul>\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @todo These inner arrays should really be objects\n\t\t */\n\t\t\"aaSorting\": null,\n\t\n\t\t/**\n\t\t * Sorting that is always applied to the table (i.e. prefixed in front of\n\t\t * aaSorting).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aaSortingFixed\": [],\n\t\n\t\t/**\n\t\t * Classes to use for the striping of a table.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"asStripeClasses\": null,\n\t\n\t\t/**\n\t\t * If restoring a table - we should restore its striping classes as well\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"asDestroyStripes\": [],\n\t\n\t\t/**\n\t\t * If restoring a table - we should restore its width\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"sDestroyWidth\": 0,\n\t\n\t\t/**\n\t\t * Callback functions array for every time a row is inserted (i.e. on a draw).\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoRowCallback\": [],\n\t\n\t\t/**\n\t\t * Callback functions for the header on each draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoHeaderCallback\": [],\n\t\n\t\t/**\n\t\t * Callback function for the footer on each draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoFooterCallback\": [],\n\t\n\t\t/**\n\t\t * Array of callback functions for draw callback functions\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoDrawCallback\": [],\n\t\n\t\t/**\n\t\t * Array of callback functions for row created function\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoRowCreatedCallback\": [],\n\t\n\t\t/**\n\t\t * Callback functions for just before the table is redrawn. A return of\n\t\t * false will be used to cancel the draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoPreDrawCallback\": [],\n\t\n\t\t/**\n\t\t * Callback functions for when the table has been initialised.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoInitComplete\": [],\n\t\n\t\n\t\t/**\n\t\t * Callbacks for modifying the settings to be stored for state saving, prior to\n\t\t * saving state.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateSaveParams\": [],\n\t\n\t\t/**\n\t\t * Callbacks for modifying the settings that have been stored for state saving\n\t\t * prior to using the stored values to restore the state.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoadParams\": [],\n\t\n\t\t/**\n\t\t * Callbacks for operating on the settings object once the saved state has been\n\t\t * loaded\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoaded\": [],\n\t\n\t\t/**\n\t\t * Cache the table ID for quick access\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t */\n\t\t\"sTableId\": \"\",\n\t\n\t\t/**\n\t\t * The TABLE node for the main table\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTable\": null,\n\t\n\t\t/**\n\t\t * Permanent ref to the thead element\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTHead\": null,\n\t\n\t\t/**\n\t\t * Permanent ref to the tfoot element - if it exists\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTFoot\": null,\n\t\n\t\t/**\n\t\t * Permanent ref to the tbody element\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTBody\": null,\n\t\n\t\t/**\n\t\t * Cache the wrapper node (contains all DataTables controlled elements)\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTableWrapper\": null,\n\t\n\t\t/**\n\t\t * Indicate if when using server-side processing the loading of data\n\t\t * should be deferred until the second draw.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bDeferLoading\": false,\n\t\n\t\t/**\n\t\t * Indicate if all required information has been read in\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bInitialised\": false,\n\t\n\t\t/**\n\t\t * Information about open rows. Each object in the array has the parameters\n\t\t * 'nTr' and 'nParent'\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoOpenRows\": [],\n\t\n\t\t/**\n\t\t * Dictate the positioning of DataTables' control elements - see\n\t\t * {@link DataTable.model.oInit.sDom}.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sDom\": null,\n\t\n\t\t/**\n\t\t * Search delay (in mS)\n\t\t *  @type integer\n\t\t *  @default null\n\t\t */\n\t\t\"searchDelay\": null,\n\t\n\t\t/**\n\t\t * Which type of pagination should be used.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default two_button\n\t\t */\n\t\t\"sPaginationType\": \"two_button\",\n\t\n\t\t/**\n\t\t * The state duration (for `stateSave`) in seconds.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"iStateDuration\": 0,\n\t\n\t\t/**\n\t\t * Array of callback functions for state saving. Each array element is an\n\t\t * object with the following parameters:\n\t\t *   <ul>\n\t\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t\t *       and the JSON string to save that has been thus far created. Returns\n\t\t *       a JSON string to be inserted into a json object\n\t\t *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n\t\t *     <li>string:sName - name of callback</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateSave\": [],\n\t\n\t\t/**\n\t\t * Array of callback functions for state loading. Each array element is an\n\t\t * object with the following parameters:\n\t\t *   <ul>\n\t\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t\t *       and the object stored. May return false to cancel state loading</li>\n\t\t *     <li>string:sName - name of callback</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoad\": [],\n\t\n\t\t/**\n\t\t * State that was saved. Useful for back reference\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oSavedState\": null,\n\t\n\t\t/**\n\t\t * State that was loaded. Useful for back reference\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oLoadedState\": null,\n\t\n\t\t/**\n\t\t * Source url for AJAX data for the table.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sAjaxSource\": null,\n\t\n\t\t/**\n\t\t * Property from a given object from which to read the table data from. This\n\t\t * can be an empty string (when not server-side processing), in which case\n\t\t * it is  assumed an an array is given directly.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sAjaxDataProp\": null,\n\t\n\t\t/**\n\t\t * The last jQuery XHR object that was used for server-side data gathering.\n\t\t * This can be used for working with the XHR information in one of the\n\t\t * callbacks\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"jqXHR\": null,\n\t\n\t\t/**\n\t\t * JSON returned from the server in the last Ajax request\n\t\t *  @type object\n\t\t *  @default undefined\n\t\t */\n\t\t\"json\": undefined,\n\t\n\t\t/**\n\t\t * Data submitted as part of the last Ajax request\n\t\t *  @type object\n\t\t *  @default undefined\n\t\t */\n\t\t\"oAjaxData\": undefined,\n\t\n\t\t/**\n\t\t * Function to get the server-side data.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type function\n\t\t */\n\t\t\"fnServerData\": null,\n\t\n\t\t/**\n\t\t * Functions which are called prior to sending an Ajax request so extra\n\t\t * parameters can easily be sent to the server\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoServerParams\": [],\n\t\n\t\t/**\n\t\t * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n\t\t * required).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sServerMethod\": null,\n\t\n\t\t/**\n\t\t * Format numbers for display.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type function\n\t\t */\n\t\t\"fnFormatNumber\": null,\n\t\n\t\t/**\n\t\t * List of options that can be used for the user selectable length menu.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aLengthMenu\": null,\n\t\n\t\t/**\n\t\t * Counter for the draws that the table does. Also used as a tracker for\n\t\t * server-side processing\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"iDraw\": 0,\n\t\n\t\t/**\n\t\t * Indicate if a redraw is being done - useful for Ajax\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bDrawing\": false,\n\t\n\t\t/**\n\t\t * Draw index (iDraw) of the last error when parsing the returned data\n\t\t *  @type int\n\t\t *  @default -1\n\t\t */\n\t\t\"iDrawError\": -1,\n\t\n\t\t/**\n\t\t * Paging display length\n\t\t *  @type int\n\t\t *  @default 10\n\t\t */\n\t\t\"_iDisplayLength\": 10,\n\t\n\t\t/**\n\t\t * Paging start point - aiDisplay index\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"_iDisplayStart\": 0,\n\t\n\t\t/**\n\t\t * Server-side processing - number of records in the result set\n\t\t * (i.e. before filtering), Use fnRecordsTotal rather than\n\t\t * this property to get the value of the number of records, regardless of\n\t\t * the server-side processing setting.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *  @private\n\t\t */\n\t\t\"_iRecordsTotal\": 0,\n\t\n\t\t/**\n\t\t * Server-side processing - number of records in the current display set\n\t\t * (i.e. after filtering). Use fnRecordsDisplay rather than\n\t\t * this property to get the value of the number of records, regardless of\n\t\t * the server-side processing setting.\n\t\t *  @type boolean\n\t\t *  @default 0\n\t\t *  @private\n\t\t */\n\t\t\"_iRecordsDisplay\": 0,\n\t\n\t\t/**\n\t\t * The classes to use for the table\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"oClasses\": {},\n\t\n\t\t/**\n\t\t * Flag attached to the settings object so you can check in the draw\n\t\t * callback if filtering has been done in the draw. Deprecated in favour of\n\t\t * events.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @deprecated\n\t\t */\n\t\t\"bFiltered\": false,\n\t\n\t\t/**\n\t\t * Flag attached to the settings object so you can check in the draw\n\t\t * callback if sorting has been done in the draw. Deprecated in favour of\n\t\t * events.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @deprecated\n\t\t */\n\t\t\"bSorted\": false,\n\t\n\t\t/**\n\t\t * Indicate that if multiple rows are in the header and there is more than\n\t\t * one unique cell per column, if the top one (true) or bottom one (false)\n\t\t * should be used for sorting / title by DataTables.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortCellsTop\": null,\n\t\n\t\t/**\n\t\t * Initialisation object that is used for the table\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oInit\": null,\n\t\n\t\t/**\n\t\t * Destroy callback functions - for plug-ins to attach themselves to the\n\t\t * destroy so they can clean up markup and events.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoDestroyCallback\": [],\n\t\n\t\n\t\t/**\n\t\t * Get the number of records in the current record set, before filtering\n\t\t *  @type function\n\t\t */\n\t\t\"fnRecordsTotal\": function ()\n\t\t{\n\t\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\t\tthis._iRecordsTotal * 1 :\n\t\t\t\tthis.aiDisplayMaster.length;\n\t\t},\n\t\n\t\t/**\n\t\t * Get the number of records in the current record set, after filtering\n\t\t *  @type function\n\t\t */\n\t\t\"fnRecordsDisplay\": function ()\n\t\t{\n\t\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\t\tthis._iRecordsDisplay * 1 :\n\t\t\t\tthis.aiDisplay.length;\n\t\t},\n\t\n\t\t/**\n\t\t * Get the display end point - aiDisplay index\n\t\t *  @type function\n\t\t */\n\t\t\"fnDisplayEnd\": function ()\n\t\t{\n\t\t\tvar\n\t\t\t\tlen      = this._iDisplayLength,\n\t\t\t\tstart    = this._iDisplayStart,\n\t\t\t\tcalc     = start + len,\n\t\t\t\trecords  = this.aiDisplay.length,\n\t\t\t\tfeatures = this.oFeatures,\n\t\t\t\tpaginate = features.bPaginate;\n\t\n\t\t\tif ( features.bServerSide ) {\n\t\t\t\treturn paginate === false || len === -1 ?\n\t\t\t\t\tstart + records :\n\t\t\t\t\tMath.min( start+len, this._iRecordsDisplay );\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn ! paginate || calc>records || len===-1 ?\n\t\t\t\t\trecords :\n\t\t\t\t\tcalc;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * The DataTables object for this table\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oInstance\": null,\n\t\n\t\t/**\n\t\t * Unique identifier for each instance of the DataTables object. If there\n\t\t * is an ID on the table node, then it takes that value, otherwise an\n\t\t * incrementing internal counter is used.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sInstance\": null,\n\t\n\t\t/**\n\t\t * tabindex attribute value that is added to DataTables control elements, allowing\n\t\t * keyboard navigation of the table and its controls.\n\t\t */\n\t\t\"iTabIndex\": 0,\n\t\n\t\t/**\n\t\t * DIV container for the footer scrolling table if scrolling\n\t\t */\n\t\t\"nScrollHead\": null,\n\t\n\t\t/**\n\t\t * DIV container for the footer scrolling table if scrolling\n\t\t */\n\t\t\"nScrollFoot\": null,\n\t\n\t\t/**\n\t\t * Last applied sort\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aLastSort\": [],\n\t\n\t\t/**\n\t\t * Stored plug-in instances\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"oPlugins\": {},\n\t\n\t\t/**\n\t\t * Function used to get a row's id from the row's data\n\t\t *  @type function\n\t\t *  @default null\n\t\t */\n\t\t\"rowIdFn\": null,\n\t\n\t\t/**\n\t\t * Data location where to store a row's id\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"rowId\": null\n\t};\n\t\n\t/**\n\t * Extension object for DataTables that is used to provide all extension\n\t * options.\n\t *\n\t * Note that the `DataTable.ext` object is available through\n\t * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n\t * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n\t *  @namespace\n\t *  @extends DataTable.models.ext\n\t */\n\t\n\t\n\t/**\n\t * DataTables extensions\n\t * \n\t * This namespace acts as a collection area for plug-ins that can be used to\n\t * extend DataTables capabilities. Indeed many of the build in methods\n\t * use this method to provide their own capabilities (sorting methods for\n\t * example).\n\t *\n\t * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n\t * reasons\n\t *\n\t *  @namespace\n\t */\n\tDataTable.ext = _ext = {\n\t\t/**\n\t\t * Buttons. For use with the Buttons extension for DataTables. This is\n\t\t * defined here so other extensions can define buttons regardless of load\n\t\t * order. It is _not_ used by DataTables core.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tbuttons: {},\n\t\n\t\n\t\t/**\n\t\t * Element class names\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tclasses: {},\n\t\n\t\n\t\t/**\n\t\t * DataTables build type (expanded by the download builder)\n\t\t *\n\t\t *  @type string\n\t\t */\n\t\tbuilder: \"-source-\",\n\t\n\t\n\t\t/**\n\t\t * Error reporting.\n\t\t * \n\t\t * How should DataTables report an error. Can take the value 'alert',\n\t\t * 'throw', 'none' or a function.\n\t\t *\n\t\t *  @type string|function\n\t\t *  @default alert\n\t\t */\n\t\terrMode: \"alert\",\n\t\n\t\n\t\t/**\n\t\t * Feature plug-ins.\n\t\t * \n\t\t * This is an array of objects which describe the feature plug-ins that are\n\t\t * available to DataTables. These feature plug-ins are then available for\n\t\t * use through the `dom` initialisation option.\n\t\t * \n\t\t * Each feature plug-in is described by an object which must have the\n\t\t * following properties:\n\t\t * \n\t\t * * `fnInit` - function that is used to initialise the plug-in,\n\t\t * * `cFeature` - a character so the feature can be enabled by the `dom`\n\t\t *   instillation option. This is case sensitive.\n\t\t *\n\t\t * The `fnInit` function has the following input parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t *\n\t\t * And the following return is expected:\n\t\t * \n\t\t * * {node|null} The element which contains your feature. Note that the\n\t\t *   return may also be void if your plug-in does not require to inject any\n\t\t *   DOM elements into DataTables control (`dom`) - for example this might\n\t\t *   be useful when developing a plug-in which allows table control via\n\t\t *   keyboard entry\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    $.fn.dataTable.ext.features.push( {\n\t\t *      \"fnInit\": function( oSettings ) {\n\t\t *        return new TableTools( { \"oDTSettings\": oSettings } );\n\t\t *      },\n\t\t *      \"cFeature\": \"T\"\n\t\t *    } );\n\t\t */\n\t\tfeature: [],\n\t\n\t\n\t\t/**\n\t\t * Row searching.\n\t\t * \n\t\t * This method of searching is complimentary to the default type based\n\t\t * searching, and a lot more comprehensive as it allows you complete control\n\t\t * over the searching logic. Each element in this array is a function\n\t\t * (parameters described below) that is called for every row in the table,\n\t\t * and your logic decides if it should be included in the searching data set\n\t\t * or not.\n\t\t *\n\t\t * Searching functions have the following input parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t * 2. `{array|object}` Data for the row to be processed (same as the\n\t\t *    original format that was passed in as the data source, or an array\n\t\t *    from a DOM data source\n\t\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n\t\t *    can be useful to retrieve the `TR` element if you need DOM interaction.\n\t\t *\n\t\t * And the following return is expected:\n\t\t *\n\t\t * * {boolean} Include the row in the searched result set (true) or not\n\t\t *   (false)\n\t\t *\n\t\t * Note that as with the main search ability in DataTables, technically this\n\t\t * is \"filtering\", since it is subtractive. However, for consistency in\n\t\t * naming we call it searching here.\n\t\t *\n\t\t *  @type array\n\t\t *  @default []\n\t\t *\n\t\t *  @example\n\t\t *    // The following example shows custom search being applied to the\n\t\t *    // fourth column (i.e. the data[3] index) based on two input values\n\t\t *    // from the end-user, matching the data in a certain range.\n\t\t *    $.fn.dataTable.ext.search.push(\n\t\t *      function( settings, data, dataIndex ) {\n\t\t *        var min = document.getElementById('min').value * 1;\n\t\t *        var max = document.getElementById('max').value * 1;\n\t\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n\t\t *\n\t\t *        if ( min == \"\" && max == \"\" ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min == \"\" && version < max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min < version && \"\" == max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min < version && version < max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        return false;\n\t\t *      }\n\t\t *    );\n\t\t */\n\t\tsearch: [],\n\t\n\t\n\t\t/**\n\t\t * Selector extensions\n\t\t *\n\t\t * The `selector` option can be used to extend the options available for the\n\t\t * selector modifier options (`selector-modifier` object data type) that\n\t\t * each of the three built in selector types offer (row, column and cell +\n\t\t * their plural counterparts). For example the Select extension uses this\n\t\t * mechanism to provide an option to select only rows, columns and cells\n\t\t * that have been marked as selected by the end user (`{selected: true}`),\n\t\t * which can be used in conjunction with the existing built in selector\n\t\t * options.\n\t\t *\n\t\t * Each property is an array to which functions can be pushed. The functions\n\t\t * take three attributes:\n\t\t *\n\t\t * * Settings object for the host table\n\t\t * * Options object (`selector-modifier` object type)\n\t\t * * Array of selected item indexes\n\t\t *\n\t\t * The return is an array of the resulting item indexes after the custom\n\t\t * selector has been applied.\n\t\t *\n\t\t *  @type object\n\t\t */\n\t\tselector: {\n\t\t\tcell: [],\n\t\t\tcolumn: [],\n\t\t\trow: []\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Internal functions, exposed for used in plug-ins.\n\t\t * \n\t\t * Please note that you should not need to use the internal methods for\n\t\t * anything other than a plug-in (and even then, try to avoid if possible).\n\t\t * The internal function may change between releases.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tinternal: {},\n\t\n\t\n\t\t/**\n\t\t * Legacy configuration options. Enable and disable legacy options that\n\t\t * are available in DataTables.\n\t\t *\n\t\t *  @type object\n\t\t */\n\t\tlegacy: {\n\t\t\t/**\n\t\t\t * Enable / disable DataTables 1.9 compatible server-side processing\n\t\t\t * requests\n\t\t\t *\n\t\t\t *  @type boolean\n\t\t\t *  @default null\n\t\t\t */\n\t\t\tajax: null\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Pagination plug-in methods.\n\t\t * \n\t\t * Each entry in this object is a function and defines which buttons should\n\t\t * be shown by the pagination rendering method that is used for the table:\n\t\t * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n\t\t * buttons are displayed in the document, while the functions here tell it\n\t\t * what buttons to display. This is done by returning an array of button\n\t\t * descriptions (what each button will do).\n\t\t *\n\t\t * Pagination types (the four built in options and any additional plug-in\n\t\t * options defined here) can be used through the `paginationType`\n\t\t * initialisation parameter.\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t\t * 1. `{int} page` The current page index\n\t\t * 2. `{int} pages` The number of pages in the table\n\t\t *\n\t\t * Each function is expected to return an array where each element of the\n\t\t * array can be one of:\n\t\t *\n\t\t * * `first` - Jump to first page when activated\n\t\t * * `last` - Jump to last page when activated\n\t\t * * `previous` - Show previous page when activated\n\t\t * * `next` - Show next page when activated\n\t\t * * `{int}` - Show page of the index given\n\t\t * * `{array}` - A nested array containing the above elements to add a\n\t\t *   containing 'DIV' element (might be useful for styling).\n\t\t *\n\t\t * Note that DataTables v1.9- used this object slightly differently whereby\n\t\t * an object with two functions would be defined for each plug-in. That\n\t\t * ability is still supported by DataTables 1.10+ to provide backwards\n\t\t * compatibility, but this option of use is now decremented and no longer\n\t\t * documented in DataTables 1.10+.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    // Show previous, next and current page buttons only\n\t\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n\t\t *      return [ 'previous', page, 'next' ];\n\t\t *    };\n\t\t */\n\t\tpager: {},\n\t\n\t\n\t\trenderer: {\n\t\t\tpageButton: {},\n\t\t\theader: {}\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Ordering plug-ins - custom data source\n\t\t * \n\t\t * The extension options for ordering of data available here is complimentary\n\t\t * to the default type based ordering that DataTables typically uses. It\n\t\t * allows much greater control over the the data that is being used to\n\t\t * order a column, but is necessarily therefore more complex.\n\t\t * \n\t\t * This type of ordering is useful if you want to do ordering based on data\n\t\t * live from the DOM (for example the contents of an 'input' element) rather\n\t\t * than just the static string that DataTables knows of.\n\t\t * \n\t\t * The way these plug-ins work is that you create an array of the values you\n\t\t * wish to be ordering for the column in question and then return that\n\t\t * array. The data in the array much be in the index order of the rows in\n\t\t * the table (not the currently ordering order!). Which order data gathering\n\t\t * function is run here depends on the `dt-init columns.orderDataType`\n\t\t * parameter that is used for the column (if any).\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t * 2. `{int}` Target column index\n\t\t *\n\t\t * Each function is expected to return an array:\n\t\t *\n\t\t * * `{array}` Data for the column to be ordering upon\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    // Ordering using `input` node values\n\t\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n\t\t *    {\n\t\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n\t\t *        return $('input', td).val();\n\t\t *      } );\n\t\t *    }\n\t\t */\n\t\torder: {},\n\t\n\t\n\t\t/**\n\t\t * Type based plug-ins.\n\t\t *\n\t\t * Each column in DataTables has a type assigned to it, either by automatic\n\t\t * detection or by direct assignment using the `type` option for the column.\n\t\t * The type of a column will effect how it is ordering and search (plug-ins\n\t\t * can also make use of the column type if required).\n\t\t *\n\t\t * @namespace\n\t\t */\n\t\ttype: {\n\t\t\t/**\n\t\t\t * Type detection functions.\n\t\t\t *\n\t\t\t * The functions defined in this object are used to automatically detect\n\t\t\t * a column's type, making initialisation of DataTables super easy, even\n\t\t\t * when complex data is in the table.\n\t\t\t *\n\t\t\t * The functions defined take two parameters:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be analysed\n\t\t     *  2. `{settings}` DataTables settings object. This can be used to\n\t\t     *     perform context specific type detection - for example detection\n\t\t     *     based on language settings such as using a comma for a decimal\n\t\t     *     place. Generally speaking the options from the settings will not\n\t\t     *     be required\n\t\t\t *\n\t\t\t * Each function is expected to return:\n\t\t\t *\n\t\t\t * * `{string|null}` Data type detected, or null if unknown (and thus\n\t\t\t *   pass it on to the other type detection functions.\n\t\t\t *\n\t\t\t *  @type array\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Currency type detection plug-in:\n\t\t\t *    $.fn.dataTable.ext.type.detect.push(\n\t\t\t *      function ( data, settings ) {\n\t\t\t *        // Check the numeric part\n\t\t\t *        if ( ! data.substring(1).match(/[0-9]/) ) {\n\t\t\t *          return null;\n\t\t\t *        }\n\t\t\t *\n\t\t\t *        // Check prefixed by currency\n\t\t\t *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n\t\t\t *          return 'currency';\n\t\t\t *        }\n\t\t\t *        return null;\n\t\t\t *      }\n\t\t\t *    );\n\t\t\t */\n\t\t\tdetect: [],\n\t\n\t\n\t\t\t/**\n\t\t\t * Type based search formatting.\n\t\t\t *\n\t\t\t * The type based searching functions can be used to pre-format the\n\t\t\t * data to be search on. For example, it can be used to strip HTML\n\t\t\t * tags or to de-format telephone numbers for numeric only searching.\n\t\t\t *\n\t\t\t * Note that is a search is not defined for a column of a given type,\n\t\t\t * no search formatting will be performed.\n\t\t\t * \n\t\t\t * Pre-processing of searching data plug-ins - When you assign the sType\n\t\t\t * for a column (or have it automatically detected for you by DataTables\n\t\t\t * or a type detection plug-in), you will typically be using this for\n\t\t\t * custom sorting, but it can also be used to provide custom searching\n\t\t\t * by allowing you to pre-processing the data and returning the data in\n\t\t\t * the format that should be searched upon. This is done by adding\n\t\t\t * functions this object with a parameter name which matches the sType\n\t\t\t * for that target column. This is the corollary of <i>afnSortData</i>\n\t\t\t * for searching data.\n\t\t\t *\n\t\t\t * The functions defined take a single parameter:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be prepared for searching\n\t\t\t *\n\t\t\t * Each function is expected to return:\n\t\t\t *\n\t\t\t * * `{string|null}` Formatted string that will be used for the searching.\n\t\t\t *\n\t\t\t *  @type object\n\t\t\t *  @default {}\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n\t\t\t *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n\t\t\t *    }\n\t\t\t */\n\t\t\tsearch: {},\n\t\n\t\n\t\t\t/**\n\t\t\t * Type based ordering.\n\t\t\t *\n\t\t\t * The column type tells DataTables what ordering to apply to the table\n\t\t\t * when a column is sorted upon. The order for each type that is defined,\n\t\t\t * is defined by the functions available in this object.\n\t\t\t *\n\t\t\t * Each ordering option can be described by three properties added to\n\t\t\t * this object:\n\t\t\t *\n\t\t\t * * `{type}-pre` - Pre-formatting function\n\t\t\t * * `{type}-asc` - Ascending order function\n\t\t\t * * `{type}-desc` - Descending order function\n\t\t\t *\n\t\t\t * All three can be used together, only `{type}-pre` or only\n\t\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended\n\t\t\t * that only `{type}-pre` is used, as this provides the optimal\n\t\t\t * implementation in terms of speed, although the others are provided\n\t\t\t * for compatibility with existing Javascript sort functions.\n\t\t\t *\n\t\t\t * `{type}-pre`: Functions defined take a single parameter:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be prepared for ordering\n\t\t\t *\n\t\t\t * And return:\n\t\t\t *\n\t\t\t * * `{*}` Data to be sorted upon\n\t\t\t *\n\t\t\t * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n\t\t\t * functions, taking two parameters:\n\t\t\t *\n\t\t     *  1. `{*}` Data to compare to the second parameter\n\t\t     *  2. `{*}` Data to compare to the first parameter\n\t\t\t *\n\t\t\t * And returning:\n\t\t\t *\n\t\t\t * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n\t\t\t *   than the second parameter, ===0 if the two parameters are equal and\n\t\t\t *   >0 if the first parameter should be sorted height than the second\n\t\t\t *   parameter.\n\t\t\t * \n\t\t\t *  @type object\n\t\t\t *  @default {}\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Numeric ordering of formatted numbers with a pre-formatter\n\t\t\t *    $.extend( $.fn.dataTable.ext.type.order, {\n\t\t\t *      \"string-pre\": function(x) {\n\t\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n\t\t\t *        return parseFloat( a );\n\t\t\t *      }\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Case-sensitive string ordering, with no pre-formatting method\n\t\t\t *    $.extend( $.fn.dataTable.ext.order, {\n\t\t\t *      \"string-case-asc\": function(x,y) {\n\t\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t\t *      },\n\t\t\t *      \"string-case-desc\": function(x,y) {\n\t\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t\t *      }\n\t\t\t *    } );\n\t\t\t */\n\t\t\torder: {}\n\t\t},\n\t\n\t\t/**\n\t\t * Unique DataTables instance counter\n\t\t *\n\t\t * @type int\n\t\t * @private\n\t\t */\n\t\t_unique: 0,\n\t\n\t\n\t\t//\n\t\t// Depreciated\n\t\t// The following properties are retained for backwards compatibility only.\n\t\t// The should not be used in new projects and will be removed in a future\n\t\t// version\n\t\t//\n\t\n\t\t/**\n\t\t * Version check function.\n\t\t *  @type function\n\t\t *  @depreciated Since 1.10\n\t\t */\n\t\tfnVersionCheck: DataTable.fnVersionCheck,\n\t\n\t\n\t\t/**\n\t\t * Index for what 'this' index API functions should use\n\t\t *  @type int\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\tiApiIndex: 0,\n\t\n\t\n\t\t/**\n\t\t * jQuery UI class container\n\t\t *  @type object\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\toJUIClasses: {},\n\t\n\t\n\t\t/**\n\t\t * Software version\n\t\t *  @type string\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\tsVersion: DataTable.version\n\t};\n\t\n\t\n\t//\n\t// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n\t//\n\t$.extend( _ext, {\n\t\tafnFiltering: _ext.search,\n\t\taTypes:       _ext.type.detect,\n\t\tofnSearch:    _ext.type.search,\n\t\toSort:        _ext.type.order,\n\t\tafnSortData:  _ext.order,\n\t\taoFeatures:   _ext.feature,\n\t\toApi:         _ext.internal,\n\t\toStdClasses:  _ext.classes,\n\t\toPagination:  _ext.pager\n\t} );\n\t\n\t\n\t$.extend( DataTable.ext.classes, {\n\t\t\"sTable\": \"dataTable\",\n\t\t\"sNoFooter\": \"no-footer\",\n\t\n\t\t/* Paging buttons */\n\t\t\"sPageButton\": \"paginate_button\",\n\t\t\"sPageButtonActive\": \"current\",\n\t\t\"sPageButtonDisabled\": \"disabled\",\n\t\n\t\t/* Striping classes */\n\t\t\"sStripeOdd\": \"odd\",\n\t\t\"sStripeEven\": \"even\",\n\t\n\t\t/* Empty row */\n\t\t\"sRowEmpty\": \"dataTables_empty\",\n\t\n\t\t/* Features */\n\t\t\"sWrapper\": \"dataTables_wrapper\",\n\t\t\"sFilter\": \"dataTables_filter\",\n\t\t\"sInfo\": \"dataTables_info\",\n\t\t\"sPaging\": \"dataTables_paginate paging_\", /* Note that the type is postfixed */\n\t\t\"sLength\": \"dataTables_length\",\n\t\t\"sProcessing\": \"dataTables_processing\",\n\t\n\t\t/* Sorting */\n\t\t\"sSortAsc\": \"sorting_asc\",\n\t\t\"sSortDesc\": \"sorting_desc\",\n\t\t\"sSortable\": \"sorting\", /* Sortable in both directions */\n\t\t\"sSortableAsc\": \"sorting_desc_disabled\",\n\t\t\"sSortableDesc\": \"sorting_asc_disabled\",\n\t\t\"sSortableNone\": \"sorting_disabled\",\n\t\t\"sSortColumn\": \"sorting_\", /* Note that an int is postfixed for the sorting order */\n\t\n\t\t/* Filtering */\n\t\t\"sFilterInput\": \"\",\n\t\n\t\t/* Page length */\n\t\t\"sLengthSelect\": \"\",\n\t\n\t\t/* Scrolling */\n\t\t\"sScrollWrapper\": \"dataTables_scroll\",\n\t\t\"sScrollHead\": \"dataTables_scrollHead\",\n\t\t\"sScrollHeadInner\": \"dataTables_scrollHeadInner\",\n\t\t\"sScrollBody\": \"dataTables_scrollBody\",\n\t\t\"sScrollFoot\": \"dataTables_scrollFoot\",\n\t\t\"sScrollFootInner\": \"dataTables_scrollFootInner\",\n\t\n\t\t/* Misc */\n\t\t\"sHeaderTH\": \"\",\n\t\t\"sFooterTH\": \"\",\n\t\n\t\t// Deprecated\n\t\t\"sSortJUIAsc\": \"\",\n\t\t\"sSortJUIDesc\": \"\",\n\t\t\"sSortJUI\": \"\",\n\t\t\"sSortJUIAscAllowed\": \"\",\n\t\t\"sSortJUIDescAllowed\": \"\",\n\t\t\"sSortJUIWrapper\": \"\",\n\t\t\"sSortIcon\": \"\",\n\t\t\"sJUIHeader\": \"\",\n\t\t\"sJUIFooter\": \"\"\n\t} );\n\t\n\t\n\tvar extPagination = DataTable.ext.pager;\n\t\n\tfunction _numbers ( page, pages ) {\n\t\tvar\n\t\t\tnumbers = [],\n\t\t\tbuttons = extPagination.numbers_length,\n\t\t\thalf = Math.floor( buttons / 2 ),\n\t\t\ti = 1;\n\t\n\t\tif ( pages <= buttons ) {\n\t\t\tnumbers = _range( 0, pages );\n\t\t}\n\t\telse if ( page <= half ) {\n\t\t\tnumbers = _range( 0, buttons-2 );\n\t\t\tnumbers.push( 'ellipsis' );\n\t\t\tnumbers.push( pages-1 );\n\t\t}\n\t\telse if ( page >= pages - 1 - half ) {\n\t\t\tnumbers = _range( pages-(buttons-2), pages );\n\t\t\tnumbers.splice( 0, 0, 'ellipsis' ); // no unshift in ie6\n\t\t\tnumbers.splice( 0, 0, 0 );\n\t\t}\n\t\telse {\n\t\t\tnumbers = _range( page-half+2, page+half-1 );\n\t\t\tnumbers.push( 'ellipsis' );\n\t\t\tnumbers.push( pages-1 );\n\t\t\tnumbers.splice( 0, 0, 'ellipsis' );\n\t\t\tnumbers.splice( 0, 0, 0 );\n\t\t}\n\t\n\t\tnumbers.DT_el = 'span';\n\t\treturn numbers;\n\t}\n\t\n\t\n\t$.extend( extPagination, {\n\t\tsimple: function ( page, pages ) {\n\t\t\treturn [ 'previous', 'next' ];\n\t\t},\n\t\n\t\tfull: function ( page, pages ) {\n\t\t\treturn [  'first', 'previous', 'next', 'last' ];\n\t\t},\n\t\n\t\tnumbers: function ( page, pages ) {\n\t\t\treturn [ _numbers(page, pages) ];\n\t\t},\n\t\n\t\tsimple_numbers: function ( page, pages ) {\n\t\t\treturn [ 'previous', _numbers(page, pages), 'next' ];\n\t\t},\n\t\n\t\tfull_numbers: function ( page, pages ) {\n\t\t\treturn [ 'first', 'previous', _numbers(page, pages), 'next', 'last' ];\n\t\t},\n\t\t\n\t\tfirst_last_numbers: function (page, pages) {\n\t \t\treturn ['first', _numbers(page, pages), 'last'];\n\t \t},\n\t\n\t\t// For testing and plug-ins to use\n\t\t_numbers: _numbers,\n\t\n\t\t// Number of number buttons (including ellipsis) to show. _Must be odd!_\n\t\tnumbers_length: 7\n\t} );\n\t\n\t\n\t$.extend( true, DataTable.ext.renderer, {\n\t\tpageButton: {\n\t\t\t_: function ( settings, host, idx, buttons, page, pages ) {\n\t\t\t\tvar classes = settings.oClasses;\n\t\t\t\tvar lang = settings.oLanguage.oPaginate;\n\t\t\t\tvar aria = settings.oLanguage.oAria.paginate || {};\n\t\t\t\tvar btnDisplay, btnClass;\n\t\n\t\t\t\tvar attach = function( container, buttons ) {\n\t\t\t\t\tvar i, ien, node, button, tabIndex;\n\t\t\t\t\tvar disabledClass = classes.sPageButtonDisabled;\n\t\t\t\t\tvar clickHandler = function ( e ) {\n\t\t\t\t\t\t_fnPageChange( settings, e.data.action, true );\n\t\t\t\t\t};\n\t\n\t\t\t\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\t\t\t\tbutton = buttons[i];\n\t\n\t\t\t\t\t\tif ( Array.isArray( button ) ) {\n\t\t\t\t\t\t\tvar inner = $( '<'+(button.DT_el || 'div')+'/>' )\n\t\t\t\t\t\t\t\t.appendTo( container );\n\t\t\t\t\t\t\tattach( inner, button );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbtnDisplay = null;\n\t\t\t\t\t\t\tbtnClass = button;\n\t\t\t\t\t\t\ttabIndex = settings.iTabIndex;\n\t\n\t\t\t\t\t\t\tswitch ( button ) {\n\t\t\t\t\t\t\t\tcase 'ellipsis':\n\t\t\t\t\t\t\t\t\tcontainer.append('<span class=\"ellipsis\">&#x2026;</span>');\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'first':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sFirst;\n\t\n\t\t\t\t\t\t\t\t\tif ( page === 0 ) {\n\t\t\t\t\t\t\t\t\t\ttabIndex = -1;\n\t\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'previous':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sPrevious;\n\t\n\t\t\t\t\t\t\t\t\tif ( page === 0 ) {\n\t\t\t\t\t\t\t\t\t\ttabIndex = -1;\n\t\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'next':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sNext;\n\t\n\t\t\t\t\t\t\t\t\tif ( pages === 0 || page === pages-1 ) {\n\t\t\t\t\t\t\t\t\t\ttabIndex = -1;\n\t\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'last':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sLast;\n\t\n\t\t\t\t\t\t\t\t\tif ( pages === 0 || page === pages-1 ) {\n\t\t\t\t\t\t\t\t\t\ttabIndex = -1;\n\t\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tbtnDisplay = settings.fnFormatNumber( button + 1 );\n\t\t\t\t\t\t\t\t\tbtnClass = page === button ?\n\t\t\t\t\t\t\t\t\t\tclasses.sPageButtonActive : '';\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tif ( btnDisplay !== null ) {\n\t\t\t\t\t\t\t\tvar tag = settings.oInit.pagingTag || 'a';\n\t\t\t\t\t\t\t\tvar disabled = btnClass.indexOf(disabledClass) !== -1;\n\t\t\t\n\t\n\t\t\t\t\t\t\t\tnode = $('<'+tag+'>', {\n\t\t\t\t\t\t\t\t\t\t'class': classes.sPageButton+' '+btnClass,\n\t\t\t\t\t\t\t\t\t\t'aria-controls': settings.sTableId,\n\t\t\t\t\t\t\t\t\t\t'aria-disabled': disabled ? 'true' : null,\n\t\t\t\t\t\t\t\t\t\t'aria-label': aria[ button ],\n\t\t\t\t\t\t\t\t\t\t'aria-role': 'link',\n\t\t\t\t\t\t\t\t\t\t'aria-current': btnClass === classes.sPageButtonActive ? 'page' : null,\n\t\t\t\t\t\t\t\t\t\t'data-dt-idx': button,\n\t\t\t\t\t\t\t\t\t\t'tabindex': tabIndex,\n\t\t\t\t\t\t\t\t\t\t'id': idx === 0 && typeof button === 'string' ?\n\t\t\t\t\t\t\t\t\t\t\tsettings.sTableId +'_'+ button :\n\t\t\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t\t.html( btnDisplay )\n\t\t\t\t\t\t\t\t\t.appendTo( container );\n\t\n\t\t\t\t\t\t\t\t_fnBindAction(\n\t\t\t\t\t\t\t\t\tnode, {action: button}, clickHandler\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t\t// inside an iframe or frame. Try / catch the error. Not good for\n\t\t\t\t// accessibility, but neither are frames.\n\t\t\t\tvar activeEl;\n\t\n\t\t\t\ttry {\n\t\t\t\t\t// Because this approach is destroying and recreating the paging\n\t\t\t\t\t// elements, focus is lost on the select button which is bad for\n\t\t\t\t\t// accessibility. So we want to restore focus once the draw has\n\t\t\t\t\t// completed\n\t\t\t\t\tactiveEl = $(host).find(document.activeElement).data('dt-idx');\n\t\t\t\t}\n\t\t\t\tcatch (e) {}\n\t\n\t\t\t\tattach( $(host).empty(), buttons );\n\t\n\t\t\t\tif ( activeEl !== undefined ) {\n\t\t\t\t\t$(host).find( '[data-dt-idx='+activeEl+']' ).trigger('focus');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t\n\t\n\t// Built in type detection. See model.ext.aTypes for information about\n\t// what is required from this methods.\n\t$.extend( DataTable.ext.type.detect, [\n\t\t// Plain numbers - first since V8 detects some plain numbers as dates\n\t\t// e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal ) ? 'num'+decimal : null;\n\t\t},\n\t\n\t\t// Dates (only those recognised by the browser's Date.parse)\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\t// V8 tries _very_ hard to make a string passed into `Date.parse()`\n\t\t\t// valid, so we need to use a regex to restrict date formats. Use a\n\t\t\t// plug-in for anything other than ISO8601 style strings\n\t\t\tif ( d && !(d instanceof Date) && ! _re_date.test(d) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar parsed = Date.parse(d);\n\t\t\treturn (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;\n\t\t},\n\t\n\t\t// Formatted numbers\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal, true ) ? 'num-fmt'+decimal : null;\n\t\t},\n\t\n\t\t// HTML numeric\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal ) ? 'html-num'+decimal : null;\n\t\t},\n\t\n\t\t// HTML numeric, formatted\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal, true ) ? 'html-num-fmt'+decimal : null;\n\t\t},\n\t\n\t\t// HTML (this is strict checking - there must be html)\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\treturn _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1) ?\n\t\t\t\t'html' : null;\n\t\t}\n\t] );\n\t\n\t\n\t\n\t// Filter formatting functions. See model.ext.ofnSearch for information about\n\t// what is required from these methods.\n\t// \n\t// Note that additional search methods are added for the html numbers and\n\t// html formatted numbers by `_addNumericSort()` when we know what the decimal\n\t// place is\n\t\n\t\n\t$.extend( DataTable.ext.type.search, {\n\t\thtml: function ( data ) {\n\t\t\treturn _empty(data) ?\n\t\t\t\tdata :\n\t\t\t\ttypeof data === 'string' ?\n\t\t\t\t\tdata\n\t\t\t\t\t\t.replace( _re_new_lines, \" \" )\n\t\t\t\t\t\t.replace( _re_html, \"\" ) :\n\t\t\t\t\t'';\n\t\t},\n\t\n\t\tstring: function ( data ) {\n\t\t\treturn _empty(data) ?\n\t\t\t\tdata :\n\t\t\t\ttypeof data === 'string' ?\n\t\t\t\t\tdata.replace( _re_new_lines, \" \" ) :\n\t\t\t\t\tdata;\n\t\t}\n\t} );\n\t\n\t\n\t\n\tvar __numericReplace = function ( d, decimalPlace, re1, re2 ) {\n\t\tif ( d !== 0 && (!d || d === '-') ) {\n\t\t\treturn -Infinity;\n\t\t}\n\t\t\n\t\tlet type = typeof d;\n\t\n\t\tif (type === 'number' || type === 'bigint') {\n\t\t\treturn d;\n\t\t}\n\t\n\t\t// If a decimal place other than `.` is used, it needs to be given to the\n\t\t// function so we can detect it and replace with a `.` which is the only\n\t\t// decimal place Javascript recognises - it is not locale aware.\n\t\tif ( decimalPlace ) {\n\t\t\td = _numToDecimal( d, decimalPlace );\n\t\t}\n\t\n\t\tif ( d.replace ) {\n\t\t\tif ( re1 ) {\n\t\t\t\td = d.replace( re1, '' );\n\t\t\t}\n\t\n\t\t\tif ( re2 ) {\n\t\t\t\td = d.replace( re2, '' );\n\t\t\t}\n\t\t}\n\t\n\t\treturn d * 1;\n\t};\n\t\n\t\n\t// Add the numeric 'deformatting' functions for sorting and search. This is done\n\t// in a function to provide an easy ability for the language options to add\n\t// additional methods if a non-period decimal place is used.\n\tfunction _addNumericSort ( decimalPlace ) {\n\t\t$.each(\n\t\t\t{\n\t\t\t\t// Plain numbers\n\t\t\t\t\"num\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace );\n\t\t\t\t},\n\t\n\t\t\t\t// Formatted numbers\n\t\t\t\t\"num-fmt\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace, _re_formatted_numeric );\n\t\t\t\t},\n\t\n\t\t\t\t// HTML numeric\n\t\t\t\t\"html-num\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html );\n\t\t\t\t},\n\t\n\t\t\t\t// HTML numeric, formatted\n\t\t\t\t\"html-num-fmt\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html, _re_formatted_numeric );\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction ( key, fn ) {\n\t\t\t\t// Add the ordering method\n\t\t\t\t_ext.type.order[ key+decimalPlace+'-pre' ] = fn;\n\t\n\t\t\t\t// For HTML types add a search formatter that will strip the HTML\n\t\t\t\tif ( key.match(/^html\\-/) ) {\n\t\t\t\t\t_ext.type.search[ key+decimalPlace ] = _ext.type.search.html;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\t\n\t\n\t// Default sort methods\n\t$.extend( _ext.type.order, {\n\t\t// Dates\n\t\t\"date-pre\": function ( d ) {\n\t\t\tvar ts = Date.parse( d );\n\t\t\treturn isNaN(ts) ? -Infinity : ts;\n\t\t},\n\t\n\t\t// html\n\t\t\"html-pre\": function ( a ) {\n\t\t\treturn _empty(a) ?\n\t\t\t\t'' :\n\t\t\t\ta.replace ?\n\t\t\t\t\ta.replace( /<.*?>/g, \"\" ).toLowerCase() :\n\t\t\t\t\ta+'';\n\t\t},\n\t\n\t\t// string\n\t\t\"string-pre\": function ( a ) {\n\t\t\t// This is a little complex, but faster than always calling toString,\n\t\t\t// http://jsperf.com/tostring-v-check\n\t\t\treturn _empty(a) ?\n\t\t\t\t'' :\n\t\t\t\ttypeof a === 'string' ?\n\t\t\t\t\ta.toLowerCase() :\n\t\t\t\t\t! a.toString ?\n\t\t\t\t\t\t'' :\n\t\t\t\t\t\ta.toString();\n\t\t},\n\t\n\t\t// string-asc and -desc are retained only for compatibility with the old\n\t\t// sort methods\n\t\t\"string-asc\": function ( x, y ) {\n\t\t\treturn ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t},\n\t\n\t\t\"string-desc\": function ( x, y ) {\n\t\t\treturn ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t}\n\t} );\n\t\n\t\n\t// Numeric sorting types - order doesn't matter here\n\t_addNumericSort( '' );\n\t\n\t\n\t$.extend( true, DataTable.ext.renderer, {\n\t\theader: {\n\t\t\t_: function ( settings, cell, column, classes ) {\n\t\t\t\t// No additional mark-up required\n\t\t\t\t// Attach a sort listener to update on sort - note that using the\n\t\t\t\t// `DT` namespace will allow the event to be removed automatically\n\t\t\t\t// on destroy, while the `dt` namespaced event is the one we are\n\t\t\t\t// listening for\n\t\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\n\t\t\t\t\tif ( settings !== ctx ) { // need to check this this is the host\n\t\t\t\t\t\treturn;               // table, not a nested one\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar colIdx = column.idx;\n\t\n\t\t\t\t\tcell\n\t\t\t\t\t\t.removeClass(\n\t\t\t\t\t\t\tclasses.sSortAsc +' '+\n\t\t\t\t\t\t\tclasses.sSortDesc\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t},\n\t\n\t\t\tjqueryui: function ( settings, cell, column, classes ) {\n\t\t\t\t$('<div/>')\n\t\t\t\t\t.addClass( classes.sSortJUIWrapper )\n\t\t\t\t\t.append( cell.contents() )\n\t\t\t\t\t.append( $('<span/>')\n\t\t\t\t\t\t.addClass( classes.sSortIcon+' '+column.sSortingClassJUI )\n\t\t\t\t\t)\n\t\t\t\t\t.appendTo( cell );\n\t\n\t\t\t\t// Attach a sort listener to update on sort\n\t\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\n\t\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar colIdx = column.idx;\n\t\n\t\t\t\t\tcell\n\t\t\t\t\t\t.removeClass( classes.sSortAsc +\" \"+classes.sSortDesc )\n\t\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t\t);\n\t\n\t\t\t\t\tcell\n\t\t\t\t\t\t.find( 'span.'+classes.sSortIcon )\n\t\t\t\t\t\t.removeClass(\n\t\t\t\t\t\t\tclasses.sSortJUIAsc +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUIDesc +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUI +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUIAscAllowed +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUIDescAllowed\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortJUIAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortJUIDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClassJUI\n\t\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t/*\n\t * Public helper functions. These aren't used internally by DataTables, or\n\t * called by any of the options passed into DataTables, but they can be used\n\t * externally by developers working with DataTables. They are helper functions\n\t * to make working with DataTables a little bit easier.\n\t */\n\t\n\tvar __htmlEscapeEntities = function ( d ) {\n\t\tif (Array.isArray(d)) {\n\t\t\td = d.join(',');\n\t\t}\n\t\n\t\treturn typeof d === 'string' ?\n\t\t\td\n\t\t\t\t.replace(/&/g, '&amp;')\n\t\t\t\t.replace(/</g, '&lt;')\n\t\t\t\t.replace(/>/g, '&gt;')\n\t\t\t\t.replace(/\"/g, '&quot;') :\n\t\t\td;\n\t};\n\t\n\t// Common logic for moment, luxon or a date action\n\tfunction __mld( dt, momentFn, luxonFn, dateFn, arg1 ) {\n\t\tif (window.moment) {\n\t\t\treturn dt[momentFn]( arg1 );\n\t\t}\n\t\telse if (window.luxon) {\n\t\t\treturn dt[luxonFn]( arg1 );\n\t\t}\n\t\t\n\t\treturn dateFn ? dt[dateFn]( arg1 ) : dt;\n\t}\n\t\n\t\n\tvar __mlWarning = false;\n\tfunction __mldObj (d, format, locale) {\n\t\tvar dt;\n\t\n\t\tif (window.moment) {\n\t\t\tdt = window.moment.utc( d, format, locale, true );\n\t\n\t\t\tif (! dt.isValid()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\telse if (window.luxon) {\n\t\t\tdt = format && typeof d === 'string'\n\t\t\t\t? window.luxon.DateTime.fromFormat( d, format )\n\t\t\t\t: window.luxon.DateTime.fromISO( d );\n\t\n\t\t\tif (! dt.isValid) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\n\t\t\tdt.setLocale(locale);\n\t\t}\n\t\telse if (! format) {\n\t\t\t// No format given, must be ISO\n\t\t\tdt = new Date(d);\n\t\t}\n\t\telse {\n\t\t\tif (! __mlWarning) {\n\t\t\t\talert('DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17');\n\t\t\t}\n\t\n\t\t\t__mlWarning = true;\n\t\t}\n\t\n\t\treturn dt;\n\t}\n\t\n\t// Wrapper for date, datetime and time which all operate the same way with the exception of\n\t// the output string for auto locale support\n\tfunction __mlHelper (localeString) {\n\t\treturn function ( from, to, locale, def ) {\n\t\t\t// Luxon and Moment support\n\t\t\t// Argument shifting\n\t\t\tif ( arguments.length === 0 ) {\n\t\t\t\tlocale = 'en';\n\t\t\t\tto = null; // means toLocaleString\n\t\t\t\tfrom = null; // means iso8601\n\t\t\t}\n\t\t\telse if ( arguments.length === 1 ) {\n\t\t\t\tlocale = 'en';\n\t\t\t\tto = from;\n\t\t\t\tfrom = null;\n\t\t\t}\n\t\t\telse if ( arguments.length === 2 ) {\n\t\t\t\tlocale = to;\n\t\t\t\tto = from;\n\t\t\t\tfrom = null;\n\t\t\t}\n\t\n\t\t\tvar typeName = 'datetime-' + to;\n\t\n\t\t\t// Add type detection and sorting specific to this date format - we need to be able to identify\n\t\t\t// date type columns as such, rather than as numbers in extensions. Hence the need for this.\n\t\t\tif (! DataTable.ext.type.order[typeName]) {\n\t\t\t\t// The renderer will give the value to type detect as the type!\n\t\t\t\tDataTable.ext.type.detect.unshift(function (d) {\n\t\t\t\t\treturn d === typeName ? typeName : false;\n\t\t\t\t});\n\t\n\t\t\t\t// The renderer gives us Moment, Luxon or Date obects for the sorting, all of which have a\n\t\t\t\t// `valueOf` which gives milliseconds epoch\n\t\t\t\tDataTable.ext.type.order[typeName + '-asc'] = function (a, b) {\n\t\t\t\t\tvar x = a.valueOf();\n\t\t\t\t\tvar y = b.valueOf();\n\t\n\t\t\t\t\treturn x === y\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: x < y\n\t\t\t\t\t\t\t? -1\n\t\t\t\t\t\t\t: 1;\n\t\t\t\t}\n\t\n\t\t\t\tDataTable.ext.type.order[typeName + '-desc'] = function (a, b) {\n\t\t\t\t\tvar x = a.valueOf();\n\t\t\t\t\tvar y = b.valueOf();\n\t\n\t\t\t\t\treturn x === y\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: x > y\n\t\t\t\t\t\t\t? -1\n\t\t\t\t\t\t\t: 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\treturn function ( d, type ) {\n\t\t\t\t// Allow for a default value\n\t\t\t\tif (d === null || d === undefined) {\n\t\t\t\t\tif (def === '--now') {\n\t\t\t\t\t\t// We treat everything as UTC further down, so no changes are\n\t\t\t\t\t\t// made, as such need to get the local date / time as if it were\n\t\t\t\t\t\t// UTC\n\t\t\t\t\t\tvar local = new Date();\n\t\t\t\t\t\td = new Date( Date.UTC(\n\t\t\t\t\t\t\tlocal.getFullYear(), local.getMonth(), local.getDate(),\n\t\t\t\t\t\t\tlocal.getHours(), local.getMinutes(), local.getSeconds()\n\t\t\t\t\t\t) );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\td = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tif (type === 'type') {\n\t\t\t\t\t// Typing uses the type name for fast matching\n\t\t\t\t\treturn typeName;\n\t\t\t\t}\n\t\n\t\t\t\tif (d === '') {\n\t\t\t\t\treturn type !== 'sort'\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: __mldObj('0000-01-01 00:00:00', null, locale);\n\t\t\t\t}\n\t\n\t\t\t\t// Shortcut. If `from` and `to` are the same, we are using the renderer to\n\t\t\t\t// format for ordering, not display - its already in the display format.\n\t\t\t\tif ( to !== null && from === to && type !== 'sort' && type !== 'type' && ! (d instanceof Date) ) {\n\t\t\t\t\treturn d;\n\t\t\t\t}\n\t\n\t\t\t\tvar dt = __mldObj(d, from, locale);\n\t\n\t\t\t\tif (dt === null) {\n\t\t\t\t\treturn d;\n\t\t\t\t}\n\t\n\t\t\t\tif (type === 'sort') {\n\t\t\t\t\treturn dt;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar formatted = to === null\n\t\t\t\t\t? __mld(dt, 'toDate', 'toJSDate', '')[localeString]()\n\t\t\t\t\t: __mld(dt, 'format', 'toFormat', 'toISOString', to);\n\t\n\t\t\t\t// XSS protection\n\t\t\t\treturn type === 'display' ?\n\t\t\t\t\t__htmlEscapeEntities( formatted ) :\n\t\t\t\t\tformatted;\n\t\t\t};\n\t\t}\n\t}\n\t\n\t// Based on locale, determine standard number formatting\n\t// Fallback for legacy browsers is US English\n\tvar __thousands = ',';\n\tvar __decimal = '.';\n\t\n\tif (Intl) {\n\t\ttry {\n\t\t\tvar num = new Intl.NumberFormat().formatToParts(100000.1);\n\t\t\n\t\t\tfor (var i=0 ; i<num.length ; i++) {\n\t\t\t\tif (num[i].type === 'group') {\n\t\t\t\t\t__thousands = num[i].value;\n\t\t\t\t}\n\t\t\t\telse if (num[i].type === 'decimal') {\n\t\t\t\t\t__decimal = num[i].value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (e) {\n\t\t\t// noop\n\t\t}\n\t}\n\t\n\t// Formatted date time detection - use by declaring the formats you are going to use\n\tDataTable.datetime = function ( format, locale ) {\n\t\tvar typeName = 'datetime-detect-' + format;\n\t\n\t\tif (! locale) {\n\t\t\tlocale = 'en';\n\t\t}\n\t\n\t\tif (! DataTable.ext.type.order[typeName]) {\n\t\t\tDataTable.ext.type.detect.unshift(function (d) {\n\t\t\t\tvar dt = __mldObj(d, format, locale);\n\t\t\t\treturn d === '' || dt ? typeName : false;\n\t\t\t});\n\t\n\t\t\tDataTable.ext.type.order[typeName + '-pre'] = function (d) {\n\t\t\t\treturn __mldObj(d, format, locale) || 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * Helpers for `columns.render`.\n\t *\n\t * The options defined here can be used with the `columns.render` initialisation\n\t * option to provide a display renderer. The following functions are defined:\n\t *\n\t * * `number` - Will format numeric data (defined by `columns.data`) for\n\t *   display, retaining the original unformatted data for sorting and filtering.\n\t *   It takes 5 parameters:\n\t *   * `string` - Thousands grouping separator\n\t *   * `string` - Decimal point indicator\n\t *   * `integer` - Number of decimal points to show\n\t *   * `string` (optional) - Prefix.\n\t *   * `string` (optional) - Postfix (/suffix).\n\t * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\n\t *   parameters.\n\t *\n\t * @example\n\t *   // Column definition using the number renderer\n\t *   {\n\t *     data: \"salary\",\n\t *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n\t *   }\n\t *\n\t * @namespace\n\t */\n\tDataTable.render = {\n\t\tdate: __mlHelper('toLocaleDateString'),\n\t\tdatetime: __mlHelper('toLocaleString'),\n\t\ttime: __mlHelper('toLocaleTimeString'),\n\t\tnumber: function ( thousands, decimal, precision, prefix, postfix ) {\n\t\t\t// Auto locale detection\n\t\t\tif (thousands === null || thousands === undefined) {\n\t\t\t\tthousands = __thousands;\n\t\t\t}\n\t\n\t\t\tif (decimal === null || decimal === undefined) {\n\t\t\t\tdecimal = __decimal;\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tdisplay: function ( d ) {\n\t\t\t\t\tif ( typeof d !== 'number' && typeof d !== 'string' ) {\n\t\t\t\t\t\treturn d;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (d === '' || d === null) {\n\t\t\t\t\t\treturn d;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar negative = d < 0 ? '-' : '';\n\t\t\t\t\tvar flo = parseFloat( d );\n\t\n\t\t\t\t\t// If NaN then there isn't much formatting that we can do - just\n\t\t\t\t\t// return immediately, escaping any HTML (this was supposed to\n\t\t\t\t\t// be a number after all)\n\t\t\t\t\tif ( isNaN( flo ) ) {\n\t\t\t\t\t\treturn __htmlEscapeEntities( d );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tflo = flo.toFixed( precision );\n\t\t\t\t\td = Math.abs( flo );\n\t\n\t\t\t\t\tvar intPart = parseInt( d, 10 );\n\t\t\t\t\tvar floatPart = precision ?\n\t\t\t\t\t\tdecimal+(d - intPart).toFixed( precision ).substring( 2 ):\n\t\t\t\t\t\t'';\n\t\n\t\t\t\t\t// If zero, then can't have a negative prefix\n\t\t\t\t\tif (intPart === 0 && parseFloat(floatPart) === 0) {\n\t\t\t\t\t\tnegative = '';\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn negative + (prefix||'') +\n\t\t\t\t\t\tintPart.toString().replace(\n\t\t\t\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g, thousands\n\t\t\t\t\t\t) +\n\t\t\t\t\t\tfloatPart +\n\t\t\t\t\t\t(postfix||'');\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\n\t\ttext: function () {\n\t\t\treturn {\n\t\t\t\tdisplay: __htmlEscapeEntities,\n\t\t\t\tfilter: __htmlEscapeEntities\n\t\t\t};\n\t\t}\n\t};\n\t\n\t\n\t/*\n\t * This is really a good bit rubbish this method of exposing the internal methods\n\t * publicly... - To be fixed in 2.0 using methods on the prototype\n\t */\n\t\n\t\n\t/**\n\t * Create a wrapper function for exporting an internal functions to an external API.\n\t *  @param {string} fn API function name\n\t *  @returns {function} wrapped function\n\t *  @memberof DataTable#internal\n\t */\n\tfunction _fnExternApiFunc (fn)\n\t{\n\t\treturn function() {\n\t\t\tvar args = [_fnSettingsFromNode( this[DataTable.ext.iApiIndex] )].concat(\n\t\t\t\tArray.prototype.slice.call(arguments)\n\t\t\t);\n\t\t\treturn DataTable.ext.internal[fn].apply( this, args );\n\t\t};\n\t}\n\t\n\t\n\t/**\n\t * Reference to internal functions for use by plug-in developers. Note that\n\t * these methods are references to internal functions and are considered to be\n\t * private. If you use these methods, be aware that they are liable to change\n\t * between versions.\n\t *  @namespace\n\t */\n\t$.extend( DataTable.ext.internal, {\n\t\t_fnExternApiFunc: _fnExternApiFunc,\n\t\t_fnBuildAjax: _fnBuildAjax,\n\t\t_fnAjaxUpdate: _fnAjaxUpdate,\n\t\t_fnAjaxParameters: _fnAjaxParameters,\n\t\t_fnAjaxUpdateDraw: _fnAjaxUpdateDraw,\n\t\t_fnAjaxDataSrc: _fnAjaxDataSrc,\n\t\t_fnAddColumn: _fnAddColumn,\n\t\t_fnColumnOptions: _fnColumnOptions,\n\t\t_fnAdjustColumnSizing: _fnAdjustColumnSizing,\n\t\t_fnVisibleToColumnIndex: _fnVisibleToColumnIndex,\n\t\t_fnColumnIndexToVisible: _fnColumnIndexToVisible,\n\t\t_fnVisbleColumns: _fnVisbleColumns,\n\t\t_fnGetColumns: _fnGetColumns,\n\t\t_fnColumnTypes: _fnColumnTypes,\n\t\t_fnApplyColumnDefs: _fnApplyColumnDefs,\n\t\t_fnHungarianMap: _fnHungarianMap,\n\t\t_fnCamelToHungarian: _fnCamelToHungarian,\n\t\t_fnLanguageCompat: _fnLanguageCompat,\n\t\t_fnBrowserDetect: _fnBrowserDetect,\n\t\t_fnAddData: _fnAddData,\n\t\t_fnAddTr: _fnAddTr,\n\t\t_fnNodeToDataIndex: _fnNodeToDataIndex,\n\t\t_fnNodeToColumnIndex: _fnNodeToColumnIndex,\n\t\t_fnGetCellData: _fnGetCellData,\n\t\t_fnSetCellData: _fnSetCellData,\n\t\t_fnSplitObjNotation: _fnSplitObjNotation,\n\t\t_fnGetObjectDataFn: _fnGetObjectDataFn,\n\t\t_fnSetObjectDataFn: _fnSetObjectDataFn,\n\t\t_fnGetDataMaster: _fnGetDataMaster,\n\t\t_fnClearTable: _fnClearTable,\n\t\t_fnDeleteIndex: _fnDeleteIndex,\n\t\t_fnInvalidate: _fnInvalidate,\n\t\t_fnGetRowElements: _fnGetRowElements,\n\t\t_fnCreateTr: _fnCreateTr,\n\t\t_fnBuildHead: _fnBuildHead,\n\t\t_fnDrawHead: _fnDrawHead,\n\t\t_fnDraw: _fnDraw,\n\t\t_fnReDraw: _fnReDraw,\n\t\t_fnAddOptionsHtml: _fnAddOptionsHtml,\n\t\t_fnDetectHeader: _fnDetectHeader,\n\t\t_fnGetUniqueThs: _fnGetUniqueThs,\n\t\t_fnFeatureHtmlFilter: _fnFeatureHtmlFilter,\n\t\t_fnFilterComplete: _fnFilterComplete,\n\t\t_fnFilterCustom: _fnFilterCustom,\n\t\t_fnFilterColumn: _fnFilterColumn,\n\t\t_fnFilter: _fnFilter,\n\t\t_fnFilterCreateSearch: _fnFilterCreateSearch,\n\t\t_fnEscapeRegex: _fnEscapeRegex,\n\t\t_fnFilterData: _fnFilterData,\n\t\t_fnFeatureHtmlInfo: _fnFeatureHtmlInfo,\n\t\t_fnUpdateInfo: _fnUpdateInfo,\n\t\t_fnInfoMacros: _fnInfoMacros,\n\t\t_fnInitialise: _fnInitialise,\n\t\t_fnInitComplete: _fnInitComplete,\n\t\t_fnLengthChange: _fnLengthChange,\n\t\t_fnFeatureHtmlLength: _fnFeatureHtmlLength,\n\t\t_fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,\n\t\t_fnPageChange: _fnPageChange,\n\t\t_fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,\n\t\t_fnProcessingDisplay: _fnProcessingDisplay,\n\t\t_fnFeatureHtmlTable: _fnFeatureHtmlTable,\n\t\t_fnScrollDraw: _fnScrollDraw,\n\t\t_fnApplyToChildren: _fnApplyToChildren,\n\t\t_fnCalculateColumnWidths: _fnCalculateColumnWidths,\n\t\t_fnThrottle: _fnThrottle,\n\t\t_fnConvertToWidth: _fnConvertToWidth,\n\t\t_fnGetWidestNode: _fnGetWidestNode,\n\t\t_fnGetMaxLenString: _fnGetMaxLenString,\n\t\t_fnStringToCss: _fnStringToCss,\n\t\t_fnSortFlatten: _fnSortFlatten,\n\t\t_fnSort: _fnSort,\n\t\t_fnSortAria: _fnSortAria,\n\t\t_fnSortListener: _fnSortListener,\n\t\t_fnSortAttachListener: _fnSortAttachListener,\n\t\t_fnSortingClasses: _fnSortingClasses,\n\t\t_fnSortData: _fnSortData,\n\t\t_fnSaveState: _fnSaveState,\n\t\t_fnLoadState: _fnLoadState,\n\t\t_fnImplementState: _fnImplementState,\n\t\t_fnSettingsFromNode: _fnSettingsFromNode,\n\t\t_fnLog: _fnLog,\n\t\t_fnMap: _fnMap,\n\t\t_fnBindAction: _fnBindAction,\n\t\t_fnCallbackReg: _fnCallbackReg,\n\t\t_fnCallbackFire: _fnCallbackFire,\n\t\t_fnLengthOverflow: _fnLengthOverflow,\n\t\t_fnRenderer: _fnRenderer,\n\t\t_fnDataSource: _fnDataSource,\n\t\t_fnRowAttributes: _fnRowAttributes,\n\t\t_fnExtend: _fnExtend,\n\t\t_fnCalculateEnd: function () {} // Used by a lot of plug-ins, but redundant\n\t\t                                // in 1.10, so this dead-end function is\n\t\t                                // added to prevent errors\n\t} );\n\t\n\t\n\t// jQuery access\n\t$.fn.dataTable = DataTable;\n\t\n\t// Provide access to the host jQuery object (circular reference)\n\tDataTable.$ = $;\n\t\n\t// Legacy aliases\n\t$.fn.dataTableSettings = DataTable.settings;\n\t$.fn.dataTableExt = DataTable.ext;\n\t\n\t// With a capital `D` we return a DataTables API instance rather than a\n\t// jQuery object\n\t$.fn.DataTable = function ( opts ) {\n\t\treturn $(this).dataTable( opts ).api();\n\t};\n\t\n\t// All properties that are available to $.fn.dataTable should also be\n\t// available on $.fn.DataTable\n\t$.each( DataTable, function ( prop, val ) {\n\t\t$.fn.DataTable[ prop ] = val;\n\t} );\n\n\treturn DataTable;\n}));\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Table.vue?vue&type=style&index=0&id=461f1a24&lang=css\"","/*! DataTables Bootstrap 5 integration\n * 2020 SpryMedia Ltd - datatables.net/license\n */\n\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'datatables.net'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tvar jq = require('jquery');\n\t\tvar cjsRequires = function (root, $) {\n\t\t\tif ( ! $.fn.dataTable ) {\n\t\t\t\trequire('datatables.net')(root, $);\n\t\t\t}\n\t\t};\n\n\t\tif (typeof window !== 'undefined') {\n\t\t\tmodule.exports = function (root, $) {\n\t\t\t\tif ( ! root ) {\n\t\t\t\t\t// CommonJS environments without a window global must pass a\n\t\t\t\t\t// root. This will give an error otherwise\n\t\t\t\t\troot = window;\n\t\t\t\t}\n\n\t\t\t\tif ( ! $ ) {\n\t\t\t\t\t$ = jq( root );\n\t\t\t\t}\n\n\t\t\t\tcjsRequires( root, $ );\n\t\t\t\treturn factory( $, root, root.document );\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tcjsRequires( window, jq );\n\t\t\tmodule.exports = factory( jq, window, window.document );\n\t\t}\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n\n/**\n * DataTables integration for Bootstrap 5. This requires Bootstrap 5 and\n * DataTables 1.10 or newer.\n *\n * This file sets the defaults and adds options to DataTables to style its\n * controls using Bootstrap. See http://datatables.net/manual/styling/bootstrap\n * for further information.\n */\n\n/* Set the defaults for DataTables initialisation */\n$.extend( true, DataTable.defaults, {\n\tdom:\n\t\t\"<'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'f>>\" +\n\t\t\"<'row dt-row'<'col-sm-12'tr>>\" +\n\t\t\"<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>\",\n\trenderer: 'bootstrap'\n} );\n\n\n/* Default class modification */\n$.extend( DataTable.ext.classes, {\n\tsWrapper:      \"dataTables_wrapper dt-bootstrap5\",\n\tsFilterInput:  \"form-control form-control-sm\",\n\tsLengthSelect: \"form-select form-select-sm\",\n\tsProcessing:   \"dataTables_processing card\",\n\tsPageButton:   \"paginate_button page-item\"\n} );\n\n\n/* Bootstrap paging button renderer */\nDataTable.ext.renderer.pageButton.bootstrap = function ( settings, host, idx, buttons, page, pages ) {\n\tvar api     = new DataTable.Api( settings );\n\tvar classes = settings.oClasses;\n\tvar lang    = settings.oLanguage.oPaginate;\n\tvar aria = settings.oLanguage.oAria.paginate || {};\n\tvar btnDisplay, btnClass;\n\n\tvar attach = function( container, buttons ) {\n\t\tvar i, ien, node, button;\n\t\tvar clickHandler = function ( e ) {\n\t\t\te.preventDefault();\n\t\t\tif ( !$(e.currentTarget).hasClass('disabled') && api.page() != e.data.action ) {\n\t\t\t\tapi.page( e.data.action ).draw( 'page' );\n\t\t\t}\n\t\t};\n\n\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tbutton = buttons[i];\n\n\t\t\tif ( Array.isArray( button ) ) {\n\t\t\t\tattach( container, button );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbtnDisplay = '';\n\t\t\t\tbtnClass = '';\n\n\t\t\t\tswitch ( button ) {\n\t\t\t\t\tcase 'ellipsis':\n\t\t\t\t\t\tbtnDisplay = '&#x2026;';\n\t\t\t\t\t\tbtnClass = 'disabled';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'first':\n\t\t\t\t\t\tbtnDisplay = lang.sFirst;\n\t\t\t\t\t\tbtnClass = button + (page > 0 ?\n\t\t\t\t\t\t\t'' : ' disabled');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'previous':\n\t\t\t\t\t\tbtnDisplay = lang.sPrevious;\n\t\t\t\t\t\tbtnClass = button + (page > 0 ?\n\t\t\t\t\t\t\t'' : ' disabled');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'next':\n\t\t\t\t\t\tbtnDisplay = lang.sNext;\n\t\t\t\t\t\tbtnClass = button + (page < pages-1 ?\n\t\t\t\t\t\t\t'' : ' disabled');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'last':\n\t\t\t\t\t\tbtnDisplay = lang.sLast;\n\t\t\t\t\t\tbtnClass = button + (page < pages-1 ?\n\t\t\t\t\t\t\t'' : ' disabled');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbtnDisplay = button + 1;\n\t\t\t\t\t\tbtnClass = page === button ?\n\t\t\t\t\t\t\t'active' : '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif ( btnDisplay ) {\n\t\t\t\t\tvar disabled = btnClass.indexOf('disabled') !== -1;\n\n\t\t\t\t\tnode = $('<li>', {\n\t\t\t\t\t\t\t'class': classes.sPageButton+' '+btnClass,\n\t\t\t\t\t\t\t'id': idx === 0 && typeof button === 'string' ?\n\t\t\t\t\t\t\t\tsettings.sTableId +'_'+ button :\n\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.append( $('<a>', {\n\t\t\t\t\t\t\t\t'href': disabled ? null : '#',\n\t\t\t\t\t\t\t\t'aria-controls': settings.sTableId,\n\t\t\t\t\t\t\t\t'aria-disabled': disabled ? 'true' : null,\n\t\t\t\t\t\t\t\t'aria-label': aria[ button ],\n\t\t\t\t\t\t\t\t'aria-role': 'link',\n\t\t\t\t\t\t\t\t'aria-current': btnClass === 'active' ? 'page' : null,\n\t\t\t\t\t\t\t\t'data-dt-idx': button,\n\t\t\t\t\t\t\t\t'tabindex': settings.iTabIndex,\n\t\t\t\t\t\t\t\t'class': 'page-link'\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t.html( btnDisplay )\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.appendTo( container );\n\n\t\t\t\t\tsettings.oApi._fnBindAction(\n\t\t\t\t\t\tnode, {action: button}, clickHandler\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tvar hostEl = $(host);\n\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t// inside an iframe or frame. \n\tvar activeEl;\n\n\ttry {\n\t\t// Because this approach is destroying and recreating the paging\n\t\t// elements, focus is lost on the select button which is bad for\n\t\t// accessibility. So we want to restore focus once the draw has\n\t\t// completed\n\t\tactiveEl = hostEl.find(document.activeElement).data('dt-idx');\n\t}\n\tcatch (e) {}\n\n\tvar paginationEl = hostEl.children('ul.pagination');\n\n\tif (paginationEl.length) {\n\t\tpaginationEl.empty();\n\t}\n\telse {\n\t\tpaginationEl = hostEl.html('<ul/>').children('ul').addClass('pagination');\n\t}\n\n\tattach(\n\t\tpaginationEl,\n\t\tbuttons\n\t);\n\n\tif ( activeEl !== undefined ) {\n\t\thostEl.find('[data-dt-idx='+activeEl+']').trigger('focus');\n\t}\n};\n\n\nreturn DataTable;\n}));\n","/*! Responsive 2.4.1\n * © SpryMedia Ltd - datatables.net/license\n */\n\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'datatables.net'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tvar jq = require('jquery');\n\t\tvar cjsRequires = function (root, $) {\n\t\t\tif ( ! $.fn.dataTable ) {\n\t\t\t\trequire('datatables.net')(root, $);\n\t\t\t}\n\t\t};\n\n\t\tif (typeof window !== 'undefined') {\n\t\t\tmodule.exports = function (root, $) {\n\t\t\t\tif ( ! root ) {\n\t\t\t\t\t// CommonJS environments without a window global must pass a\n\t\t\t\t\t// root. This will give an error otherwise\n\t\t\t\t\troot = window;\n\t\t\t\t}\n\n\t\t\t\tif ( ! $ ) {\n\t\t\t\t\t$ = jq( root );\n\t\t\t\t}\n\n\t\t\t\tcjsRequires( root, $ );\n\t\t\t\treturn factory( $, root, root.document );\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tcjsRequires( window, jq );\n\t\t\tmodule.exports = factory( jq, window, window.document );\n\t\t}\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n\n/**\n * @summary     Responsive\n * @description Responsive tables plug-in for DataTables\n * @version     2.4.1\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     www.sprymedia.co.uk/contact\n * @copyright   SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n\n/**\n * Responsive is a plug-in for the DataTables library that makes use of\n * DataTables' ability to change the visibility of columns, changing the\n * visibility of columns so the displayed columns fit into the table container.\n * The end result is that complex tables will be dynamically adjusted to fit\n * into the viewport, be it on a desktop, tablet or mobile browser.\n *\n * Responsive for DataTables has two modes of operation, which can used\n * individually or combined:\n *\n * * Class name based control - columns assigned class names that match the\n *   breakpoint logic can be shown / hidden as required for each breakpoint.\n * * Automatic control - columns are automatically hidden when there is no\n *   room left to display them. Columns removed from the right.\n *\n * In additional to column visibility control, Responsive also has built into\n * options to use DataTables' child row display to show / hide the information\n * from the table that has been hidden. There are also two modes of operation\n * for this child row display:\n *\n * * Inline - when the control element that the user can use to show / hide\n *   child rows is displayed inside the first column of the table.\n * * Column - where a whole column is dedicated to be the show / hide control.\n *\n * Initialisation of Responsive is performed by:\n *\n * * Adding the class `responsive` or `dt-responsive` to the table. In this case\n *   Responsive will automatically be initialised with the default configuration\n *   options when the DataTable is created.\n * * Using the `responsive` option in the DataTables configuration options. This\n *   can also be used to specify the configuration options, or simply set to\n *   `true` to use the defaults.\n *\n *  @class\n *  @param {object} settings DataTables settings object for the host table\n *  @param {object} [opts] Configuration options\n *  @requires jQuery 1.7+\n *  @requires DataTables 1.10.3+\n *\n *  @example\n *      $('#example').DataTable( {\n *        responsive: true\n *      } );\n *    } );\n */\nvar Responsive = function ( settings, opts ) {\n\t// Sanity check that we are using DataTables 1.10 or newer\n\tif ( ! DataTable.versionCheck || ! DataTable.versionCheck( '1.10.10' ) ) {\n\t\tthrow 'DataTables Responsive requires DataTables 1.10.10 or newer';\n\t}\n\n\tthis.s = {\n\t\tchildNodeStore: {},\n\t\tcolumns: [],\n\t\tcurrent: [],\n\t\tdt: new DataTable.Api( settings )\n\t};\n\n\t// Check if responsive has already been initialised on this table\n\tif ( this.s.dt.settings()[0].responsive ) {\n\t\treturn;\n\t}\n\n\t// details is an object, but for simplicity the user can give it as a string\n\t// or a boolean\n\tif ( opts && typeof opts.details === 'string' ) {\n\t\topts.details = { type: opts.details };\n\t}\n\telse if ( opts && opts.details === false ) {\n\t\topts.details = { type: false };\n\t}\n\telse if ( opts && opts.details === true ) {\n\t\topts.details = { type: 'inline' };\n\t}\n\n\tthis.c = $.extend( true, {}, Responsive.defaults, DataTable.defaults.responsive, opts );\n\tsettings.responsive = this;\n\tthis._constructor();\n};\n\n$.extend( Responsive.prototype, {\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Constructor\n\t */\n\n\t/**\n\t * Initialise the Responsive instance\n\t *\n\t * @private\n\t */\n\t_constructor: function ()\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar dtPrivateSettings = dt.settings()[0];\n\t\tvar oldWindowWidth = $(window).innerWidth();\n\n\t\tdt.settings()[0]._responsive = this;\n\n\t\t// Use DataTables' throttle function to avoid processor thrashing on\n\t\t// resize\n\t\t$(window).on( 'resize.dtr orientationchange.dtr', DataTable.util.throttle( function () {\n\t\t\t// iOS has a bug whereby resize can fire when only scrolling\n\t\t\t// See: http://stackoverflow.com/questions/8898412\n\t\t\tvar width = $(window).innerWidth();\n\n\t\t\tif ( width !== oldWindowWidth ) {\n\t\t\t\tthat._resize();\n\t\t\t\toldWindowWidth = width;\n\t\t\t}\n\t\t} ) );\n\n\t\t// DataTables doesn't currently trigger an event when a row is added, so\n\t\t// we need to hook into its private API to enforce the hidden rows when\n\t\t// new data is added\n\t\tdtPrivateSettings.oApi._fnCallbackReg( dtPrivateSettings, 'aoRowCreatedCallback', function (tr, data, idx) {\n\t\t\tif ( $.inArray( false, that.s.current ) !== -1 ) {\n\t\t\t\t$('>td, >th', tr).each( function ( i ) {\n\t\t\t\t\tvar idx = dt.column.index( 'toData', i );\n\n\t\t\t\t\tif ( that.s.current[idx] === false ) {\n\t\t\t\t\t\t$(this).css('display', 'none');\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\t// Destroy event handler\n\t\tdt.on( 'destroy.dtr', function () {\n\t\t\tdt.off( '.dtr' );\n\t\t\t$( dt.table().body() ).off( '.dtr' );\n\t\t\t$(window).off( 'resize.dtr orientationchange.dtr' );\n\t\t\tdt.cells('.dtr-control').nodes().to$().removeClass('dtr-control');\n\n\t\t\t// Restore the columns that we've hidden\n\t\t\t$.each( that.s.current, function ( i, val ) {\n\t\t\t\tif ( val === false ) {\n\t\t\t\t\tthat._setColumnVis( i, true );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\t// Reorder the breakpoints array here in case they have been added out\n\t\t// of order\n\t\tthis.c.breakpoints.sort( function (a, b) {\n\t\t\treturn a.width < b.width ? 1 :\n\t\t\t\ta.width > b.width ? -1 : 0;\n\t\t} );\n\n\t\tthis._classLogic();\n\t\tthis._resizeAuto();\n\n\t\t// Details handler\n\t\tvar details = this.c.details;\n\n\t\tif ( details.type !== false ) {\n\t\t\tthat._detailsInit();\n\n\t\t\t// DataTables will trigger this event on every column it shows and\n\t\t\t// hides individually\n\t\t\tdt.on( 'column-visibility.dtr', function () {\n\t\t\t\t// Use a small debounce to allow multiple columns to be set together\n\t\t\t\tif ( that._timer ) {\n\t\t\t\t\tclearTimeout( that._timer );\n\t\t\t\t}\n\n\t\t\t\tthat._timer = setTimeout( function () {\n\t\t\t\t\tthat._timer = null;\n\n\t\t\t\t\tthat._classLogic();\n\t\t\t\t\tthat._resizeAuto();\n\t\t\t\t\tthat._resize(true);\n\n\t\t\t\t\tthat._redrawChildren();\n\t\t\t\t}, 100 );\n\t\t\t} );\n\n\t\t\t// Redraw the details box on each draw which will happen if the data\n\t\t\t// has changed. This is used until DataTables implements a native\n\t\t\t// `updated` event for rows\n\t\t\tdt.on( 'draw.dtr', function () {\n\t\t\t\tthat._redrawChildren();\n\t\t\t} );\n\n\t\t\t$(dt.table().node()).addClass( 'dtr-'+details.type );\n\t\t}\n\n\t\tdt.on( 'column-reorder.dtr', function (e, settings, details) {\n\t\t\tthat._classLogic();\n\t\t\tthat._resizeAuto();\n\t\t\tthat._resize(true);\n\t\t} );\n\n\t\t// Change in column sizes means we need to calc\n\t\tdt.on( 'column-sizing.dtr', function () {\n\t\t\tthat._resizeAuto();\n\t\t\tthat._resize();\n\t\t});\n\n\t\t// DT2 let's us tell it if we are hiding columns\n\t\tdt.on( 'column-calc.dt', function (e, d) {\n\t\t\tvar curr = that.s.current;\n\n\t\t\tfor (var i=0 ; i<curr.length ; i++) {\n\t\t\t\tvar idx = d.visible.indexOf(i);\n\n\t\t\t\tif (curr[i] === false && idx >= 0) {\n\t\t\t\t\td.visible.splice(idx, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t// On Ajax reload we want to reopen any child rows which are displayed\n\t\t// by responsive\n\t\tdt.on( 'preXhr.dtr', function () {\n\t\t\tvar rowIds = [];\n\t\t\tdt.rows().every( function () {\n\t\t\t\tif ( this.child.isShown() ) {\n\t\t\t\t\trowIds.push( this.id(true) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tdt.one( 'draw.dtr', function () {\n\t\t\t\tthat._resizeAuto();\n\t\t\t\tthat._resize();\n\n\t\t\t\tdt.rows( rowIds ).every( function () {\n\t\t\t\t\tthat._detailsDisplay( this, false );\n\t\t\t\t} );\n\t\t\t} );\n\t\t});\n\n\t\tdt\n\t\t\t.on( 'draw.dtr', function () {\n\t\t\t\tthat._controlClass();\n\t\t\t})\n\t\t\t.on( 'init.dtr', function (e, settings, details) {\n\t\t\t\tif ( e.namespace !== 'dt' ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthat._resizeAuto();\n\t\t\t\tthat._resize();\n\n\t\t\t\t// If columns were hidden, then DataTables needs to adjust the\n\t\t\t\t// column sizing\n\t\t\t\tif ( $.inArray( false, that.s.current ) ) {\n\t\t\t\t\tdt.columns.adjust();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t// First pass - draw the table for the current viewport size\n\t\tthis._resize();\n\t},\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Private methods\n\t */\n\n\t/**\n\t * Get and store nodes from a cell - use for node moving renderers\n\t *\n\t * @param {*} dt DT instance\n\t * @param {*} row Row index\n\t * @param {*} col Column index\n\t */\n\t_childNodes: function( dt, row, col ) {\n\t\tvar name = row+'-'+col;\n\n\t\tif ( this.s.childNodeStore[ name ] ) {\n\t\t\treturn this.s.childNodeStore[ name ];\n\t\t}\n\n\t\t// https://jsperf.com/childnodes-array-slice-vs-loop\n\t\tvar nodes = [];\n\t\tvar children = dt.cell( row, col ).node().childNodes;\n\t\tfor ( var i=0, ien=children.length ; i<ien ; i++ ) {\n\t\t\tnodes.push( children[i] );\n\t\t}\n\n\t\tthis.s.childNodeStore[ name ] = nodes;\n\n\t\treturn nodes;\n\t},\n\n\t/**\n\t * Restore nodes from the cache to a table cell\n\t *\n\t * @param {*} dt DT instance\n\t * @param {*} row Row index\n\t * @param {*} col Column index\n\t */\n\t_childNodesRestore: function( dt, row, col ) {\n\t\tvar name = row+'-'+col;\n\n\t\tif ( ! this.s.childNodeStore[ name ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar node = dt.cell( row, col ).node();\n\t\tvar store = this.s.childNodeStore[ name ];\n\t\tvar parent = store[0].parentNode;\n\t\tvar parentChildren = parent.childNodes;\n\t\tvar a = [];\n\n\t\tfor ( var i=0, ien=parentChildren.length ; i<ien ; i++ ) {\n\t\t\ta.push( parentChildren[i] );\n\t\t}\n\n\t\tfor ( var j=0, jen=a.length ; j<jen ; j++ ) {\n\t\t\tnode.appendChild( a[j] );\n\t\t}\n\n\t\tthis.s.childNodeStore[ name ] = undefined;\n\t},\n\n\t/**\n\t * Calculate the visibility for the columns in a table for a given\n\t * breakpoint. The result is pre-determined based on the class logic if\n\t * class names are used to control all columns, but the width of the table\n\t * is also used if there are columns which are to be automatically shown\n\t * and hidden.\n\t *\n\t * @param  {string} breakpoint Breakpoint name to use for the calculation\n\t * @return {array} Array of boolean values initiating the visibility of each\n\t *   column.\n\t *  @private\n\t */\n\t_columnsVisiblity: function ( breakpoint )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar columns = this.s.columns;\n\t\tvar i, ien;\n\n\t\t// Create an array that defines the column ordering based first on the\n\t\t// column's priority, and secondly the column index. This allows the\n\t\t// columns to be removed from the right if the priority matches\n\t\tvar order = columns\n\t\t\t.map( function ( col, idx ) {\n\t\t\t\treturn {\n\t\t\t\t\tcolumnIdx: idx,\n\t\t\t\t\tpriority: col.priority\n\t\t\t\t};\n\t\t\t} )\n\t\t\t.sort( function ( a, b ) {\n\t\t\t\tif ( a.priority !== b.priority ) {\n\t\t\t\t\treturn a.priority - b.priority;\n\t\t\t\t}\n\t\t\t\treturn a.columnIdx - b.columnIdx;\n\t\t\t} );\n\n\t\t// Class logic - determine which columns are in this breakpoint based\n\t\t// on the classes. If no class control (i.e. `auto`) then `-` is used\n\t\t// to indicate this to the rest of the function\n\t\tvar display = $.map( columns, function ( col, i ) {\n\t\t\tif ( dt.column(i).visible() === false ) {\n\t\t\t\treturn 'not-visible';\n\t\t\t}\n\t\t\treturn col.auto && col.minWidth === null ?\n\t\t\t\tfalse :\n\t\t\t\tcol.auto === true ?\n\t\t\t\t\t'-' :\n\t\t\t\t\t$.inArray( breakpoint, col.includeIn ) !== -1;\n\t\t} );\n\n\t\t// Auto column control - first pass: how much width is taken by the\n\t\t// ones that must be included from the non-auto columns\n\t\tvar requiredWidth = 0;\n\t\tfor ( i=0, ien=display.length ; i<ien ; i++ ) {\n\t\t\tif ( display[i] === true ) {\n\t\t\t\trequiredWidth += columns[i].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Second pass, use up any remaining width for other columns. For\n\t\t// scrolling tables we need to subtract the width of the scrollbar. It\n\t\t// may not be requires which makes this sub-optimal, but it would\n\t\t// require another full redraw to make complete use of those extra few\n\t\t// pixels\n\t\tvar scrolling = dt.settings()[0].oScroll;\n\t\tvar bar = scrolling.sY || scrolling.sX ? scrolling.iBarWidth : 0;\n\t\tvar widthAvailable = dt.table().container().offsetWidth - bar;\n\t\tvar usedWidth = widthAvailable - requiredWidth;\n\n\t\t// Control column needs to always be included. This makes it sub-\n\t\t// optimal in terms of using the available with, but to stop layout\n\t\t// thrashing or overflow. Also we need to account for the control column\n\t\t// width first so we know how much width is available for the other\n\t\t// columns, since the control column might not be the first one shown\n\t\tfor ( i=0, ien=display.length ; i<ien ; i++ ) {\n\t\t\tif ( columns[i].control ) {\n\t\t\t\tusedWidth -= columns[i].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Allow columns to be shown (counting by priority and then right to\n\t\t// left) until we run out of room\n\t\tvar empty = false;\n\t\tfor ( i=0, ien=order.length ; i<ien ; i++ ) {\n\t\t\tvar colIdx = order[i].columnIdx;\n\n\t\t\tif ( display[colIdx] === '-' && ! columns[colIdx].control && columns[colIdx].minWidth ) {\n\t\t\t\t// Once we've found a column that won't fit we don't let any\n\t\t\t\t// others display either, or columns might disappear in the\n\t\t\t\t// middle of the table\n\t\t\t\tif ( empty || usedWidth - columns[colIdx].minWidth < 0 ) {\n\t\t\t\t\tempty = true;\n\t\t\t\t\tdisplay[colIdx] = false;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdisplay[colIdx] = true;\n\t\t\t\t}\n\n\t\t\t\tusedWidth -= columns[colIdx].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Determine if the 'control' column should be shown (if there is one).\n\t\t// This is the case when there is a hidden column (that is not the\n\t\t// control column). The two loops look inefficient here, but they are\n\t\t// trivial and will fly through. We need to know the outcome from the\n\t\t// first , before the action in the second can be taken\n\t\tvar showControl = false;\n\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tif ( ! columns[i].control && ! columns[i].never && display[i] === false ) {\n\t\t\t\tshowControl = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tif ( columns[i].control ) {\n\t\t\t\tdisplay[i] = showControl;\n\t\t\t}\n\n\t\t\t// Replace not visible string with false from the control column detection above\n\t\t\tif ( display[i] === 'not-visible' ) {\n\t\t\t\tdisplay[i] = false;\n\t\t\t}\n\t\t}\n\n\t\t// Finally we need to make sure that there is at least one column that\n\t\t// is visible\n\t\tif ( $.inArray( true, display ) === -1 ) {\n\t\t\tdisplay[0] = true;\n\t\t}\n\n\t\treturn display;\n\t},\n\n\n\t/**\n\t * Create the internal `columns` array with information about the columns\n\t * for the table. This includes determining which breakpoints the column\n\t * will appear in, based upon class names in the column, which makes up the\n\t * vast majority of this method.\n\t *\n\t * @private\n\t */\n\t_classLogic: function ()\n\t{\n\t\tvar that = this;\n\t\tvar calc = {};\n\t\tvar breakpoints = this.c.breakpoints;\n\t\tvar dt = this.s.dt;\n\t\tvar columns = dt.columns().eq(0).map( function (i) {\n\t\t\tvar column = this.column(i);\n\t\t\tvar className = column.header().className;\n\t\t\tvar priority = dt.settings()[0].aoColumns[i].responsivePriority;\n\t\t\tvar dataPriority = column.header().getAttribute('data-priority');\n\n\t\t\tif ( priority === undefined ) {\n\t\t\t\tpriority = dataPriority === undefined || dataPriority === null?\n\t\t\t\t\t10000 :\n\t\t\t\t\tdataPriority * 1;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tclassName: className,\n\t\t\t\tincludeIn: [],\n\t\t\t\tauto:      false,\n\t\t\t\tcontrol:   false,\n\t\t\t\tnever:     className.match(/\\b(dtr\\-)?never\\b/) ? true : false,\n\t\t\t\tpriority:  priority\n\t\t\t};\n\t\t} );\n\n\t\t// Simply add a breakpoint to `includeIn` array, ensuring that there are\n\t\t// no duplicates\n\t\tvar add = function ( colIdx, name ) {\n\t\t\tvar includeIn = columns[ colIdx ].includeIn;\n\n\t\t\tif ( $.inArray( name, includeIn ) === -1 ) {\n\t\t\t\tincludeIn.push( name );\n\t\t\t}\n\t\t};\n\n\t\tvar column = function ( colIdx, name, operator, matched ) {\n\t\t\tvar size, i, ien;\n\n\t\t\tif ( ! operator ) {\n\t\t\t\tcolumns[ colIdx ].includeIn.push( name );\n\t\t\t}\n\t\t\telse if ( operator === 'max-' ) {\n\t\t\t\t// Add this breakpoint and all smaller\n\t\t\t\tsize = that._find( name ).width;\n\n\t\t\t\tfor ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( breakpoints[i].width <= size ) {\n\t\t\t\t\t\tadd( colIdx, breakpoints[i].name );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( operator === 'min-' ) {\n\t\t\t\t// Add this breakpoint and all larger\n\t\t\t\tsize = that._find( name ).width;\n\n\t\t\t\tfor ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( breakpoints[i].width >= size ) {\n\t\t\t\t\t\tadd( colIdx, breakpoints[i].name );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( operator === 'not-' ) {\n\t\t\t\t// Add all but this breakpoint\n\t\t\t\tfor ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( breakpoints[i].name.indexOf( matched ) === -1 ) {\n\t\t\t\t\t\tadd( colIdx, breakpoints[i].name );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Loop over each column and determine if it has a responsive control\n\t\t// class\n\t\tcolumns.each( function ( col, i ) {\n\t\t\tvar classNames = col.className.split(' ');\n\t\t\tvar hasClass = false;\n\n\t\t\t// Split the class name up so multiple rules can be applied if needed\n\t\t\tfor ( var k=0, ken=classNames.length ; k<ken ; k++ ) {\n\t\t\t\tvar className = classNames[k].trim();\n\n\t\t\t\tif ( className === 'all' || className === 'dtr-all' ) {\n\t\t\t\t\t// Include in all\n\t\t\t\t\thasClass = true;\n\t\t\t\t\tcol.includeIn = $.map( breakpoints, function (a) {\n\t\t\t\t\t\treturn a.name;\n\t\t\t\t\t} );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse if ( className === 'none' || className === 'dtr-none' || col.never ) {\n\t\t\t\t\t// Include in none (default) and no auto\n\t\t\t\t\thasClass = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse if ( className === 'control' || className === 'dtr-control' ) {\n\t\t\t\t\t// Special column that is only visible, when one of the other\n\t\t\t\t\t// columns is hidden. This is used for the details control\n\t\t\t\t\thasClass = true;\n\t\t\t\t\tcol.control = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t$.each( breakpoints, function ( j, breakpoint ) {\n\t\t\t\t\t// Does this column have a class that matches this breakpoint?\n\t\t\t\t\tvar brokenPoint = breakpoint.name.split('-');\n\t\t\t\t\tvar re = new RegExp( '(min\\\\-|max\\\\-|not\\\\-)?('+brokenPoint[0]+')(\\\\-[_a-zA-Z0-9])?' );\n\t\t\t\t\tvar match = className.match( re );\n\n\t\t\t\t\tif ( match ) {\n\t\t\t\t\t\thasClass = true;\n\n\t\t\t\t\t\tif ( match[2] === brokenPoint[0] && match[3] === '-'+brokenPoint[1] ) {\n\t\t\t\t\t\t\t// Class name matches breakpoint name fully\n\t\t\t\t\t\t\tcolumn( i, breakpoint.name, match[1], match[2]+match[3] );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( match[2] === brokenPoint[0] && ! match[3] ) {\n\t\t\t\t\t\t\t// Class name matched primary breakpoint name with no qualifier\n\t\t\t\t\t\t\tcolumn( i, breakpoint.name, match[1], match[2] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// If there was no control class, then automatic sizing is used\n\t\t\tif ( ! hasClass ) {\n\t\t\t\tcol.auto = true;\n\t\t\t}\n\t\t} );\n\n\t\tthis.s.columns = columns;\n\t},\n\n\t/**\n\t * Update the cells to show the correct control class / button\n\t * @private\n\t */\n\t_controlClass: function ()\n\t{\n\t\tif ( this.c.details.type === 'inline' ) {\n\t\t\tvar dt = this.s.dt;\n\t\t\tvar columnsVis = this.s.current;\n\t\t\tvar firstVisible = $.inArray(true, columnsVis);\n\n\t\t\t// Remove from any cells which shouldn't have it\n\t\t\tdt.cells(\n\t\t\t\tnull,\n\t\t\t\tfunction(idx) {\n\t\t\t\t\treturn idx !== firstVisible;\n\t\t\t\t},\n\t\t\t\t{page: 'current'}\n\t\t\t)\n\t\t\t\t.nodes()\n\t\t\t\t.to$()\n\t\t\t\t.filter('.dtr-control')\n\t\t\t\t.removeClass('dtr-control');\n\n\t\t\tdt.cells(null, firstVisible, {page: 'current'})\n\t\t\t\t.nodes()\n\t\t\t\t.to$()\n\t\t\t\t.addClass('dtr-control');\n\t\t}\n\t},\n\n\t/**\n\t * Show the details for the child row\n\t *\n\t * @param  {DataTables.Api} row    API instance for the row\n\t * @param  {boolean}        update Update flag\n\t * @private\n\t */\n\t_detailsDisplay: function ( row, update )\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar details = this.c.details;\n\n\t\tif ( details && details.type !== false ) {\n\t\t\tvar renderer = typeof details.renderer === 'string'\n\t\t\t\t? Responsive.renderer[details.renderer]()\n\t\t\t\t: details.renderer;\n\n\t\t\tvar res = details.display( row, update, function () {\n\t\t\t\treturn renderer.call(\n\t\t\t\t\tthat, dt, row[0], that._detailsObj(row[0])\n\t\t\t\t);\n\t\t\t} );\n\n\t\t\tif ( res === true || res === false ) {\n\t\t\t\t$(dt.table().node()).triggerHandler( 'responsive-display.dt', [dt, row, res, update] );\n\t\t\t}\n\t\t}\n\t},\n\n\n\t/**\n\t * Initialisation for the details handler\n\t *\n\t * @private\n\t */\n\t_detailsInit: function ()\n\t{\n\t\tvar that    = this;\n\t\tvar dt      = this.s.dt;\n\t\tvar details = this.c.details;\n\n\t\t// The inline type always uses the first child as the target\n\t\tif ( details.type === 'inline' ) {\n\t\t\tdetails.target = 'td.dtr-control, th.dtr-control';\n\t\t}\n\n\t\t// Keyboard accessibility\n\t\tdt.on( 'draw.dtr', function () {\n\t\t\tthat._tabIndexes();\n\t\t} );\n\t\tthat._tabIndexes(); // Initial draw has already happened\n\n\t\t$( dt.table().body() ).on( 'keyup.dtr', 'td, th', function (e) {\n\t\t\tif ( e.keyCode === 13 && $(this).data('dtr-keyboard') ) {\n\t\t\t\t$(this).click();\n\t\t\t}\n\t\t} );\n\n\t\t// type.target can be a string jQuery selector or a column index\n\t\tvar target   = details.target;\n\t\tvar selector = typeof target === 'string' ? target : 'td, th';\n\n\t\tif ( target !== undefined || target !== null ) {\n\t\t\t// Click handler to show / hide the details rows when they are available\n\t\t\t$( dt.table().body() )\n\t\t\t\t.on( 'click.dtr mousedown.dtr mouseup.dtr', selector, function (e) {\n\t\t\t\t\t// If the table is not collapsed (i.e. there is no hidden columns)\n\t\t\t\t\t// then take no action\n\t\t\t\t\tif ( ! $(dt.table().node()).hasClass('collapsed' ) ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check that the row is actually a DataTable's controlled node\n\t\t\t\t\tif ( $.inArray( $(this).closest('tr').get(0), dt.rows().nodes().toArray() ) === -1 ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// For column index, we determine if we should act or not in the\n\t\t\t\t\t// handler - otherwise it is already okay\n\t\t\t\t\tif ( typeof target === 'number' ) {\n\t\t\t\t\t\tvar targetIdx = target < 0 ?\n\t\t\t\t\t\t\tdt.columns().eq(0).length + target :\n\t\t\t\t\t\t\ttarget;\n\n\t\t\t\t\t\tif ( dt.cell( this ).index().column !== targetIdx ) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// $().closest() includes itself in its check\n\t\t\t\t\tvar row = dt.row( $(this).closest('tr') );\n\n\t\t\t\t\t// Check event type to do an action\n\t\t\t\t\tif ( e.type === 'click' ) {\n\t\t\t\t\t\t// The renderer is given as a function so the caller can execute it\n\t\t\t\t\t\t// only when they need (i.e. if hiding there is no point is running\n\t\t\t\t\t\t// the renderer)\n\t\t\t\t\t\tthat._detailsDisplay( row, false );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( e.type === 'mousedown' ) {\n\t\t\t\t\t\t// For mouse users, prevent the focus ring from showing\n\t\t\t\t\t\t$(this).css('outline', 'none');\n\t\t\t\t\t}\n\t\t\t\t\telse if ( e.type === 'mouseup' ) {\n\t\t\t\t\t\t// And then re-allow at the end of the click\n\t\t\t\t\t\t$(this).trigger('blur').css('outline', '');\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}\n\t},\n\n\n\t/**\n\t * Get the details to pass to a renderer for a row\n\t * @param  {int} rowIdx Row index\n\t * @private\n\t */\n\t_detailsObj: function ( rowIdx )\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\n\t\treturn $.map( this.s.columns, function( col, i ) {\n\t\t\t// Never and control columns should not be passed to the renderer\n\t\t\tif ( col.never || col.control ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar dtCol = dt.settings()[0].aoColumns[ i ];\n\n\t\t\treturn {\n\t\t\t\tclassName:   dtCol.sClass,\n\t\t\t\tcolumnIndex: i,\n\t\t\t\tdata:        dt.cell( rowIdx, i ).render( that.c.orthogonal ),\n\t\t\t\thidden:      dt.column( i ).visible() && !that.s.current[ i ],\n\t\t\t\trowIndex:    rowIdx,\n\t\t\t\ttitle:       dtCol.sTitle !== null ?\n\t\t\t\t\tdtCol.sTitle :\n\t\t\t\t\t$(dt.column(i).header()).text()\n\t\t\t};\n\t\t} );\n\t},\n\n\n\t/**\n\t * Find a breakpoint object from a name\n\t *\n\t * @param  {string} name Breakpoint name to find\n\t * @return {object}      Breakpoint description object\n\t * @private\n\t */\n\t_find: function ( name )\n\t{\n\t\tvar breakpoints = this.c.breakpoints;\n\n\t\tfor ( var i=0, ien=breakpoints.length ; i<ien ; i++ ) {\n\t\t\tif ( breakpoints[i].name === name ) {\n\t\t\t\treturn breakpoints[i];\n\t\t\t}\n\t\t}\n\t},\n\n\n\t/**\n\t * Re-create the contents of the child rows as the display has changed in\n\t * some way.\n\t *\n\t * @private\n\t */\n\t_redrawChildren: function ()\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\n\t\tdt.rows( {page: 'current'} ).iterator( 'row', function ( settings, idx ) {\n\t\t\tvar row = dt.row( idx );\n\n\t\t\tthat._detailsDisplay( dt.row( idx ), true );\n\t\t} );\n\t},\n\n\n\t/**\n\t * Alter the table display for a resized viewport. This involves first\n\t * determining what breakpoint the window currently is in, getting the\n\t * column visibilities to apply and then setting them.\n\t *\n\t * @param  {boolean} forceRedraw Force a redraw\n\t * @private\n\t */\n\t_resize: function (forceRedraw)\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar width = $(window).innerWidth();\n\t\tvar breakpoints = this.c.breakpoints;\n\t\tvar breakpoint = breakpoints[0].name;\n\t\tvar columns = this.s.columns;\n\t\tvar i, ien;\n\t\tvar oldVis = this.s.current.slice();\n\n\t\t// Determine what breakpoint we are currently at\n\t\tfor ( i=breakpoints.length-1 ; i>=0 ; i-- ) {\n\t\t\tif ( width <= breakpoints[i].width ) {\n\t\t\t\tbreakpoint = breakpoints[i].name;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Show the columns for that break point\n\t\tvar columnsVis = this._columnsVisiblity( breakpoint );\n\t\tthis.s.current = columnsVis;\n\n\t\t// Set the class before the column visibility is changed so event\n\t\t// listeners know what the state is. Need to determine if there are\n\t\t// any columns that are not visible but can be shown\n\t\tvar collapsedClass = false;\n\t\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tif ( columnsVis[i] === false && ! columns[i].never && ! columns[i].control && ! dt.column(i).visible() === false ) {\n\t\t\t\tcollapsedClass = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t$( dt.table().node() ).toggleClass( 'collapsed', collapsedClass );\n\n\t\tvar changed = false;\n\t\tvar visible = 0;\n\n\t\tdt.columns().eq(0).each( function ( colIdx, i ) {\n\t\t\tif ( columnsVis[i] === true ) {\n\t\t\t\tvisible++;\n\t\t\t}\n\n\t\t\tif ( forceRedraw || columnsVis[i] !== oldVis[i] ) {\n\t\t\t\tchanged = true;\n\t\t\t\tthat._setColumnVis( colIdx, columnsVis[i] );\n\t\t\t}\n\t\t} );\n\n\t\t// Always need to update the display, regardless of if it has changed or not, so nodes\n\t\t// can be re-inserted for listHiddenNodes\n\t\tthis._redrawChildren();\n\n\t\tif ( changed ) {\n\t\t\t// Inform listeners of the change\n\t\t\t$(dt.table().node()).trigger( 'responsive-resize.dt', [dt, this.s.current] );\n\n\t\t\t// If no records, update the \"No records\" display element\n\t\t\tif ( dt.page.info().recordsDisplay === 0 ) {\n\t\t\t\t$('td', dt.table().body()).eq(0).attr('colspan', visible);\n\t\t\t}\n\t\t}\n\n\t\tthat._controlClass();\n\t},\n\n\n\t/**\n\t * Determine the width of each column in the table so the auto column hiding\n\t * has that information to work with. This method is never going to be 100%\n\t * perfect since column widths can change slightly per page, but without\n\t * seriously compromising performance this is quite effective.\n\t *\n\t * @private\n\t */\n\t_resizeAuto: function ()\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar columns = this.s.columns;\n\t\tvar that = this;\n\n\t\t// Are we allowed to do auto sizing?\n\t\tif ( ! this.c.auto ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Are there any columns that actually need auto-sizing, or do they all\n\t\t// have classes defined\n\t\tif ( $.inArray( true, $.map( columns, function (c) { return c.auto; } ) ) === -1 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Need to restore all children. They will be reinstated by a re-render\n\t\tif ( ! $.isEmptyObject( this.s.childNodeStore ) ) {\n\t\t\t$.each( this.s.childNodeStore, function ( key ) {\n\t\t\t\tvar idx = key.split('-');\n\n\t\t\t\tthat._childNodesRestore( dt, idx[0]*1, idx[1]*1 );\n\t\t\t} );\n\t\t}\n\n\t\t// Clone the table with the current data in it\n\t\tvar tableWidth   = dt.table().node().offsetWidth;\n\t\tvar columnWidths = dt.columns;\n\t\tvar clonedTable  = dt.table().node().cloneNode( false );\n\t\tvar clonedHeader = $( dt.table().header().cloneNode( false ) ).appendTo( clonedTable );\n\t\tvar clonedBody   = $( dt.table().body() ).clone( false, false ).empty().appendTo( clonedTable ); // use jQuery because of IE8\n\n\t\tclonedTable.style.width = 'auto';\n\n\t\t// Header\n\t\tvar headerCells = dt.columns()\n\t\t\t.header()\n\t\t\t.filter( function (idx) {\n\t\t\t\treturn dt.column(idx).visible();\n\t\t\t} )\n\t\t\t.to$()\n\t\t\t.clone( false )\n\t\t\t.css( 'display', 'table-cell' )\n\t\t\t.css( 'width', 'auto' )\n\t\t\t.css( 'min-width', 0 );\n\n\t\t// Body rows - we don't need to take account of DataTables' column\n\t\t// visibility since we implement our own here (hence the `display` set)\n\t\t$(clonedBody)\n\t\t\t.append( $(dt.rows( { page: 'current' } ).nodes()).clone( false ) )\n\t\t\t.find( 'th, td' ).css( 'display', '' );\n\n\t\t// Footer\n\t\tvar footer = dt.table().footer();\n\t\tif ( footer ) {\n\t\t\tvar clonedFooter = $( footer.cloneNode( false ) ).appendTo( clonedTable );\n\t\t\tvar footerCells = dt.columns()\n\t\t\t\t.footer()\n\t\t\t\t.filter( function (idx) {\n\t\t\t\t\treturn dt.column(idx).visible();\n\t\t\t\t} )\n\t\t\t\t.to$()\n\t\t\t\t.clone( false )\n\t\t\t\t.css( 'display', 'table-cell' );\n\n\t\t\t$('<tr/>')\n\t\t\t\t.append( footerCells )\n\t\t\t\t.appendTo( clonedFooter );\n\t\t}\n\n\t\t$('<tr/>')\n\t\t\t.append( headerCells )\n\t\t\t.appendTo( clonedHeader );\n\n\t\t// In the inline case extra padding is applied to the first column to\n\t\t// give space for the show / hide icon. We need to use this in the\n\t\t// calculation\n\t\tif ( this.c.details.type === 'inline' ) {\n\t\t\t$(clonedTable).addClass( 'dtr-inline collapsed' );\n\t\t}\n\t\t\n\t\t// It is unsafe to insert elements with the same name into the DOM\n\t\t// multiple times. For example, cloning and inserting a checked radio\n\t\t// clears the chcecked state of the original radio.\n\t\t$( clonedTable ).find( '[name]' ).removeAttr( 'name' );\n\n\t\t// A position absolute table would take the table out of the flow of\n\t\t// our container element, bypassing the height and width (Scroller)\n\t\t$( clonedTable ).css( 'position', 'relative' )\n\t\t\n\t\tvar inserted = $('<div/>')\n\t\t\t.css( {\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1,\n\t\t\t\toverflow: 'hidden',\n\t\t\t\tclear: 'both'\n\t\t\t} )\n\t\t\t.append( clonedTable );\n\n\t\tinserted.insertBefore( dt.table().node() );\n\n\t\t// The cloned header now contains the smallest that each column can be\n\t\theaderCells.each( function (i) {\n\t\t\tvar idx = dt.column.index( 'fromVisible', i );\n\t\t\tcolumns[ idx ].minWidth =  this.offsetWidth || 0;\n\t\t} );\n\n\t\tinserted.remove();\n\t},\n\n\t/**\n\t * Get the state of the current hidden columns - controlled by Responsive only\n\t */\n\t_responsiveOnlyHidden: function ()\n\t{\n\t\tvar dt = this.s.dt;\n\n\t\treturn $.map( this.s.current, function (v, i) {\n\t\t\t// If the column is hidden by DataTables then it can't be hidden by\n\t\t\t// Responsive!\n\t\t\tif ( dt.column(i).visible() === false ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn v;\n\t\t} );\n\t},\n\n\t/**\n\t * Set a column's visibility.\n\t *\n\t * We don't use DataTables' column visibility controls in order to ensure\n\t * that column visibility can Responsive can no-exist. Since only IE8+ is\n\t * supported (and all evergreen browsers of course) the control of the\n\t * display attribute works well.\n\t *\n\t * @param {integer} col      Column index\n\t * @param {boolean} showHide Show or hide (true or false)\n\t * @private\n\t */\n\t_setColumnVis: function ( col, showHide )\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar display = showHide ? '' : 'none'; // empty string will remove the attr\n\n\t\t$( dt.column( col ).header() )\n\t\t\t.css( 'display', display )\n\t\t\t.toggleClass('dtr-hidden', !showHide);\n\n\t\t$( dt.column( col ).footer() )\n\t\t\t.css( 'display', display )\n\t\t\t.toggleClass('dtr-hidden', !showHide);\n\n\t\tdt.column( col ).nodes().to$()\n\t\t\t.css( 'display', display )\n\t\t\t.toggleClass('dtr-hidden', !showHide);\n\n\t\t// If the are child nodes stored, we might need to reinsert them\n\t\tif ( ! $.isEmptyObject( this.s.childNodeStore ) ) {\n\t\t\tdt.cells( null, col ).indexes().each( function (idx) {\n\t\t\t\tthat._childNodesRestore( dt, idx.row, idx.column );\n\t\t\t} );\n\t\t}\n\t},\n\n\n\t/**\n\t * Update the cell tab indexes for keyboard accessibility. This is called on\n\t * every table draw - that is potentially inefficient, but also the least\n\t * complex option given that column visibility can change on the fly. Its a\n\t * shame user-focus was removed from CSS 3 UI, as it would have solved this\n\t * issue with a single CSS statement.\n\t *\n\t * @private\n\t */\n\t_tabIndexes: function ()\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar cells = dt.cells( { page: 'current' } ).nodes().to$();\n\t\tvar ctx = dt.settings()[0];\n\t\tvar target = this.c.details.target;\n\n\t\tcells.filter( '[data-dtr-keyboard]' ).removeData( '[data-dtr-keyboard]' );\n\n\t\tif ( typeof target === 'number' ) {\n\t\t\tdt.cells( null, target, { page: 'current' } ).nodes().to$()\n\t\t\t\t.attr( 'tabIndex', ctx.iTabIndex )\n\t\t\t\t.data( 'dtr-keyboard', 1 );\n\t\t}\n\t\telse {\n\t\t\t// This is a bit of a hack - we need to limit the selected nodes to just\n\t\t\t// those of this table\n\t\t\tif ( target === 'td:first-child, th:first-child' ) {\n\t\t\t\ttarget = '>td:first-child, >th:first-child';\n\t\t\t}\n\n\t\t\t$( target, dt.rows( { page: 'current' } ).nodes() )\n\t\t\t\t.attr( 'tabIndex', ctx.iTabIndex )\n\t\t\t\t.data( 'dtr-keyboard', 1 );\n\t\t}\n\t}\n} );\n\n\n/**\n * List of default breakpoints. Each item in the array is an object with two\n * properties:\n *\n * * `name` - the breakpoint name.\n * * `width` - the breakpoint width\n *\n * @name Responsive.breakpoints\n * @static\n */\nResponsive.breakpoints = [\n\t{ name: 'desktop',  width: Infinity },\n\t{ name: 'tablet-l', width: 1024 },\n\t{ name: 'tablet-p', width: 768 },\n\t{ name: 'mobile-l', width: 480 },\n\t{ name: 'mobile-p', width: 320 }\n];\n\n\n/**\n * Display methods - functions which define how the hidden data should be shown\n * in the table.\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.display = {\n\tchildRow: function ( row, update, render ) {\n\t\tif ( update ) {\n\t\t\tif ( $(row.node()).hasClass('parent') ) {\n\t\t\t\trow.child( render(), 'child' ).show();\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif ( ! row.child.isShown()  ) {\n\t\t\t\trow.child( render(), 'child' ).show();\n\t\t\t\t$( row.node() ).addClass( 'parent' );\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\trow.child( false );\n\t\t\t\t$( row.node() ).removeClass( 'parent' );\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\n\tchildRowImmediate: function ( row, update, render ) {\n\t\tif ( (! update && row.child.isShown()) || ! row.responsive.hasHidden() ) {\n\t\t\t// User interaction and the row is show, or nothing to show\n\t\t\trow.child( false );\n\t\t\t$( row.node() ).removeClass( 'parent' );\n\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\t// Display\n\t\t\trow.child( render(), 'child' ).show();\n\t\t\t$( row.node() ).addClass( 'parent' );\n\n\t\t\treturn true;\n\t\t}\n\t},\n\n\t// This is a wrapper so the modal options for Bootstrap and jQuery UI can\n\t// have options passed into them. This specific one doesn't need to be a\n\t// function but it is for consistency in the `modal` name\n\tmodal: function ( options ) {\n\t\treturn function ( row, update, render ) {\n\t\t\tif ( ! update ) {\n\t\t\t\t// Show a modal\n\t\t\t\tvar close = function () {\n\t\t\t\t\tmodal.remove(); // will tidy events for us\n\t\t\t\t\t$(document).off( 'keypress.dtr' );\n\t\t\t\t};\n\n\t\t\t\tvar modal = $('<div class=\"dtr-modal\"/>')\n\t\t\t\t\t.append( $('<div class=\"dtr-modal-display\"/>')\n\t\t\t\t\t\t.append( $('<div class=\"dtr-modal-content\"/>')\n\t\t\t\t\t\t\t.append( render() )\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.append( $('<div class=\"dtr-modal-close\">&times;</div>' )\n\t\t\t\t\t\t\t.click( function () {\n\t\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\t.append( $('<div class=\"dtr-modal-background\"/>')\n\t\t\t\t\t\t.click( function () {\n\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t} )\n\t\t\t\t\t)\n\t\t\t\t\t.appendTo( 'body' );\n\n\t\t\t\t$(document).on( 'keyup.dtr', function (e) {\n\t\t\t\t\tif ( e.keyCode === 27 ) {\n\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\tclose();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$('div.dtr-modal-content')\n\t\t\t\t\t.empty()\n\t\t\t\t\t.append( render() );\n\t\t\t}\n\n\t\t\tif ( options && options.header ) {\n\t\t\t\t$('div.dtr-modal-content').prepend(\n\t\t\t\t\t'<h2>'+options.header( row )+'</h2>'\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\t}\n};\n\n\n/**\n * Display methods - functions which define how the hidden data should be shown\n * in the table.\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.renderer = {\n\tlistHiddenNodes: function () {\n\t\treturn function ( api, rowIdx, columns ) {\n\t\t\tvar that = this;\n\t\t\tvar ul = $('<ul data-dtr-index=\"'+rowIdx+'\" class=\"dtr-details\"/>');\n\t\t\tvar found = false;\n\n\t\t\tvar data = $.each( columns, function ( i, col ) {\n\t\t\t\tif ( col.hidden ) {\n\t\t\t\t\tvar klass = col.className ?\n\t\t\t\t\t\t'class=\"'+ col.className +'\"' :\n\t\t\t\t\t\t'';\n\t\n\t\t\t\t\t$(\n\t\t\t\t\t\t'<li '+klass+' data-dtr-index=\"'+col.columnIndex+'\" data-dt-row=\"'+col.rowIndex+'\" data-dt-column=\"'+col.columnIndex+'\">'+\n\t\t\t\t\t\t\t'<span class=\"dtr-title\">'+\n\t\t\t\t\t\t\t\tcol.title+\n\t\t\t\t\t\t\t'</span> '+\n\t\t\t\t\t\t'</li>'\n\t\t\t\t\t)\n\t\t\t\t\t\t.append( $('<span class=\"dtr-data\"/>').append( that._childNodes( api, col.rowIndex, col.columnIndex ) ) )// api.cell( col.rowIndex, col.columnIndex ).node().childNodes ) )\n\t\t\t\t\t\t.appendTo( ul );\n\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\treturn found ?\n\t\t\t\tul :\n\t\t\t\tfalse;\n\t\t};\n\t},\n\n\tlistHidden: function () {\n\t\treturn function ( api, rowIdx, columns ) {\n\t\t\tvar data = $.map( columns, function ( col ) {\n\t\t\t\tvar klass = col.className ?\n\t\t\t\t\t'class=\"'+ col.className +'\"' :\n\t\t\t\t\t'';\n\n\t\t\t\treturn col.hidden ?\n\t\t\t\t\t'<li '+klass+' data-dtr-index=\"'+col.columnIndex+'\" data-dt-row=\"'+col.rowIndex+'\" data-dt-column=\"'+col.columnIndex+'\">'+\n\t\t\t\t\t\t'<span class=\"dtr-title\">'+\n\t\t\t\t\t\t\tcol.title+\n\t\t\t\t\t\t'</span> '+\n\t\t\t\t\t\t'<span class=\"dtr-data\">'+\n\t\t\t\t\t\t\tcol.data+\n\t\t\t\t\t\t'</span>'+\n\t\t\t\t\t'</li>' :\n\t\t\t\t\t'';\n\t\t\t} ).join('');\n\n\t\t\treturn data ?\n\t\t\t\t$('<ul data-dtr-index=\"'+rowIdx+'\" class=\"dtr-details\"/>').append( data ) :\n\t\t\t\tfalse;\n\t\t}\n\t},\n\n\ttableAll: function ( options ) {\n\t\toptions = $.extend( {\n\t\t\ttableClass: ''\n\t\t}, options );\n\n\t\treturn function ( api, rowIdx, columns ) {\n\t\t\tvar data = $.map( columns, function ( col ) {\n\t\t\t\tvar klass = col.className ?\n\t\t\t\t\t'class=\"'+ col.className +'\"' :\n\t\t\t\t\t'';\n\n\t\t\t\treturn '<tr '+klass+' data-dt-row=\"'+col.rowIndex+'\" data-dt-column=\"'+col.columnIndex+'\">'+\n\t\t\t\t\t\t'<td>'+col.title+':'+'</td> '+\n\t\t\t\t\t\t'<td>'+col.data+'</td>'+\n\t\t\t\t\t'</tr>';\n\t\t\t} ).join('');\n\n\t\t\treturn $('<table class=\"'+options.tableClass+' dtr-details\" width=\"100%\"/>').append( data );\n\t\t}\n\t}\n};\n\n/**\n * Responsive default settings for initialisation\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.defaults = {\n\t/**\n\t * List of breakpoints for the instance. Note that this means that each\n\t * instance can have its own breakpoints. Additionally, the breakpoints\n\t * cannot be changed once an instance has been creased.\n\t *\n\t * @type {Array}\n\t * @default Takes the value of `Responsive.breakpoints`\n\t */\n\tbreakpoints: Responsive.breakpoints,\n\n\t/**\n\t * Enable / disable auto hiding calculations. It can help to increase\n\t * performance slightly if you disable this option, but all columns would\n\t * need to have breakpoint classes assigned to them\n\t *\n\t * @type {Boolean}\n\t * @default  `true`\n\t */\n\tauto: true,\n\n\t/**\n\t * Details control. If given as a string value, the `type` property of the\n\t * default object is set to that value, and the defaults used for the rest\n\t * of the object - this is for ease of implementation.\n\t *\n\t * The object consists of the following properties:\n\t *\n\t * * `display` - A function that is used to show and hide the hidden details\n\t * * `renderer` - function that is called for display of the child row data.\n\t *   The default function will show the data from the hidden columns\n\t * * `target` - Used as the selector for what objects to attach the child\n\t *   open / close to\n\t * * `type` - `false` to disable the details display, `inline` or `column`\n\t *   for the two control types\n\t *\n\t * @type {Object|string}\n\t */\n\tdetails: {\n\t\tdisplay: Responsive.display.childRow,\n\n\t\trenderer: Responsive.renderer.listHidden(),\n\n\t\ttarget: 0,\n\n\t\ttype: 'inline'\n\t},\n\n\t/**\n\t * Orthogonal data request option. This is used to define the data type\n\t * requested when Responsive gets the data to show in the child row.\n\t *\n\t * @type {String}\n\t */\n\torthogonal: 'display'\n};\n\n\n/*\n * API\n */\nvar Api = $.fn.dataTable.Api;\n\n// Doesn't do anything - work around for a bug in DT... Not documented\nApi.register( 'responsive()', function () {\n\treturn this;\n} );\n\nApi.register( 'responsive.index()', function ( li ) {\n\tli = $(li);\n\n\treturn {\n\t\tcolumn: li.data('dtr-index'),\n\t\trow:    li.parent().data('dtr-index')\n\t};\n} );\n\nApi.register( 'responsive.rebuild()', function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tif ( ctx._responsive ) {\n\t\t\tctx._responsive._classLogic();\n\t\t}\n\t} );\n} );\n\nApi.register( 'responsive.recalc()', function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tif ( ctx._responsive ) {\n\t\t\tctx._responsive._resizeAuto();\n\t\t\tctx._responsive._resize();\n\t\t}\n\t} );\n} );\n\nApi.register( 'responsive.hasHidden()', function () {\n\tvar ctx = this.context[0];\n\n\treturn ctx._responsive ?\n\t\t$.inArray( false, ctx._responsive._responsiveOnlyHidden() ) !== -1 :\n\t\tfalse;\n} );\n\nApi.registerPlural( 'columns().responsiveHidden()', 'column().responsiveHidden()', function () {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn settings._responsive ?\n\t\t\tsettings._responsive._responsiveOnlyHidden()[ column ] :\n\t\t\tfalse;\n\t}, 1 );\n} );\n\n\n/**\n * Version information\n *\n * @name Responsive.version\n * @static\n */\nResponsive.version = '2.4.1';\n\n\n$.fn.dataTable.Responsive = Responsive;\n$.fn.DataTable.Responsive = Responsive;\n\n// Attach a listener to the document which listens for DataTables initialisation\n// events so we can automatically initialise\n$(document).on( 'preInit.dt.dtr', function (e, settings, json) {\n\tif ( e.namespace !== 'dt' ) {\n\t\treturn;\n\t}\n\n\tif ( $(settings.nTable).hasClass( 'responsive' ) ||\n\t\t $(settings.nTable).hasClass( 'dt-responsive' ) ||\n\t\t settings.oInit.responsive ||\n\t\t DataTable.defaults.responsive\n\t) {\n\t\tvar init = settings.oInit.responsive;\n\n\t\tif ( init !== false ) {\n\t\t\tnew Responsive( settings, $.isPlainObject( init ) ? init : {}  );\n\t\t}\n\t}\n} );\n\n\nreturn DataTable;\n}));\n","/*! DataTables 1.13.4\n * ©2008-2023 SpryMedia Ltd - datatables.net/license\n */\n\nimport jQuery from 'jquery';\n\n// DataTables code uses $ internally, but we want to be able to\n// reassign $ with the `use` method, so it is a regular var.\nlet $ = jQuery;\n\n\nvar DataTable = function ( selector, options )\n{\n\t// Check if called with a window or jQuery object for DOM less applications\n\t// This is for backwards compatibility\n\tif (DataTable.factory(selector, options)) {\n\t\treturn DataTable;\n\t}\n\n\t// When creating with `new`, create a new DataTable, returning the API instance\n\tif (this instanceof DataTable) {\n\t\treturn $(selector).DataTable(options);\n\t}\n\telse {\n\t\t// Argument switching\n\t\toptions = selector;\n\t}\n\n\t/**\n\t * Perform a jQuery selector action on the table's TR elements (from the tbody) and\n\t * return the resulting jQuery object.\n\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter\n\t *    criterion (\"applied\") or all TR elements (i.e. no filter).\n\t *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.\n\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t *    'original' whereby the original order the data was read into the table is used.\n\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t *  @returns {object} jQuery object, filtered by the given selector.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Highlight every second row\n\t *      oTable.$('tr:odd').css('backgroundColor', 'blue');\n\t *    } );\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Filter to rows with 'Webkit' in them, add a background colour and then\n\t *      // remove the filter, thus highlighting the 'Webkit' rows only.\n\t *      oTable.fnFilter('Webkit');\n\t *      oTable.$('tr', {\"search\": \"applied\"}).css('backgroundColor', 'blue');\n\t *      oTable.fnFilter('');\n\t *    } );\n\t */\n\tthis.$ = function ( sSelector, oOpts )\n\t{\n\t\treturn this.api(true).$( sSelector, oOpts );\n\t};\n\t\n\t\n\t/**\n\t * Almost identical to $ in operation, but in this case returns the data for the matched\n\t * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes\n\t * rather than any descendants, so the data can be obtained for the row/cell. If matching\n\t * rows are found, the data returned is the original data array/object that was used to\n\t * create the row (or a generated array if from a DOM source).\n\t *\n\t * This method is often useful in-combination with $ where both functions are given the\n\t * same parameters and the array indexes will match identically.\n\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t *  @param {string} [oOpts.filter=none] Select elements that meet the current filter\n\t *    criterion (\"applied\") or all elements (i.e. no filter).\n\t *  @param {string} [oOpts.order=current] Order of the data in the processed array.\n\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t *    'original' whereby the original order the data was read into the table is used.\n\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t *  @returns {array} Data for the matched elements. If any elements, as a result of the\n\t *    selector, were not TR, TD or TH elements in the DataTable, they will have a null\n\t *    entry in the array.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Get the data from the first row in the table\n\t *      var data = oTable._('tr:first');\n\t *\n\t *      // Do something useful with the data\n\t *      alert( \"First cell is: \"+data[0] );\n\t *    } );\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Filter to 'Webkit' and get all data for\n\t *      oTable.fnFilter('Webkit');\n\t *      var data = oTable._('tr', {\"search\": \"applied\"});\n\t *\n\t *      // Do something with the data\n\t *      alert( data.length+\" rows matched the search\" );\n\t *    } );\n\t */\n\tthis._ = function ( sSelector, oOpts )\n\t{\n\t\treturn this.api(true).rows( sSelector, oOpts ).data();\n\t};\n\t\n\t\n\t/**\n\t * Create a DataTables Api instance, with the currently selected tables for\n\t * the Api's context.\n\t * @param {boolean} [traditional=false] Set the API instance's context to be\n\t *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was\n\t *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),\n\t *   or if all tables captured in the jQuery object should be used.\n\t * @return {DataTables.Api}\n\t */\n\tthis.api = function ( traditional )\n\t{\n\t\treturn traditional ?\n\t\t\tnew _Api(\n\t\t\t\t_fnSettingsFromNode( this[ _ext.iApiIndex ] )\n\t\t\t) :\n\t\t\tnew _Api( this );\n\t};\n\t\n\t\n\t/**\n\t * Add a single new row or multiple rows of data to the table. Please note\n\t * that this is suitable for client-side processing only - if you are using\n\t * server-side processing (i.e. \"bServerSide\": true), then to add data, you\n\t * must add it to the data source, i.e. the server-side, through an Ajax call.\n\t *  @param {array|object} data The data to be added to the table. This can be:\n\t *    <ul>\n\t *      <li>1D array of data - add a single row with the data provided</li>\n\t *      <li>2D array of arrays - add multiple rows in a single call</li>\n\t *      <li>object - data object when using <i>mData</i></li>\n\t *      <li>array of objects - multiple data objects when using <i>mData</i></li>\n\t *    </ul>\n\t *  @param {bool} [redraw=true] redraw the table or not\n\t *  @returns {array} An array of integers, representing the list of indexes in\n\t *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to\n\t *    the table.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    // Global var for counter\n\t *    var giCount = 2;\n\t *\n\t *    $(document).ready(function() {\n\t *      $('#example').dataTable();\n\t *    } );\n\t *\n\t *    function fnClickAddRow() {\n\t *      $('#example').dataTable().fnAddData( [\n\t *        giCount+\".1\",\n\t *        giCount+\".2\",\n\t *        giCount+\".3\",\n\t *        giCount+\".4\" ]\n\t *      );\n\t *\n\t *      giCount++;\n\t *    }\n\t */\n\tthis.fnAddData = function( data, redraw )\n\t{\n\t\tvar api = this.api( true );\n\t\n\t\t/* Check if we want to add multiple rows or not */\n\t\tvar rows = Array.isArray(data) && ( Array.isArray(data[0]) || $.isPlainObject(data[0]) ) ?\n\t\t\tapi.rows.add( data ) :\n\t\t\tapi.row.add( data );\n\t\n\t\tif ( redraw === undefined || redraw ) {\n\t\t\tapi.draw();\n\t\t}\n\t\n\t\treturn rows.flatten().toArray();\n\t};\n\t\n\t\n\t/**\n\t * This function will make DataTables recalculate the column sizes, based on the data\n\t * contained in the table and the sizes applied to the columns (in the DOM, CSS or\n\t * through the sWidth parameter). This can be useful when the width of the table's\n\t * parent element changes (for example a window resize).\n\t *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable( {\n\t *        \"sScrollY\": \"200px\",\n\t *        \"bPaginate\": false\n\t *      } );\n\t *\n\t *      $(window).on('resize', function () {\n\t *        oTable.fnAdjustColumnSizing();\n\t *      } );\n\t *    } );\n\t */\n\tthis.fnAdjustColumnSizing = function ( bRedraw )\n\t{\n\t\tvar api = this.api( true ).columns.adjust();\n\t\tvar settings = api.settings()[0];\n\t\tvar scroll = settings.oScroll;\n\t\n\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\tapi.draw( false );\n\t\t}\n\t\telse if ( scroll.sX !== \"\" || scroll.sY !== \"\" ) {\n\t\t\t/* If not redrawing, but scrolling, we want to apply the new column sizes anyway */\n\t\t\t_fnScrollDraw( settings );\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Quickly and simply clear a table\n\t *  @param {bool} [bRedraw=true] redraw the table or not\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)\n\t *      oTable.fnClearTable();\n\t *    } );\n\t */\n\tthis.fnClearTable = function( bRedraw )\n\t{\n\t\tvar api = this.api( true ).clear();\n\t\n\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\tapi.draw();\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * The exact opposite of 'opening' a row, this function will close any rows which\n\t * are currently 'open'.\n\t *  @param {node} nTr the table row to 'close'\n\t *  @returns {int} 0 on success, or 1 if failed (can't find the row)\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable;\n\t *\n\t *      // 'open' an information row when a row is clicked on\n\t *      $('#example tbody tr').click( function () {\n\t *        if ( oTable.fnIsOpen(this) ) {\n\t *          oTable.fnClose( this );\n\t *        } else {\n\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t *        }\n\t *      } );\n\t *\n\t *      oTable = $('#example').dataTable();\n\t *    } );\n\t */\n\tthis.fnClose = function( nTr )\n\t{\n\t\tthis.api( true ).row( nTr ).child.hide();\n\t};\n\t\n\t\n\t/**\n\t * Remove a row for the table\n\t *  @param {mixed} target The index of the row from aoData to be deleted, or\n\t *    the TR element you want to delete\n\t *  @param {function|null} [callBack] Callback function\n\t *  @param {bool} [redraw=true] Redraw the table or not\n\t *  @returns {array} The row that was deleted\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Immediately remove the first row\n\t *      oTable.fnDeleteRow( 0 );\n\t *    } );\n\t */\n\tthis.fnDeleteRow = function( target, callback, redraw )\n\t{\n\t\tvar api = this.api( true );\n\t\tvar rows = api.rows( target );\n\t\tvar settings = rows.settings()[0];\n\t\tvar data = settings.aoData[ rows[0][0] ];\n\t\n\t\trows.remove();\n\t\n\t\tif ( callback ) {\n\t\t\tcallback.call( this, settings, data );\n\t\t}\n\t\n\t\tif ( redraw === undefined || redraw ) {\n\t\t\tapi.draw();\n\t\t}\n\t\n\t\treturn data;\n\t};\n\t\n\t\n\t/**\n\t * Restore the table to it's original state in the DOM by removing all of DataTables\n\t * enhancements, alterations to the DOM structure of the table and event listeners.\n\t *  @param {boolean} [remove=false] Completely remove the table from the DOM\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      // This example is fairly pointless in reality, but shows how fnDestroy can be used\n\t *      var oTable = $('#example').dataTable();\n\t *      oTable.fnDestroy();\n\t *    } );\n\t */\n\tthis.fnDestroy = function ( remove )\n\t{\n\t\tthis.api( true ).destroy( remove );\n\t};\n\t\n\t\n\t/**\n\t * Redraw the table\n\t *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)\n\t *      oTable.fnDraw();\n\t *    } );\n\t */\n\tthis.fnDraw = function( complete )\n\t{\n\t\t// Note that this isn't an exact match to the old call to _fnDraw - it takes\n\t\t// into account the new data, but can hold position.\n\t\tthis.api( true ).draw( complete );\n\t};\n\t\n\t\n\t/**\n\t * Filter the input based on data\n\t *  @param {string} sInput String to filter the table on\n\t *  @param {int|null} [iColumn] Column to limit filtering to\n\t *  @param {bool} [bRegex=false] Treat as regular expression or not\n\t *  @param {bool} [bSmart=true] Perform smart filtering or not\n\t *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)\n\t *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Sometime later - filter...\n\t *      oTable.fnFilter( 'test string' );\n\t *    } );\n\t */\n\tthis.fnFilter = function( sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive )\n\t{\n\t\tvar api = this.api( true );\n\t\n\t\tif ( iColumn === null || iColumn === undefined ) {\n\t\t\tapi.search( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\t}\n\t\telse {\n\t\t\tapi.column( iColumn ).search( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\t}\n\t\n\t\tapi.draw();\n\t};\n\t\n\t\n\t/**\n\t * Get the data for the whole table, an individual row or an individual cell based on the\n\t * provided parameters.\n\t *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as\n\t *    a TR node then the data source for the whole row will be returned. If given as a\n\t *    TD/TH cell node then iCol will be automatically calculated and the data for the\n\t *    cell returned. If given as an integer, then this is treated as the aoData internal\n\t *    data index for the row (see fnGetPosition) and the data for that row used.\n\t *  @param {int} [col] Optional column index that you want the data of.\n\t *  @returns {array|object|string} If mRow is undefined, then the data for all rows is\n\t *    returned. If mRow is defined, just data for that row, and is iCol is\n\t *    defined, only data for the designated cell is returned.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    // Row data\n\t *    $(document).ready(function() {\n\t *      oTable = $('#example').dataTable();\n\t *\n\t *      oTable.$('tr').click( function () {\n\t *        var data = oTable.fnGetData( this );\n\t *        // ... do something with the array / object of data for the row\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Individual cell data\n\t *    $(document).ready(function() {\n\t *      oTable = $('#example').dataTable();\n\t *\n\t *      oTable.$('td').click( function () {\n\t *        var sData = oTable.fnGetData( this );\n\t *        alert( 'The cell clicked on had the value of '+sData );\n\t *      } );\n\t *    } );\n\t */\n\tthis.fnGetData = function( src, col )\n\t{\n\t\tvar api = this.api( true );\n\t\n\t\tif ( src !== undefined ) {\n\t\t\tvar type = src.nodeName ? src.nodeName.toLowerCase() : '';\n\t\n\t\t\treturn col !== undefined || type == 'td' || type == 'th' ?\n\t\t\t\tapi.cell( src, col ).data() :\n\t\t\t\tapi.row( src ).data() || null;\n\t\t}\n\t\n\t\treturn api.data().toArray();\n\t};\n\t\n\t\n\t/**\n\t * Get an array of the TR nodes that are used in the table's body. Note that you will\n\t * typically want to use the '$' API method in preference to this as it is more\n\t * flexible.\n\t *  @param {int} [iRow] Optional row index for the TR element you want\n\t *  @returns {array|node} If iRow is undefined, returns an array of all TR elements\n\t *    in the table's body, or iRow is defined, just the TR element requested.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Get the nodes from the table\n\t *      var nNodes = oTable.fnGetNodes( );\n\t *    } );\n\t */\n\tthis.fnGetNodes = function( iRow )\n\t{\n\t\tvar api = this.api( true );\n\t\n\t\treturn iRow !== undefined ?\n\t\t\tapi.row( iRow ).node() :\n\t\t\tapi.rows().nodes().flatten().toArray();\n\t};\n\t\n\t\n\t/**\n\t * Get the array indexes of a particular cell from it's DOM element\n\t * and column index including hidden columns\n\t *  @param {node} node this can either be a TR, TD or TH in the table's body\n\t *  @returns {int} If nNode is given as a TR, then a single index is returned, or\n\t *    if given as a cell, an array of [row index, column index (visible),\n\t *    column index (all)] is given.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      $('#example tbody td').click( function () {\n\t *        // Get the position of the current data from the node\n\t *        var aPos = oTable.fnGetPosition( this );\n\t *\n\t *        // Get the data array for this row\n\t *        var aData = oTable.fnGetData( aPos[0] );\n\t *\n\t *        // Update the data array and return the value\n\t *        aData[ aPos[1] ] = 'clicked';\n\t *        this.innerHTML = 'clicked';\n\t *      } );\n\t *\n\t *      // Init DataTables\n\t *      oTable = $('#example').dataTable();\n\t *    } );\n\t */\n\tthis.fnGetPosition = function( node )\n\t{\n\t\tvar api = this.api( true );\n\t\tvar nodeName = node.nodeName.toUpperCase();\n\t\n\t\tif ( nodeName == 'TR' ) {\n\t\t\treturn api.row( node ).index();\n\t\t}\n\t\telse if ( nodeName == 'TD' || nodeName == 'TH' ) {\n\t\t\tvar cell = api.cell( node ).index();\n\t\n\t\t\treturn [\n\t\t\t\tcell.row,\n\t\t\t\tcell.columnVisible,\n\t\t\t\tcell.column\n\t\t\t];\n\t\t}\n\t\treturn null;\n\t};\n\t\n\t\n\t/**\n\t * Check to see if a row is 'open' or not.\n\t *  @param {node} nTr the table row to check\n\t *  @returns {boolean} true if the row is currently open, false otherwise\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable;\n\t *\n\t *      // 'open' an information row when a row is clicked on\n\t *      $('#example tbody tr').click( function () {\n\t *        if ( oTable.fnIsOpen(this) ) {\n\t *          oTable.fnClose( this );\n\t *        } else {\n\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t *        }\n\t *      } );\n\t *\n\t *      oTable = $('#example').dataTable();\n\t *    } );\n\t */\n\tthis.fnIsOpen = function( nTr )\n\t{\n\t\treturn this.api( true ).row( nTr ).child.isShown();\n\t};\n\t\n\t\n\t/**\n\t * This function will place a new row directly after a row which is currently\n\t * on display on the page, with the HTML contents that is passed into the\n\t * function. This can be used, for example, to ask for confirmation that a\n\t * particular record should be deleted.\n\t *  @param {node} nTr The table row to 'open'\n\t *  @param {string|node|jQuery} mHtml The HTML to put into the row\n\t *  @param {string} sClass Class to give the new TD cell\n\t *  @returns {node} The row opened. Note that if the table row passed in as the\n\t *    first parameter, is not found in the table, this method will silently\n\t *    return.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable;\n\t *\n\t *      // 'open' an information row when a row is clicked on\n\t *      $('#example tbody tr').click( function () {\n\t *        if ( oTable.fnIsOpen(this) ) {\n\t *          oTable.fnClose( this );\n\t *        } else {\n\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t *        }\n\t *      } );\n\t *\n\t *      oTable = $('#example').dataTable();\n\t *    } );\n\t */\n\tthis.fnOpen = function( nTr, mHtml, sClass )\n\t{\n\t\treturn this.api( true )\n\t\t\t.row( nTr )\n\t\t\t.child( mHtml, sClass )\n\t\t\t.show()\n\t\t\t.child()[0];\n\t};\n\t\n\t\n\t/**\n\t * Change the pagination - provides the internal logic for pagination in a simple API\n\t * function. With this function you can have a DataTables table go to the next,\n\t * previous, first or last pages.\n\t *  @param {string|int} mAction Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\n\t *    or page number to jump to (integer), note that page 0 is the first page.\n\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *      oTable.fnPageChange( 'next' );\n\t *    } );\n\t */\n\tthis.fnPageChange = function ( mAction, bRedraw )\n\t{\n\t\tvar api = this.api( true ).page( mAction );\n\t\n\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\tapi.draw(false);\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Show a particular column\n\t *  @param {int} iCol The column whose display should be changed\n\t *  @param {bool} bShow Show (true) or hide (false) the column\n\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Hide the second column after initialisation\n\t *      oTable.fnSetColumnVis( 1, false );\n\t *    } );\n\t */\n\tthis.fnSetColumnVis = function ( iCol, bShow, bRedraw )\n\t{\n\t\tvar api = this.api( true ).column( iCol ).visible( bShow );\n\t\n\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\tapi.columns.adjust().draw();\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Get the settings for a particular table for external manipulation\n\t *  @returns {object} DataTables settings object. See\n\t *    {@link DataTable.models.oSettings}\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *      var oSettings = oTable.fnSettings();\n\t *\n\t *      // Show an example parameter from the settings\n\t *      alert( oSettings._iDisplayStart );\n\t *    } );\n\t */\n\tthis.fnSettings = function()\n\t{\n\t\treturn _fnSettingsFromNode( this[_ext.iApiIndex] );\n\t};\n\t\n\t\n\t/**\n\t * Sort the table by a particular column\n\t *  @param {int} iCol the data index to sort on. Note that this will not match the\n\t *    'display index' if you have hidden data entries\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Sort immediately with columns 0 and 1\n\t *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );\n\t *    } );\n\t */\n\tthis.fnSort = function( aaSort )\n\t{\n\t\tthis.api( true ).order( aaSort ).draw();\n\t};\n\t\n\t\n\t/**\n\t * Attach a sort listener to an element for a given column\n\t *  @param {node} nNode the element to attach the sort listener to\n\t *  @param {int} iColumn the column that a click on this node will sort on\n\t *  @param {function} [fnCallback] callback function when sort is run\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Sort on column 1, when 'sorter' is clicked on\n\t *      oTable.fnSortListener( document.getElementById('sorter'), 1 );\n\t *    } );\n\t */\n\tthis.fnSortListener = function( nNode, iColumn, fnCallback )\n\t{\n\t\tthis.api( true ).order.listener( nNode, iColumn, fnCallback );\n\t};\n\t\n\t\n\t/**\n\t * Update a table cell or row - this method will accept either a single value to\n\t * update the cell with, an array of values with one element for each column or\n\t * an object in the same format as the original data source. The function is\n\t * self-referencing in order to make the multi column updates easier.\n\t *  @param {object|array|string} mData Data to update the cell/row with\n\t *  @param {node|int} mRow TR element you want to update or the aoData index\n\t *  @param {int} [iColumn] The column to update, give as null or undefined to\n\t *    update a whole row.\n\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t *  @param {bool} [bAction=true] Perform pre-draw actions or not\n\t *  @returns {int} 0 on success, 1 on error\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell\n\t *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row\n\t *    } );\n\t */\n\tthis.fnUpdate = function( mData, mRow, iColumn, bRedraw, bAction )\n\t{\n\t\tvar api = this.api( true );\n\t\n\t\tif ( iColumn === undefined || iColumn === null ) {\n\t\t\tapi.row( mRow ).data( mData );\n\t\t}\n\t\telse {\n\t\t\tapi.cell( mRow, iColumn ).data( mData );\n\t\t}\n\t\n\t\tif ( bAction === undefined || bAction ) {\n\t\t\tapi.columns.adjust();\n\t\t}\n\t\n\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\tapi.draw();\n\t\t}\n\t\treturn 0;\n\t};\n\t\n\t\n\t/**\n\t * Provide a common method for plug-ins to check the version of DataTables being used, in order\n\t * to ensure compatibility.\n\t *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note that the\n\t *    formats \"X\" and \"X.Y\" are also acceptable.\n\t *  @returns {boolean} true if this version of DataTables is greater or equal to the required\n\t *    version, or false if this version of DataTales is not suitable\n\t *  @method\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *      alert( oTable.fnVersionCheck( '1.9.0' ) );\n\t *    } );\n\t */\n\tthis.fnVersionCheck = _ext.fnVersionCheck;\n\t\n\n\tvar _that = this;\n\tvar emptyInit = options === undefined;\n\tvar len = this.length;\n\n\tif ( emptyInit ) {\n\t\toptions = {};\n\t}\n\n\tthis.oApi = this.internal = _ext.internal;\n\n\t// Extend with old style plug-in API methods\n\tfor ( var fn in DataTable.ext.internal ) {\n\t\tif ( fn ) {\n\t\t\tthis[fn] = _fnExternApiFunc(fn);\n\t\t}\n\t}\n\n\tthis.each(function() {\n\t\t// For each initialisation we want to give it a clean initialisation\n\t\t// object that can be bashed around\n\t\tvar o = {};\n\t\tvar oInit = len > 1 ? // optimisation for single table case\n\t\t\t_fnExtend( o, options, true ) :\n\t\t\toptions;\n\n\t\t/*global oInit,_that,emptyInit*/\n\t\tvar i=0, iLen, j, jLen, k, kLen;\n\t\tvar sId = this.getAttribute( 'id' );\n\t\tvar bInitHandedOff = false;\n\t\tvar defaults = DataTable.defaults;\n\t\tvar $this = $(this);\n\t\t\n\t\t\n\t\t/* Sanity check */\n\t\tif ( this.nodeName.toLowerCase() != 'table' )\n\t\t{\n\t\t\t_fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t/* Backwards compatibility for the defaults */\n\t\t_fnCompatOpts( defaults );\n\t\t_fnCompatCols( defaults.column );\n\t\t\n\t\t/* Convert the camel-case defaults to Hungarian */\n\t\t_fnCamelToHungarian( defaults, defaults, true );\n\t\t_fnCamelToHungarian( defaults.column, defaults.column, true );\n\t\t\n\t\t/* Setting up the initialisation object */\n\t\t_fnCamelToHungarian( defaults, $.extend( oInit, $this.data() ), true );\n\t\t\n\t\t\n\t\t\n\t\t/* Check to see if we are re-initialising a table */\n\t\tvar allSettings = DataTable.settings;\n\t\tfor ( i=0, iLen=allSettings.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tvar s = allSettings[i];\n\t\t\n\t\t\t/* Base check on table node */\n\t\t\tif (\n\t\t\t\ts.nTable == this ||\n\t\t\t\t(s.nTHead && s.nTHead.parentNode == this) ||\n\t\t\t\t(s.nTFoot && s.nTFoot.parentNode == this)\n\t\t\t) {\n\t\t\t\tvar bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n\t\t\t\tvar bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n\t\t\n\t\t\t\tif ( emptyInit || bRetrieve )\n\t\t\t\t{\n\t\t\t\t\treturn s.oInstance;\n\t\t\t\t}\n\t\t\t\telse if ( bDestroy )\n\t\t\t\t{\n\t\t\t\t\ts.oInstance.fnDestroy();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t_fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\t/* If the element we are initialising has the same ID as a table which was previously\n\t\t\t * initialised, but the table nodes don't match (from before) then we destroy the old\n\t\t\t * instance by simply deleting it. This is under the assumption that the table has been\n\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n\t\t\t */\n\t\t\tif ( s.sTableId == this.id )\n\t\t\t{\n\t\t\t\tallSettings.splice( i, 1 );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* Ensure the table has an ID - required for accessibility */\n\t\tif ( sId === null || sId === \"\" )\n\t\t{\n\t\t\tsId = \"DataTables_Table_\"+(DataTable.ext._unique++);\n\t\t\tthis.id = sId;\n\t\t}\n\t\t\n\t\t/* Create the settings object for this table and set some of the default parameters */\n\t\tvar oSettings = $.extend( true, {}, DataTable.models.oSettings, {\n\t\t\t\"sDestroyWidth\": $this[0].style.width,\n\t\t\t\"sInstance\":     sId,\n\t\t\t\"sTableId\":      sId\n\t\t} );\n\t\toSettings.nTable = this;\n\t\toSettings.oApi   = _that.internal;\n\t\toSettings.oInit  = oInit;\n\t\t\n\t\tallSettings.push( oSettings );\n\t\t\n\t\t// Need to add the instance after the instance after the settings object has been added\n\t\t// to the settings array, so we can self reference the table instance if more than one\n\t\toSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();\n\t\t\n\t\t// Backwards compatibility, before we apply all the defaults\n\t\t_fnCompatOpts( oInit );\n\t\t_fnLanguageCompat( oInit.oLanguage );\n\t\t\n\t\t// If the length menu is given, but the init display length is not, use the length menu\n\t\tif ( oInit.aLengthMenu && ! oInit.iDisplayLength )\n\t\t{\n\t\t\toInit.iDisplayLength = Array.isArray( oInit.aLengthMenu[0] ) ?\n\t\t\t\toInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];\n\t\t}\n\t\t\n\t\t// Apply the defaults and init options to make a single init object will all\n\t\t// options defined from defaults and instance options.\n\t\toInit = _fnExtend( $.extend( true, {}, defaults ), oInit );\n\t\t\n\t\t\n\t\t// Map the initialisation options onto the settings object\n\t\t_fnMap( oSettings.oFeatures, oInit, [\n\t\t\t\"bPaginate\",\n\t\t\t\"bLengthChange\",\n\t\t\t\"bFilter\",\n\t\t\t\"bSort\",\n\t\t\t\"bSortMulti\",\n\t\t\t\"bInfo\",\n\t\t\t\"bProcessing\",\n\t\t\t\"bAutoWidth\",\n\t\t\t\"bSortClasses\",\n\t\t\t\"bServerSide\",\n\t\t\t\"bDeferRender\"\n\t\t] );\n\t\t_fnMap( oSettings, oInit, [\n\t\t\t\"asStripeClasses\",\n\t\t\t\"ajax\",\n\t\t\t\"fnServerData\",\n\t\t\t\"fnFormatNumber\",\n\t\t\t\"sServerMethod\",\n\t\t\t\"aaSorting\",\n\t\t\t\"aaSortingFixed\",\n\t\t\t\"aLengthMenu\",\n\t\t\t\"sPaginationType\",\n\t\t\t\"sAjaxSource\",\n\t\t\t\"sAjaxDataProp\",\n\t\t\t\"iStateDuration\",\n\t\t\t\"sDom\",\n\t\t\t\"bSortCellsTop\",\n\t\t\t\"iTabIndex\",\n\t\t\t\"fnStateLoadCallback\",\n\t\t\t\"fnStateSaveCallback\",\n\t\t\t\"renderer\",\n\t\t\t\"searchDelay\",\n\t\t\t\"rowId\",\n\t\t\t[ \"iCookieDuration\", \"iStateDuration\" ], // backwards compat\n\t\t\t[ \"oSearch\", \"oPreviousSearch\" ],\n\t\t\t[ \"aoSearchCols\", \"aoPreSearchCols\" ],\n\t\t\t[ \"iDisplayLength\", \"_iDisplayLength\" ]\n\t\t] );\n\t\t_fnMap( oSettings.oScroll, oInit, [\n\t\t\t[ \"sScrollX\", \"sX\" ],\n\t\t\t[ \"sScrollXInner\", \"sXInner\" ],\n\t\t\t[ \"sScrollY\", \"sY\" ],\n\t\t\t[ \"bScrollCollapse\", \"bCollapse\" ]\n\t\t] );\n\t\t_fnMap( oSettings.oLanguage, oInit, \"fnInfoCallback\" );\n\t\t\n\t\t/* Callback functions which are array driven */\n\t\t_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback,      'user' );\n\t\t_fnCallbackReg( oSettings, 'aoServerParams',       oInit.fnServerParams,      'user' );\n\t\t_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams,   'user' );\n\t\t_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams,   'user' );\n\t\t_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded,       'user' );\n\t\t_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback,       'user' );\n\t\t_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow,        'user' );\n\t\t_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback,    'user' );\n\t\t_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback,    'user' );\n\t\t_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete,      'user' );\n\t\t_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback,   'user' );\n\t\t\n\t\toSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );\n\t\t\n\t\t/* Browser support detection */\n\t\t_fnBrowserDetect( oSettings );\n\t\t\n\t\tvar oClasses = oSettings.oClasses;\n\t\t\n\t\t$.extend( oClasses, DataTable.ext.classes, oInit.oClasses );\n\t\t$this.addClass( oClasses.sTable );\n\t\t\n\t\t\n\t\tif ( oSettings.iInitDisplayStart === undefined )\n\t\t{\n\t\t\t/* Display start point, taking into account the save saving */\n\t\t\toSettings.iInitDisplayStart = oInit.iDisplayStart;\n\t\t\toSettings._iDisplayStart = oInit.iDisplayStart;\n\t\t}\n\t\t\n\t\tif ( oInit.iDeferLoading !== null )\n\t\t{\n\t\t\toSettings.bDeferLoading = true;\n\t\t\tvar tmp = Array.isArray( oInit.iDeferLoading );\n\t\t\toSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;\n\t\t\toSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;\n\t\t}\n\t\t\n\t\t/* Language definitions */\n\t\tvar oLanguage = oSettings.oLanguage;\n\t\t$.extend( true, oLanguage, oInit.oLanguage );\n\t\t\n\t\tif ( oLanguage.sUrl )\n\t\t{\n\t\t\t/* Get the language definitions from a file - because this Ajax call makes the language\n\t\t\t * get async to the remainder of this function we use bInitHandedOff to indicate that\n\t\t\t * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\n\t\t\t */\n\t\t\t$.ajax( {\n\t\t\t\tdataType: 'json',\n\t\t\t\turl: oLanguage.sUrl,\n\t\t\t\tsuccess: function ( json ) {\n\t\t\t\t\t_fnCamelToHungarian( defaults.oLanguage, json );\n\t\t\t\t\t_fnLanguageCompat( json );\n\t\t\t\t\t$.extend( true, oLanguage, json, oSettings.oInit.oLanguage );\n\t\t\n\t\t\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings]);\n\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t},\n\t\t\t\terror: function () {\n\t\t\t\t\t// Error occurred loading language file, continue on as best we can\n\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t}\n\t\t\t} );\n\t\t\tbInitHandedOff = true;\n\t\t}\n\t\telse {\n\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings]);\n\t\t}\n\t\t\n\t\t/*\n\t\t * Stripes\n\t\t */\n\t\tif ( oInit.asStripeClasses === null )\n\t\t{\n\t\t\toSettings.asStripeClasses =[\n\t\t\t\toClasses.sStripeOdd,\n\t\t\t\toClasses.sStripeEven\n\t\t\t];\n\t\t}\n\t\t\n\t\t/* Remove row stripe classes if they are already on the table row */\n\t\tvar stripeClasses = oSettings.asStripeClasses;\n\t\tvar rowOne = $this.children('tbody').find('tr').eq(0);\n\t\tif ( $.inArray( true, $.map( stripeClasses, function(el, i) {\n\t\t\treturn rowOne.hasClass(el);\n\t\t} ) ) !== -1 ) {\n\t\t\t$('tbody tr', this).removeClass( stripeClasses.join(' ') );\n\t\t\toSettings.asDestroyStripes = stripeClasses.slice();\n\t\t}\n\t\t\n\t\t/*\n\t\t * Columns\n\t\t * See if we should load columns automatically or use defined ones\n\t\t */\n\t\tvar anThs = [];\n\t\tvar aoColumnsInit;\n\t\tvar nThead = this.getElementsByTagName('thead');\n\t\tif ( nThead.length !== 0 )\n\t\t{\n\t\t\t_fnDetectHeader( oSettings.aoHeader, nThead[0] );\n\t\t\tanThs = _fnGetUniqueThs( oSettings );\n\t\t}\n\t\t\n\t\t/* If not given a column array, generate one with nulls */\n\t\tif ( oInit.aoColumns === null )\n\t\t{\n\t\t\taoColumnsInit = [];\n\t\t\tfor ( i=0, iLen=anThs.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\taoColumnsInit.push( null );\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\taoColumnsInit = oInit.aoColumns;\n\t\t}\n\t\t\n\t\t/* Add the columns */\n\t\tfor ( i=0, iLen=aoColumnsInit.length ; i<iLen ; i++ )\n\t\t{\n\t\t\t_fnAddColumn( oSettings, anThs ? anThs[i] : null );\n\t\t}\n\t\t\n\t\t/* Apply the column definitions */\n\t\t_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {\n\t\t\t_fnColumnOptions( oSettings, iCol, oDef );\n\t\t} );\n\t\t\n\t\t/* HTML5 attribute detection - build an mData object automatically if the\n\t\t * attributes are found\n\t\t */\n\t\tif ( rowOne.length ) {\n\t\t\tvar a = function ( cell, name ) {\n\t\t\t\treturn cell.getAttribute( 'data-'+name ) !== null ? name : null;\n\t\t\t};\n\t\t\n\t\t\t$( rowOne[0] ).children('th, td').each( function (i, cell) {\n\t\t\t\tvar col = oSettings.aoColumns[i];\n\t\t\n\t\t\t\tif (! col) {\n\t\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\n\t\t\t\t}\n\t\t\n\t\t\t\tif ( col.mData === i ) {\n\t\t\t\t\tvar sort = a( cell, 'sort' ) || a( cell, 'order' );\n\t\t\t\t\tvar filter = a( cell, 'filter' ) || a( cell, 'search' );\n\t\t\n\t\t\t\t\tif ( sort !== null || filter !== null ) {\n\t\t\t\t\t\tcol.mData = {\n\t\t\t\t\t\t\t_:      i+'.display',\n\t\t\t\t\t\t\tsort:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\ttype:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\tfilter: filter !== null ? i+'.@data-'+filter : undefined\n\t\t\t\t\t\t};\n\t\t\t\t\t\tcol._isArrayHost = true;\n\t\t\n\t\t\t\t\t\t_fnColumnOptions( oSettings, i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\t\n\t\tvar features = oSettings.oFeatures;\n\t\tvar loadedInit = function () {\n\t\t\t/*\n\t\t\t * Sorting\n\t\t\t * @todo For modularisation (1.11) this needs to do into a sort start up handler\n\t\t\t */\n\t\t\n\t\t\t// If aaSorting is not defined, then we use the first indicator in asSorting\n\t\t\t// in case that has been altered, so the default sort reflects that option\n\t\t\tif ( oInit.aaSorting === undefined ) {\n\t\t\t\tvar sorting = oSettings.aaSorting;\n\t\t\t\tfor ( i=0, iLen=sorting.length ; i<iLen ; i++ ) {\n\t\t\t\t\tsorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\t/* Do a first pass on the sorting classes (allows any size changes to be taken into\n\t\t\t * account, and also will apply sorting disabled classes if disabled\n\t\t\t */\n\t\t\t_fnSortingClasses( oSettings );\n\t\t\n\t\t\tif ( features.bSort ) {\n\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\t\t\tif ( oSettings.bSorted ) {\n\t\t\t\t\t\tvar aSort = _fnSortFlatten( oSettings );\n\t\t\t\t\t\tvar sortedColumns = {};\n\t\t\n\t\t\t\t\t\t$.each( aSort, function (i, val) {\n\t\t\t\t\t\t\tsortedColumns[ val.src ] = val.dir;\n\t\t\t\t\t\t} );\n\t\t\n\t\t\t\t\t\t_fnCallbackFire( oSettings, null, 'order', [oSettings, aSort, sortedColumns] );\n\t\t\t\t\t\t_fnSortAria( oSettings );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\n\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\t\tif ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {\n\t\t\t\t\t_fnSortingClasses( oSettings );\n\t\t\t\t}\n\t\t\t}, 'sc' );\n\t\t\n\t\t\n\t\t\t/*\n\t\t\t * Final init\n\t\t\t * Cache the header, body and footer as required, creating them if needed\n\t\t\t */\n\t\t\n\t\t\t// Work around for Webkit bug 83867 - store the caption-side before removing from doc\n\t\t\tvar captions = $this.children('caption').each( function () {\n\t\t\t\tthis._captionSide = $(this).css('caption-side');\n\t\t\t} );\n\t\t\n\t\t\tvar thead = $this.children('thead');\n\t\t\tif ( thead.length === 0 ) {\n\t\t\t\tthead = $('<thead/>').appendTo($this);\n\t\t\t}\n\t\t\toSettings.nTHead = thead[0];\n\t\t\n\t\t\tvar tbody = $this.children('tbody');\n\t\t\tif ( tbody.length === 0 ) {\n\t\t\t\ttbody = $('<tbody/>').insertAfter(thead);\n\t\t\t}\n\t\t\toSettings.nTBody = tbody[0];\n\t\t\n\t\t\tvar tfoot = $this.children('tfoot');\n\t\t\tif ( tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\") ) {\n\t\t\t\t// If we are a scrolling table, and no footer has been given, then we need to create\n\t\t\t\t// a tfoot element for the caption element to be appended to\n\t\t\t\ttfoot = $('<tfoot/>').appendTo($this);\n\t\t\t}\n\t\t\n\t\t\tif ( tfoot.length === 0 || tfoot.children().length === 0 ) {\n\t\t\t\t$this.addClass( oClasses.sNoFooter );\n\t\t\t}\n\t\t\telse if ( tfoot.length > 0 ) {\n\t\t\t\toSettings.nTFoot = tfoot[0];\n\t\t\t\t_fnDetectHeader( oSettings.aoFooter, oSettings.nTFoot );\n\t\t\t}\n\t\t\n\t\t\t/* Check if there is data passing into the constructor */\n\t\t\tif ( oInit.aaData ) {\n\t\t\t\tfor ( i=0 ; i<oInit.aaData.length ; i++ ) {\n\t\t\t\t\t_fnAddData( oSettings, oInit.aaData[ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( oSettings.bDeferLoading || _fnDataSource( oSettings ) == 'dom' ) {\n\t\t\t\t/* Grab the data from the page - only do this when deferred loading or no Ajax\n\t\t\t\t * source since there is no point in reading the DOM data if we are then going\n\t\t\t\t * to replace it with Ajax data\n\t\t\t\t */\n\t\t\t\t_fnAddTr( oSettings, $(oSettings.nTBody).children('tr') );\n\t\t\t}\n\t\t\n\t\t\t/* Copy the data index array */\n\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\n\t\t\t/* Initialisation complete - table can be drawn */\n\t\t\toSettings.bInitialised = true;\n\t\t\n\t\t\t/* Check if we need to initialise the table (it might not have been handed off to the\n\t\t\t * language processor)\n\t\t\t */\n\t\t\tif ( bInitHandedOff === false ) {\n\t\t\t\t_fnInitialise( oSettings );\n\t\t\t}\n\t\t};\n\t\t\n\t\t/* Must be done after everything which can be overridden by the state saving! */\n\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState, 'state_save' );\n\t\t\n\t\tif ( oInit.bStateSave )\n\t\t{\n\t\t\tfeatures.bStateSave = true;\n\t\t\t_fnLoadState( oSettings, oInit, loadedInit );\n\t\t}\n\t\telse {\n\t\t\tloadedInit();\n\t\t}\n\t\t\n\t} );\n\t_that = null;\n\treturn this;\n};\n\n\n/*\n * It is useful to have variables which are scoped locally so only the\n * DataTables functions can access them and they don't leak into global space.\n * At the same time these functions are often useful over multiple files in the\n * core and API, so we list, or at least document, all variables which are used\n * by DataTables as private variables here. This also ensures that there is no\n * clashing of variable names and that they can easily referenced for reuse.\n */\n\n\n// Defined else where\n//  _selector_run\n//  _selector_opts\n//  _selector_first\n//  _selector_row_indexes\n\nvar _ext; // DataTable.ext\nvar _Api; // DataTable.Api\nvar _api_register; // DataTable.Api.register\nvar _api_registerPlural; // DataTable.Api.registerPlural\n\nvar _re_dic = {};\nvar _re_new_lines = /[\\r\\n\\u2028]/g;\nvar _re_html = /<.*?>/g;\n\n// This is not strict ISO8601 - Date.parse() is quite lax, although\n// implementations differ between browsers.\nvar _re_date = /^\\d{2,4}[\\.\\/\\-]\\d{1,2}[\\.\\/\\-]\\d{1,2}([T ]{1}\\d{1,2}[:\\.]\\d{2}([\\.:]\\d{2})?)?$/;\n\n// Escape regular expression special characters\nvar _re_escape_regex = new RegExp( '(\\\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-' ].join('|\\\\') + ')', 'g' );\n\n// http://en.wikipedia.org/wiki/Foreign_exchange_market\n// - \\u20BD - Russian ruble.\n// - \\u20a9 - South Korean Won\n// - \\u20BA - Turkish Lira\n// - \\u20B9 - Indian Rupee\n// - R - Brazil (R$) and South Africa\n// - fr - Swiss Franc\n// - kr - Swedish krona, Norwegian krone and Danish krone\n// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n// - Ƀ - Bitcoin\n// - Ξ - Ethereum\n//   standards as thousands separators.\nvar _re_formatted_numeric = /['\\u00A0,$£€¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfkɃΞ]/gi;\n\n\nvar _empty = function ( d ) {\n\treturn !d || d === true || d === '-' ? true : false;\n};\n\n\nvar _intVal = function ( s ) {\n\tvar integer = parseInt( s, 10 );\n\treturn !isNaN(integer) && isFinite(s) ? integer : null;\n};\n\n// Convert from a formatted number with characters other than `.` as the\n// decimal place, to a Javascript number\nvar _numToDecimal = function ( num, decimalPoint ) {\n\t// Cache created regular expressions for speed as this function is called often\n\tif ( ! _re_dic[ decimalPoint ] ) {\n\t\t_re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );\n\t}\n\treturn typeof num === 'string' && decimalPoint !== '.' ?\n\t\tnum.replace( /\\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :\n\t\tnum;\n};\n\n\nvar _isNumber = function ( d, decimalPoint, formatted ) {\n\tlet type = typeof d;\n\tvar strType = type === 'string';\n\n\tif ( type === 'number' || type === 'bigint') {\n\t\treturn true;\n\t}\n\n\t// If empty return immediately so there must be a number if it is a\n\t// formatted string (this stops the string \"k\", or \"kr\", etc being detected\n\t// as a formatted number for currency\n\tif ( _empty( d ) ) {\n\t\treturn true;\n\t}\n\n\tif ( decimalPoint && strType ) {\n\t\td = _numToDecimal( d, decimalPoint );\n\t}\n\n\tif ( formatted && strType ) {\n\t\td = d.replace( _re_formatted_numeric, '' );\n\t}\n\n\treturn !isNaN( parseFloat(d) ) && isFinite( d );\n};\n\n\n// A string without HTML in it can be considered to be HTML still\nvar _isHtml = function ( d ) {\n\treturn _empty( d ) || typeof d === 'string';\n};\n\n\nvar _htmlNumeric = function ( d, decimalPoint, formatted ) {\n\tif ( _empty( d ) ) {\n\t\treturn true;\n\t}\n\n\tvar html = _isHtml( d );\n\treturn ! html ?\n\t\tnull :\n\t\t_isNumber( _stripHtml( d ), decimalPoint, formatted ) ?\n\t\t\ttrue :\n\t\t\tnull;\n};\n\n\nvar _pluck = function ( a, prop, prop2 ) {\n\tvar out = [];\n\tvar i=0, ien=a.length;\n\n\t// Could have the test in the loop for slightly smaller code, but speed\n\t// is essential here\n\tif ( prop2 !== undefined ) {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[i] && a[i][ prop ] ) {\n\t\t\t\tout.push( a[i][ prop ][ prop2 ] );\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[i] ) {\n\t\t\t\tout.push( a[i][ prop ] );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out;\n};\n\n\n// Basically the same as _pluck, but rather than looping over `a` we use `order`\n// as the indexes to pick from `a`\nvar _pluck_order = function ( a, order, prop, prop2 )\n{\n\tvar out = [];\n\tvar i=0, ien=order.length;\n\n\t// Could have the test in the loop for slightly smaller code, but speed\n\t// is essential here\n\tif ( prop2 !== undefined ) {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[ order[i] ][ prop ] ) {\n\t\t\t\tout.push( a[ order[i] ][ prop ][ prop2 ] );\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tout.push( a[ order[i] ][ prop ] );\n\t\t}\n\t}\n\n\treturn out;\n};\n\n\nvar _range = function ( len, start )\n{\n\tvar out = [];\n\tvar end;\n\n\tif ( start === undefined ) {\n\t\tstart = 0;\n\t\tend = len;\n\t}\n\telse {\n\t\tend = start;\n\t\tstart = len;\n\t}\n\n\tfor ( var i=start ; i<end ; i++ ) {\n\t\tout.push( i );\n\t}\n\n\treturn out;\n};\n\n\nvar _removeEmpty = function ( a )\n{\n\tvar out = [];\n\n\tfor ( var i=0, ien=a.length ; i<ien ; i++ ) {\n\t\tif ( a[i] ) { // careful - will remove all falsy values!\n\t\t\tout.push( a[i] );\n\t\t}\n\t}\n\n\treturn out;\n};\n\n\nvar _stripHtml = function ( d ) {\n\treturn d.replace( _re_html, '' );\n};\n\n\n/**\n * Determine if all values in the array are unique. This means we can short\n * cut the _unique method at the cost of a single loop. A sorted array is used\n * to easily check the values.\n *\n * @param  {array} src Source array\n * @return {boolean} true if all unique, false otherwise\n * @ignore\n */\nvar _areAllUnique = function ( src ) {\n\tif ( src.length < 2 ) {\n\t\treturn true;\n\t}\n\n\tvar sorted = src.slice().sort();\n\tvar last = sorted[0];\n\n\tfor ( var i=1, ien=sorted.length ; i<ien ; i++ ) {\n\t\tif ( sorted[i] === last ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlast = sorted[i];\n\t}\n\n\treturn true;\n};\n\n\n/**\n * Find the unique elements in a source array.\n *\n * @param  {array} src Source array\n * @return {array} Array of unique items\n * @ignore\n */\nvar _unique = function ( src )\n{\n\tif ( _areAllUnique( src ) ) {\n\t\treturn src.slice();\n\t}\n\n\t// A faster unique method is to use object keys to identify used values,\n\t// but this doesn't work with arrays or objects, which we must also\n\t// consider. See jsperf.com/compare-array-unique-versions/4 for more\n\t// information.\n\tvar\n\t\tout = [],\n\t\tval,\n\t\ti, ien=src.length,\n\t\tj, k=0;\n\n\tagain: for ( i=0 ; i<ien ; i++ ) {\n\t\tval = src[i];\n\n\t\tfor ( j=0 ; j<k ; j++ ) {\n\t\t\tif ( out[j] === val ) {\n\t\t\t\tcontinue again;\n\t\t\t}\n\t\t}\n\n\t\tout.push( val );\n\t\tk++;\n\t}\n\n\treturn out;\n};\n\n// Surprisingly this is faster than [].concat.apply\n// https://jsperf.com/flatten-an-array-loop-vs-reduce/2\nvar _flatten = function (out, val) {\n\tif (Array.isArray(val)) {\n\t\tfor (var i=0 ; i<val.length ; i++) {\n\t\t\t_flatten(out, val[i]);\n\t\t}\n\t}\n\telse {\n\t\tout.push(val);\n\t}\n  \n\treturn out;\n}\n\nvar _includes = function (search, start) {\n\tif (start === undefined) {\n\t\tstart = 0;\n\t}\n\n\treturn this.indexOf(search, start) !== -1;\t\n};\n\n// Array.isArray polyfill.\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\nif (! Array.isArray) {\n    Array.isArray = function(arg) {\n        return Object.prototype.toString.call(arg) === '[object Array]';\n    };\n}\n\nif (! Array.prototype.includes) {\n\tArray.prototype.includes = _includes;\n}\n\n// .trim() polyfill\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trim\nif (!String.prototype.trim) {\n  String.prototype.trim = function () {\n    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  };\n}\n\nif (! String.prototype.includes) {\n\tString.prototype.includes = _includes;\n}\n\n/**\n * DataTables utility methods\n * \n * This namespace provides helper methods that DataTables uses internally to\n * create a DataTable, but which are not exclusively used only for DataTables.\n * These methods can be used by extension authors to save the duplication of\n * code.\n *\n *  @namespace\n */\nDataTable.util = {\n\t/**\n\t * Throttle the calls to a function. Arguments and context are maintained\n\t * for the throttled function.\n\t *\n\t * @param {function} fn Function to be called\n\t * @param {integer} freq Call frequency in mS\n\t * @return {function} Wrapped function\n\t */\n\tthrottle: function ( fn, freq ) {\n\t\tvar\n\t\t\tfrequency = freq !== undefined ? freq : 200,\n\t\t\tlast,\n\t\t\ttimer;\n\n\t\treturn function () {\n\t\t\tvar\n\t\t\t\tthat = this,\n\t\t\t\tnow  = +new Date(),\n\t\t\t\targs = arguments;\n\n\t\t\tif ( last && now < last + frequency ) {\n\t\t\t\tclearTimeout( timer );\n\n\t\t\t\ttimer = setTimeout( function () {\n\t\t\t\t\tlast = undefined;\n\t\t\t\t\tfn.apply( that, args );\n\t\t\t\t}, frequency );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlast = now;\n\t\t\t\tfn.apply( that, args );\n\t\t\t}\n\t\t};\n\t},\n\n\n\t/**\n\t * Escape a string such that it can be used in a regular expression\n\t *\n\t *  @param {string} val string to escape\n\t *  @returns {string} escaped string\n\t */\n\tescapeRegex: function ( val ) {\n\t\treturn val.replace( _re_escape_regex, '\\\\$1' );\n\t},\n\n\t/**\n\t * Create a function that will write to a nested object or array\n\t * @param {*} source JSON notation string\n\t * @returns Write function\n\t */\n\tset: function ( source ) {\n\t\tif ( $.isPlainObject( source ) ) {\n\t\t\t/* Unlike get, only the underscore (global) option is used for for\n\t\t\t * setting data since we don't know the type here. This is why an object\n\t\t\t * option is not documented for `mData` (which is read/write), but it is\n\t\t\t * for `mRender` which is read only.\n\t\t\t */\n\t\t\treturn DataTable.util.set( source._ );\n\t\t}\n\t\telse if ( source === null ) {\n\t\t\t// Nothing to do when the data source is null\n\t\t\treturn function () {};\n\t\t}\n\t\telse if ( typeof source === 'function' ) {\n\t\t\treturn function (data, val, meta) {\n\t\t\t\tsource( data, 'set', val, meta );\n\t\t\t};\n\t\t}\n\t\telse if ( typeof source === 'string' && (source.indexOf('.') !== -1 ||\n\t\t\t\t  source.indexOf('[') !== -1 || source.indexOf('(') !== -1) )\n\t\t{\n\t\t\t// Like the get, we need to get data from a nested object\n\t\t\tvar setData = function (data, val, src) {\n\t\t\t\tvar a = _fnSplitObjNotation( src ), b;\n\t\t\t\tvar aLast = a[a.length-1];\n\t\t\t\tvar arrayNotation, funcNotation, o, innerSrc;\n\t\n\t\t\t\tfor ( var i=0, iLen=a.length-1 ; i<iLen ; i++ ) {\n\t\t\t\t\t// Protect against prototype pollution\n\t\t\t\t\tif (a[i] === '__proto__' || a[i] === 'constructor') {\n\t\t\t\t\t\tthrow new Error('Cannot set prototype values');\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Check if we are dealing with an array notation request\n\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\tif ( arrayNotation ) {\n\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\t\t\t\t\tdata[ a[i] ] = [];\n\t\n\t\t\t\t\t\t// Get the remainder of the nested object to set so we can recurse\n\t\t\t\t\t\tb = a.slice();\n\t\t\t\t\t\tb.splice( 0, i+1 );\n\t\t\t\t\t\tinnerSrc = b.join('.');\n\t\n\t\t\t\t\t\t// Traverse each entry in the array setting the properties requested\n\t\t\t\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\t\t\t\tfor ( var j=0, jLen=val.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\to = {};\n\t\t\t\t\t\t\t\tsetData( o, val[j], innerSrc );\n\t\t\t\t\t\t\t\tdata[ a[i] ].push( o );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// We've been asked to save data to an array, but it\n\t\t\t\t\t\t\t// isn't array data to be saved. Best that can be done\n\t\t\t\t\t\t\t// is to just save the value.\n\t\t\t\t\t\t\tdata[ a[i] ] = val;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// The inner call to setData has already traversed through the remainder\n\t\t\t\t\t\t// of the source and has set the data, thus we can exit here\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( funcNotation ) {\n\t\t\t\t\t\t// Function call\n\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\tdata = data[ a[i] ]( val );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If the nested object doesn't currently exist - since we are\n\t\t\t\t\t// trying to set the value - create it\n\t\t\t\t\tif ( data[ a[i] ] === null || data[ a[i] ] === undefined ) {\n\t\t\t\t\t\tdata[ a[i] ] = {};\n\t\t\t\t\t}\n\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t}\n\t\n\t\t\t\t// Last item in the input - i.e, the actual set\n\t\t\t\tif ( aLast.match(__reFn ) ) {\n\t\t\t\t\t// Function call\n\t\t\t\t\tdata = data[ aLast.replace(__reFn, '') ]( val );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// If array notation is used, we just want to strip it and use the property name\n\t\t\t\t\t// and assign the value. If it isn't used, then we get the result we want anyway\n\t\t\t\t\tdata[ aLast.replace(__reArray, '') ] = val;\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\treturn setData( data, val, source );\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\t// Array or flat object mapping\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\tdata[source] = val;\n\t\t\t};\n\t\t}\n\t},\n\n\t/**\n\t * Create a function that will read nested objects from arrays, based on JSON notation\n\t * @param {*} source JSON notation string\n\t * @returns Value read\n\t */\n\tget: function ( source ) {\n\t\tif ( $.isPlainObject( source ) ) {\n\t\t\t// Build an object of get functions, and wrap them in a single call\n\t\t\tvar o = {};\n\t\t\t$.each( source, function (key, val) {\n\t\t\t\tif ( val ) {\n\t\t\t\t\to[key] = DataTable.util.get( val );\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\tvar t = o[type] || o._;\n\t\t\t\treturn t !== undefined ?\n\t\t\t\t\tt(data, type, row, meta) :\n\t\t\t\t\tdata;\n\t\t\t};\n\t\t}\n\t\telse if ( source === null ) {\n\t\t\t// Give an empty string for rendering / sorting etc\n\t\t\treturn function (data) { // type, row and meta also passed, but not used\n\t\t\t\treturn data;\n\t\t\t};\n\t\t}\n\t\telse if ( typeof source === 'function' ) {\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\treturn source( data, type, row, meta );\n\t\t\t};\n\t\t}\n\t\telse if ( typeof source === 'string' && (source.indexOf('.') !== -1 ||\n\t\t\t\t  source.indexOf('[') !== -1 || source.indexOf('(') !== -1) )\n\t\t{\n\t\t\t/* If there is a . in the source string then the data source is in a\n\t\t\t * nested object so we loop over the data for each level to get the next\n\t\t\t * level down. On each loop we test for undefined, and if found immediately\n\t\t\t * return. This allows entire objects to be missing and sDefaultContent to\n\t\t\t * be used if defined, rather than throwing an error\n\t\t\t */\n\t\t\tvar fetchData = function (data, type, src) {\n\t\t\t\tvar arrayNotation, funcNotation, out, innerSrc;\n\t\n\t\t\t\tif ( src !== \"\" ) {\n\t\t\t\t\tvar a = _fnSplitObjNotation( src );\n\t\n\t\t\t\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ ) {\n\t\t\t\t\t\t// Check if we are dealing with special notation\n\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\t\tif ( arrayNotation ) {\n\t\t\t\t\t\t\t// Array notation\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\n\t\t\t\t\t\t\t// Condition allows simply [] to be passed in\n\t\t\t\t\t\t\tif ( a[i] !== \"\" ) {\n\t\t\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tout = [];\n\t\n\t\t\t\t\t\t\t// Get the remainder of the nested object to get\n\t\t\t\t\t\t\ta.splice( 0, i+1 );\n\t\t\t\t\t\t\tinnerSrc = a.join('.');\n\t\n\t\t\t\t\t\t\t// Traverse each entry in the array getting the properties requested\n\t\t\t\t\t\t\tif ( Array.isArray( data ) ) {\n\t\t\t\t\t\t\t\tfor ( var j=0, jLen=data.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\t\tout.push( fetchData( data[j], type, innerSrc ) );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// If a string is given in between the array notation indicators, that\n\t\t\t\t\t\t\t// is used to join the strings together, otherwise an array is returned\n\t\t\t\t\t\t\tvar join = arrayNotation[0].substring(1, arrayNotation[0].length-1);\n\t\t\t\t\t\t\tdata = (join===\"\") ? out : out.join(join);\n\t\n\t\t\t\t\t\t\t// The inner call to fetchData has already traversed through the remainder\n\t\t\t\t\t\t\t// of the source requested, so we exit from the loop\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( funcNotation ) {\n\t\t\t\t\t\t\t// Function call\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\t\tdata = data[ a[i] ]();\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( data === null || data[ a[i] ] === undefined ) {\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn data;\n\t\t\t};\n\t\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\treturn fetchData( data, type, source );\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\t// Array or flat object mapping\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\treturn data[source];\n\t\t\t};\n\t\t}\n\t}\n};\n\n\n\n/**\n * Create a mapping object that allows camel case parameters to be looked up\n * for their Hungarian counterparts. The mapping is stored in a private\n * parameter called `_hungarianMap` which can be accessed on the source object.\n *  @param {object} o\n *  @memberof DataTable#oApi\n */\nfunction _fnHungarianMap ( o )\n{\n\tvar\n\t\thungarian = 'a aa ai ao as b fn i m o s ',\n\t\tmatch,\n\t\tnewKey,\n\t\tmap = {};\n\n\t$.each( o, function (key, val) {\n\t\tmatch = key.match(/^([^A-Z]+?)([A-Z])/);\n\n\t\tif ( match && hungarian.indexOf(match[1]+' ') !== -1 )\n\t\t{\n\t\t\tnewKey = key.replace( match[0], match[2].toLowerCase() );\n\t\t\tmap[ newKey ] = key;\n\n\t\t\tif ( match[1] === 'o' )\n\t\t\t{\n\t\t\t\t_fnHungarianMap( o[key] );\n\t\t\t}\n\t\t}\n\t} );\n\n\to._hungarianMap = map;\n}\n\n\n/**\n * Convert from camel case parameters to Hungarian, based on a Hungarian map\n * created by _fnHungarianMap.\n *  @param {object} src The model object which holds all parameters that can be\n *    mapped.\n *  @param {object} user The object to convert from camel case to Hungarian.\n *  @param {boolean} force When set to `true`, properties which already have a\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\n *    won't be.\n *  @memberof DataTable#oApi\n */\nfunction _fnCamelToHungarian ( src, user, force )\n{\n\tif ( ! src._hungarianMap ) {\n\t\t_fnHungarianMap( src );\n\t}\n\n\tvar hungarianKey;\n\n\t$.each( user, function (key, val) {\n\t\thungarianKey = src._hungarianMap[ key ];\n\n\t\tif ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )\n\t\t{\n\t\t\t// For objects, we need to buzz down into the object to copy parameters\n\t\t\tif ( hungarianKey.charAt(0) === 'o' )\n\t\t\t{\n\t\t\t\t// Copy the camelCase options over to the hungarian\n\t\t\t\tif ( ! user[ hungarianKey ] ) {\n\t\t\t\t\tuser[ hungarianKey ] = {};\n\t\t\t\t}\n\t\t\t\t$.extend( true, user[hungarianKey], user[key] );\n\n\t\t\t\t_fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tuser[hungarianKey] = user[ key ];\n\t\t\t}\n\t\t}\n\t} );\n}\n\n\n/**\n * Language compatibility - when certain options are given, and others aren't, we\n * need to duplicate the values over, in order to provide backwards compatibility\n * with older language files.\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnLanguageCompat( lang )\n{\n\t// Note the use of the Hungarian notation for the parameters in this method as\n\t// this is called after the mapping of camelCase to Hungarian\n\tvar defaults = DataTable.defaults.oLanguage;\n\n\t// Default mapping\n\tvar defaultDecimal = defaults.sDecimal;\n\tif ( defaultDecimal ) {\n\t\t_addNumericSort( defaultDecimal );\n\t}\n\n\tif ( lang ) {\n\t\tvar zeroRecords = lang.sZeroRecords;\n\n\t\t// Backwards compatibility - if there is no sEmptyTable given, then use the same as\n\t\t// sZeroRecords - assuming that is given.\n\t\tif ( ! lang.sEmptyTable && zeroRecords &&\n\t\t\tdefaults.sEmptyTable === \"No data available in table\" )\n\t\t{\n\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sEmptyTable' );\n\t\t}\n\n\t\t// Likewise with loading records\n\t\tif ( ! lang.sLoadingRecords && zeroRecords &&\n\t\t\tdefaults.sLoadingRecords === \"Loading...\" )\n\t\t{\n\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sLoadingRecords' );\n\t\t}\n\n\t\t// Old parameter name of the thousands separator mapped onto the new\n\t\tif ( lang.sInfoThousands ) {\n\t\t\tlang.sThousands = lang.sInfoThousands;\n\t\t}\n\n\t\tvar decimal = lang.sDecimal;\n\t\tif ( decimal && defaultDecimal !== decimal ) {\n\t\t\t_addNumericSort( decimal );\n\t\t}\n\t}\n}\n\n\n/**\n * Map one parameter onto another\n *  @param {object} o Object to map\n *  @param {*} knew The new parameter name\n *  @param {*} old The old parameter name\n */\nvar _fnCompatMap = function ( o, knew, old ) {\n\tif ( o[ knew ] !== undefined ) {\n\t\to[ old ] = o[ knew ];\n\t}\n};\n\n\n/**\n * Provide backwards compatibility for the main DT options. Note that the new\n * options are mapped onto the old parameters, so this is an external interface\n * change only.\n *  @param {object} init Object to map\n */\nfunction _fnCompatOpts ( init )\n{\n\t_fnCompatMap( init, 'ordering',      'bSort' );\n\t_fnCompatMap( init, 'orderMulti',    'bSortMulti' );\n\t_fnCompatMap( init, 'orderClasses',  'bSortClasses' );\n\t_fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );\n\t_fnCompatMap( init, 'order',         'aaSorting' );\n\t_fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );\n\t_fnCompatMap( init, 'paging',        'bPaginate' );\n\t_fnCompatMap( init, 'pagingType',    'sPaginationType' );\n\t_fnCompatMap( init, 'pageLength',    'iDisplayLength' );\n\t_fnCompatMap( init, 'searching',     'bFilter' );\n\n\t// Boolean initialisation of x-scrolling\n\tif ( typeof init.sScrollX === 'boolean' ) {\n\t\tinit.sScrollX = init.sScrollX ? '100%' : '';\n\t}\n\tif ( typeof init.scrollX === 'boolean' ) {\n\t\tinit.scrollX = init.scrollX ? '100%' : '';\n\t}\n\n\t// Column search objects are in an array, so it needs to be converted\n\t// element by element\n\tvar searchCols = init.aoSearchCols;\n\n\tif ( searchCols ) {\n\t\tfor ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {\n\t\t\tif ( searchCols[i] ) {\n\t\t\t\t_fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * Provide backwards compatibility for column options. Note that the new options\n * are mapped onto the old parameters, so this is an external interface change\n * only.\n *  @param {object} init Object to map\n */\nfunction _fnCompatCols ( init )\n{\n\t_fnCompatMap( init, 'orderable',     'bSortable' );\n\t_fnCompatMap( init, 'orderData',     'aDataSort' );\n\t_fnCompatMap( init, 'orderSequence', 'asSorting' );\n\t_fnCompatMap( init, 'orderDataType', 'sortDataType' );\n\n\t// orderData can be given as an integer\n\tvar dataSort = init.aDataSort;\n\tif ( typeof dataSort === 'number' && ! Array.isArray( dataSort ) ) {\n\t\tinit.aDataSort = [ dataSort ];\n\t}\n}\n\n\n/**\n * Browser feature detection for capabilities, quirks\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnBrowserDetect( settings )\n{\n\t// We don't need to do this every time DataTables is constructed, the values\n\t// calculated are specific to the browser and OS configuration which we\n\t// don't expect to change between initialisations\n\tif ( ! DataTable.__browser ) {\n\t\tvar browser = {};\n\t\tDataTable.__browser = browser;\n\n\t\t// Scrolling feature / quirks detection\n\t\tvar n = $('<div/>')\n\t\t\t.css( {\n\t\t\t\tposition: 'fixed',\n\t\t\t\ttop: 0,\n\t\t\t\tleft: $(window).scrollLeft()*-1, // allow for scrolling\n\t\t\t\theight: 1,\n\t\t\t\twidth: 1,\n\t\t\t\toverflow: 'hidden'\n\t\t\t} )\n\t\t\t.append(\n\t\t\t\t$('<div/>')\n\t\t\t\t\t.css( {\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: 1,\n\t\t\t\t\t\tleft: 1,\n\t\t\t\t\t\twidth: 100,\n\t\t\t\t\t\toverflow: 'scroll'\n\t\t\t\t\t} )\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\theight: 10\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t)\n\t\t\t)\n\t\t\t.appendTo( 'body' );\n\n\t\tvar outer = n.children();\n\t\tvar inner = outer.children();\n\n\t\t// Numbers below, in order, are:\n\t\t// inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth\n\t\t//\n\t\t// IE6 XP:                           100 100 100  83\n\t\t// IE7 Vista:                        100 100 100  83\n\t\t// IE 8+ Windows:                     83  83 100  83\n\t\t// Evergreen Windows:                 83  83 100  83\n\t\t// Evergreen Mac with scrollbars:     85  85 100  85\n\t\t// Evergreen Mac without scrollbars: 100 100 100 100\n\n\t\t// Get scrollbar width\n\t\tbrowser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\n\n\t\t// IE6/7 will oversize a width 100% element inside a scrolling element, to\n\t\t// include the width of the scrollbar, while other browsers ensure the inner\n\t\t// element is contained without forcing scrolling\n\t\tbrowser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;\n\n\t\t// In rtl text layout, some browsers (most, but not all) will place the\n\t\t// scrollbar on the left, rather than the right.\n\t\tbrowser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;\n\n\t\t// IE8- don't provide height and width for getBoundingClientRect\n\t\tbrowser.bBounding = n[0].getBoundingClientRect().width ? true : false;\n\n\t\tn.remove();\n\t}\n\n\t$.extend( settings.oBrowser, DataTable.__browser );\n\tsettings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n}\n\n\n/**\n * Array.prototype reduce[Right] method, used for browsers which don't support\n * JS 1.6. Done this way to reduce code size, since we iterate either way\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnReduce ( that, fn, init, start, end, inc )\n{\n\tvar\n\t\ti = start,\n\t\tvalue,\n\t\tisSet = false;\n\n\tif ( init !== undefined ) {\n\t\tvalue = init;\n\t\tisSet = true;\n\t}\n\n\twhile ( i !== end ) {\n\t\tif ( ! that.hasOwnProperty(i) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvalue = isSet ?\n\t\t\tfn( value, that[i], i, that ) :\n\t\t\tthat[i];\n\n\t\tisSet = true;\n\t\ti += inc;\n\t}\n\n\treturn value;\n}\n\n/**\n * Add a column to the list used for the table with default values\n *  @param {object} oSettings dataTables settings object\n *  @param {node} nTh The th element for this column\n *  @memberof DataTable#oApi\n */\nfunction _fnAddColumn( oSettings, nTh )\n{\n\t// Add column to aoColumns array\n\tvar oDefaults = DataTable.defaults.column;\n\tvar iCol = oSettings.aoColumns.length;\n\tvar oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {\n\t\t\"nTh\": nTh ? nTh : document.createElement('th'),\n\t\t\"sTitle\":    oDefaults.sTitle    ? oDefaults.sTitle    : nTh ? nTh.innerHTML : '',\n\t\t\"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n\t\t\"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n\t\tidx: iCol\n\t} );\n\toSettings.aoColumns.push( oCol );\n\n\t// Add search object for column specific search. Note that the `searchCols[ iCol ]`\n\t// passed into extend can be undefined. This allows the user to give a default\n\t// with only some of the parameters defined, and also not give a default\n\tvar searchCols = oSettings.aoPreSearchCols;\n\tsearchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );\n\n\t// Use the default column options function to initialise classes etc\n\t_fnColumnOptions( oSettings, iCol, $(nTh).data() );\n}\n\n\n/**\n * Apply options for a column\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iCol column index to consider\n *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnOptions( oSettings, iCol, oOptions )\n{\n\tvar oCol = oSettings.aoColumns[ iCol ];\n\tvar oClasses = oSettings.oClasses;\n\tvar th = $(oCol.nTh);\n\n\t// Try to get width information from the DOM. We can't get it from CSS\n\t// as we'd need to parse the CSS stylesheet. `width` option can override\n\tif ( ! oCol.sWidthOrig ) {\n\t\t// Width attribute\n\t\toCol.sWidthOrig = th.attr('width') || null;\n\n\t\t// Style attribute\n\t\tvar t = (th.attr('style') || '').match(/width:\\s*(\\d+[pxem%]+)/);\n\t\tif ( t ) {\n\t\t\toCol.sWidthOrig = t[1];\n\t\t}\n\t}\n\n\t/* User specified column options */\n\tif ( oOptions !== undefined && oOptions !== null )\n\t{\n\t\t// Backwards compatibility\n\t\t_fnCompatCols( oOptions );\n\n\t\t// Map camel case parameters to their Hungarian counterparts\n\t\t_fnCamelToHungarian( DataTable.defaults.column, oOptions, true );\n\n\t\t/* Backwards compatibility for mDataProp */\n\t\tif ( oOptions.mDataProp !== undefined && !oOptions.mData )\n\t\t{\n\t\t\toOptions.mData = oOptions.mDataProp;\n\t\t}\n\n\t\tif ( oOptions.sType )\n\t\t{\n\t\t\toCol._sManualType = oOptions.sType;\n\t\t}\n\n\t\t// `class` is a reserved word in Javascript, so we need to provide\n\t\t// the ability to use a valid name for the camel case input\n\t\tif ( oOptions.className && ! oOptions.sClass )\n\t\t{\n\t\t\toOptions.sClass = oOptions.className;\n\t\t}\n\t\tif ( oOptions.sClass ) {\n\t\t\tth.addClass( oOptions.sClass );\n\t\t}\n\n\t\tvar origClass = oCol.sClass;\n\n\t\t$.extend( oCol, oOptions );\n\t\t_fnMap( oCol, oOptions, \"sWidth\", \"sWidthOrig\" );\n\n\t\t// Merge class from previously defined classes with this one, rather than just\n\t\t// overwriting it in the extend above\n\t\tif (origClass !== oCol.sClass) {\n\t\t\toCol.sClass = origClass + ' ' + oCol.sClass;\n\t\t}\n\n\t\t/* iDataSort to be applied (backwards compatibility), but aDataSort will take\n\t\t * priority if defined\n\t\t */\n\t\tif ( oOptions.iDataSort !== undefined )\n\t\t{\n\t\t\toCol.aDataSort = [ oOptions.iDataSort ];\n\t\t}\n\t\t_fnMap( oCol, oOptions, \"aDataSort\" );\n\t}\n\n\t/* Cache the data get and set functions for speed */\n\tvar mDataSrc = oCol.mData;\n\tvar mData = _fnGetObjectDataFn( mDataSrc );\n\tvar mRender = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;\n\n\tvar attrTest = function( src ) {\n\t\treturn typeof src === 'string' && src.indexOf('@') !== -1;\n\t};\n\toCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (\n\t\tattrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)\n\t);\n\toCol._setter = null;\n\n\toCol.fnGetData = function (rowData, type, meta) {\n\t\tvar innerData = mData( rowData, type, undefined, meta );\n\n\t\treturn mRender && type ?\n\t\t\tmRender( innerData, type, rowData, meta ) :\n\t\t\tinnerData;\n\t};\n\toCol.fnSetData = function ( rowData, val, meta ) {\n\t\treturn _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );\n\t};\n\n\t// Indicate if DataTables should read DOM data as an object or array\n\t// Used in _fnGetRowElements\n\tif ( typeof mDataSrc !== 'number' && ! oCol._isArrayHost ) {\n\t\toSettings._rowReadObject = true;\n\t}\n\n\t/* Feature sorting overrides column specific when off */\n\tif ( !oSettings.oFeatures.bSort )\n\t{\n\t\toCol.bSortable = false;\n\t\tth.addClass( oClasses.sSortableNone ); // Have to add class here as order event isn't called\n\t}\n\n\t/* Check that the class assignment is correct for sorting */\n\tvar bAsc = $.inArray('asc', oCol.asSorting) !== -1;\n\tvar bDesc = $.inArray('desc', oCol.asSorting) !== -1;\n\tif ( !oCol.bSortable || (!bAsc && !bDesc) )\n\t{\n\t\toCol.sSortingClass = oClasses.sSortableNone;\n\t\toCol.sSortingClassJUI = \"\";\n\t}\n\telse if ( bAsc && !bDesc )\n\t{\n\t\toCol.sSortingClass = oClasses.sSortableAsc;\n\t\toCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;\n\t}\n\telse if ( !bAsc && bDesc )\n\t{\n\t\toCol.sSortingClass = oClasses.sSortableDesc;\n\t\toCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;\n\t}\n\telse\n\t{\n\t\toCol.sSortingClass = oClasses.sSortable;\n\t\toCol.sSortingClassJUI = oClasses.sSortJUI;\n\t}\n}\n\n\n/**\n * Adjust the table column widths for new data. Note: you would probably want to\n * do a redraw after calling this function!\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAdjustColumnSizing ( settings )\n{\n\t/* Not interested in doing column width calculation if auto-width is disabled */\n\tif ( settings.oFeatures.bAutoWidth !== false )\n\t{\n\t\tvar columns = settings.aoColumns;\n\n\t\t_fnCalculateColumnWidths( settings );\n\t\tfor ( var i=0 , iLen=columns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tcolumns[i].nTh.style.width = columns[i].sWidth;\n\t\t}\n\t}\n\n\tvar scroll = settings.oScroll;\n\tif ( scroll.sY !== '' || scroll.sX !== '')\n\t{\n\t\t_fnScrollDraw( settings );\n\t}\n\n\t_fnCallbackFire( settings, null, 'column-sizing', [settings] );\n}\n\n\n/**\n * Convert the index of a visible column to the index in the data array (take account\n * of hidden columns)\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iMatch Visible column index to lookup\n *  @returns {int} i the data index\n *  @memberof DataTable#oApi\n */\nfunction _fnVisibleToColumnIndex( oSettings, iMatch )\n{\n\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\n\treturn typeof aiVis[iMatch] === 'number' ?\n\t\taiVis[iMatch] :\n\t\tnull;\n}\n\n\n/**\n * Convert the index of an index in the data array and convert it to the visible\n *   column index (take account of hidden columns)\n *  @param {int} iMatch Column index to lookup\n *  @param {object} oSettings dataTables settings object\n *  @returns {int} i the data index\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnIndexToVisible( oSettings, iMatch )\n{\n\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\tvar iPos = $.inArray( iMatch, aiVis );\n\n\treturn iPos !== -1 ? iPos : null;\n}\n\n\n/**\n * Get the number of visible columns\n *  @param {object} oSettings dataTables settings object\n *  @returns {int} i the number of visible columns\n *  @memberof DataTable#oApi\n */\nfunction _fnVisbleColumns( oSettings )\n{\n\tvar vis = 0;\n\n\t// No reduce in IE8, use a loop for now\n\t$.each( oSettings.aoColumns, function ( i, col ) {\n\t\tif ( col.bVisible && $(col.nTh).css('display') !== 'none' ) {\n\t\t\tvis++;\n\t\t}\n\t} );\n\n\treturn vis;\n}\n\n\n/**\n * Get an array of column indexes that match a given property\n *  @param {object} oSettings dataTables settings object\n *  @param {string} sParam Parameter in aoColumns to look for - typically\n *    bVisible or bSearchable\n *  @returns {array} Array of indexes with matched properties\n *  @memberof DataTable#oApi\n */\nfunction _fnGetColumns( oSettings, sParam )\n{\n\tvar a = [];\n\n\t$.map( oSettings.aoColumns, function(val, i) {\n\t\tif ( val[sParam] ) {\n\t\t\ta.push( i );\n\t\t}\n\t} );\n\n\treturn a;\n}\n\n\n/**\n * Calculate the 'type' of a column\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnTypes ( settings )\n{\n\tvar columns = settings.aoColumns;\n\tvar data = settings.aoData;\n\tvar types = DataTable.ext.type.detect;\n\tvar i, ien, j, jen, k, ken;\n\tvar col, cell, detectedType, cache;\n\n\t// For each column, spin over the \n\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\tcol = columns[i];\n\t\tcache = [];\n\n\t\tif ( ! col.sType && col._sManualType ) {\n\t\t\tcol.sType = col._sManualType;\n\t\t}\n\t\telse if ( ! col.sType ) {\n\t\t\tfor ( j=0, jen=types.length ; j<jen ; j++ ) {\n\t\t\t\tfor ( k=0, ken=data.length ; k<ken ; k++ ) {\n\t\t\t\t\t// Use a cache array so we only need to get the type data\n\t\t\t\t\t// from the formatter once (when using multiple detectors)\n\t\t\t\t\tif ( cache[k] === undefined ) {\n\t\t\t\t\t\tcache[k] = _fnGetCellData( settings, k, i, 'type' );\n\t\t\t\t\t}\n\n\t\t\t\t\tdetectedType = types[j]( cache[k], settings );\n\n\t\t\t\t\t// If null, then this type can't apply to this column, so\n\t\t\t\t\t// rather than testing all cells, break out. There is an\n\t\t\t\t\t// exception for the last type which is `html`. We need to\n\t\t\t\t\t// scan all rows since it is possible to mix string and HTML\n\t\t\t\t\t// types\n\t\t\t\t\tif ( ! detectedType && j !== types.length-1 ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only a single match is needed for html type since it is\n\t\t\t\t\t// bottom of the pile and very similar to string - but it\n\t\t\t\t\t// must not be empty\n\t\t\t\t\tif ( detectedType === 'html' && ! _empty(cache[k]) ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Type is valid for all data points in the column - use this\n\t\t\t\t// type\n\t\t\t\tif ( detectedType ) {\n\t\t\t\t\tcol.sType = detectedType;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Fall back - if no type was detected, always use string\n\t\t\tif ( ! col.sType ) {\n\t\t\t\tcol.sType = 'string';\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * Take the column definitions and static columns arrays and calculate how\n * they relate to column indexes. The callback function will then apply the\n * definition found for a column to a suitable configuration object.\n *  @param {object} oSettings dataTables settings object\n *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n *  @param {array} aoCols The aoColumns array that defines columns individually\n *  @param {function} fn Callback function - takes two parameters, the calculated\n *    column index and the definition for that column.\n *  @memberof DataTable#oApi\n */\nfunction _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, fn )\n{\n\tvar i, iLen, j, jLen, k, kLen, def;\n\tvar columns = oSettings.aoColumns;\n\n\t// Column definitions with aTargets\n\tif ( aoColDefs )\n\t{\n\t\t/* Loop over the definitions array - loop in reverse so first instance has priority */\n\t\tfor ( i=aoColDefs.length-1 ; i>=0 ; i-- )\n\t\t{\n\t\t\tdef = aoColDefs[i];\n\n\t\t\t/* Each definition can target multiple columns, as it is an array */\n\t\t\tvar aTargets = def.target !== undefined\n\t\t\t\t? def.target\n\t\t\t\t: def.targets !== undefined\n\t\t\t\t\t? def.targets\n\t\t\t\t\t: def.aTargets;\n\n\t\t\tif ( ! Array.isArray( aTargets ) )\n\t\t\t{\n\t\t\t\taTargets = [ aTargets ];\n\t\t\t}\n\n\t\t\tfor ( j=0, jLen=aTargets.length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tif ( typeof aTargets[j] === 'number' && aTargets[j] >= 0 )\n\t\t\t\t{\n\t\t\t\t\t/* Add columns that we don't yet know about */\n\t\t\t\t\twhile( columns.length <= aTargets[j] )\n\t\t\t\t\t{\n\t\t\t\t\t\t_fnAddColumn( oSettings );\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Integer, basic index */\n\t\t\t\t\tfn( aTargets[j], def );\n\t\t\t\t}\n\t\t\t\telse if ( typeof aTargets[j] === 'number' && aTargets[j] < 0 )\n\t\t\t\t{\n\t\t\t\t\t/* Negative integer, right to left column counting */\n\t\t\t\t\tfn( columns.length+aTargets[j], def );\n\t\t\t\t}\n\t\t\t\telse if ( typeof aTargets[j] === 'string' )\n\t\t\t\t{\n\t\t\t\t\t/* Class name matching on TH element */\n\t\t\t\t\tfor ( k=0, kLen=columns.length ; k<kLen ; k++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( aTargets[j] == \"_all\" ||\n\t\t\t\t\t\t     $(columns[k].nTh).hasClass( aTargets[j] ) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfn( k, def );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Statically defined columns array\n\tif ( aoCols )\n\t{\n\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tfn( i, aoCols[i] );\n\t\t}\n\t}\n}\n\n/**\n * Add a data array to the table, creating DOM node etc. This is the parallel to\n * _fnGatherData, but for adding rows from a Javascript source, rather than a\n * DOM source.\n *  @param {object} oSettings dataTables settings object\n *  @param {array} aData data array to be added\n *  @param {node} [nTr] TR element to add to the table - optional. If not given,\n *    DataTables will create a row automatically\n *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n *    if nTr is.\n *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n *  @memberof DataTable#oApi\n */\nfunction _fnAddData ( oSettings, aDataIn, nTr, anTds )\n{\n\t/* Create the object for storing information about this new row */\n\tvar iRow = oSettings.aoData.length;\n\tvar oData = $.extend( true, {}, DataTable.models.oRow, {\n\t\tsrc: nTr ? 'dom' : 'data',\n\t\tidx: iRow\n\t} );\n\n\toData._aData = aDataIn;\n\toSettings.aoData.push( oData );\n\n\t/* Create the cells */\n\tvar nTd, sThisType;\n\tvar columns = oSettings.aoColumns;\n\n\t// Invalidate the column types as the new data needs to be revalidated\n\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t{\n\t\tcolumns[i].sType = null;\n\t}\n\n\t/* Add to the display array */\n\toSettings.aiDisplayMaster.push( iRow );\n\n\tvar id = oSettings.rowIdFn( aDataIn );\n\tif ( id !== undefined ) {\n\t\toSettings.aIds[ id ] = oData;\n\t}\n\n\t/* Create the DOM information, or register it if already present */\n\tif ( nTr || ! oSettings.oFeatures.bDeferRender )\n\t{\n\t\t_fnCreateTr( oSettings, iRow, nTr, anTds );\n\t}\n\n\treturn iRow;\n}\n\n\n/**\n * Add one or more TR elements to the table. Generally we'd expect to\n * use this for reading data from a DOM sourced table, but it could be\n * used for an TR element. Note that if a TR is given, it is used (i.e.\n * it is not cloned).\n *  @param {object} settings dataTables settings object\n *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n *  @returns {array} Array of indexes for the added rows\n *  @memberof DataTable#oApi\n */\nfunction _fnAddTr( settings, trs )\n{\n\tvar row;\n\n\t// Allow an individual node to be passed in\n\tif ( ! (trs instanceof $) ) {\n\t\ttrs = $(trs);\n\t}\n\n\treturn trs.map( function (i, el) {\n\t\trow = _fnGetRowElements( settings, el );\n\t\treturn _fnAddData( settings, row.data, el, row.cells );\n\t} );\n}\n\n\n/**\n * Take a TR element and convert it to an index in aoData\n *  @param {object} oSettings dataTables settings object\n *  @param {node} n the TR element to find\n *  @returns {int} index if the node is found, null if not\n *  @memberof DataTable#oApi\n */\nfunction _fnNodeToDataIndex( oSettings, n )\n{\n\treturn (n._DT_RowIndex!==undefined) ? n._DT_RowIndex : null;\n}\n\n\n/**\n * Take a TD element and convert it into a column data index (not the visible index)\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iRow The row number the TD/TH can be found in\n *  @param {node} n The TD/TH element to find\n *  @returns {int} index if the node is found, -1 if not\n *  @memberof DataTable#oApi\n */\nfunction _fnNodeToColumnIndex( oSettings, iRow, n )\n{\n\treturn $.inArray( n, oSettings.aoData[ iRow ].anCells );\n}\n\n\n/**\n * Get the data for a given cell from the internal cache, taking into account data mapping\n *  @param {object} settings dataTables settings object\n *  @param {int} rowIdx aoData row id\n *  @param {int} colIdx Column index\n *  @param {string} type data get type ('display', 'type' 'filter|search' 'sort|order')\n *  @returns {*} Cell data\n *  @memberof DataTable#oApi\n */\nfunction _fnGetCellData( settings, rowIdx, colIdx, type )\n{\n\tif (type === 'search') {\n\t\ttype = 'filter';\n\t}\n\telse if (type === 'order') {\n\t\ttype = 'sort';\n\t}\n\n\tvar draw           = settings.iDraw;\n\tvar col            = settings.aoColumns[colIdx];\n\tvar rowData        = settings.aoData[rowIdx]._aData;\n\tvar defaultContent = col.sDefaultContent;\n\tvar cellData       = col.fnGetData( rowData, type, {\n\t\tsettings: settings,\n\t\trow:      rowIdx,\n\t\tcol:      colIdx\n\t} );\n\n\tif ( cellData === undefined ) {\n\t\tif ( settings.iDrawError != draw && defaultContent === null ) {\n\t\t\t_fnLog( settings, 0, \"Requested unknown parameter \"+\n\t\t\t\t(typeof col.mData=='function' ? '{function}' : \"'\"+col.mData+\"'\")+\n\t\t\t\t\" for row \"+rowIdx+\", column \"+colIdx, 4 );\n\t\t\tsettings.iDrawError = draw;\n\t\t}\n\t\treturn defaultContent;\n\t}\n\n\t// When the data source is null and a specific data type is requested (i.e.\n\t// not the original data), we can use default column data\n\tif ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {\n\t\tcellData = defaultContent;\n\t}\n\telse if ( typeof cellData === 'function' ) {\n\t\t// If the data source is a function, then we run it and use the return,\n\t\t// executing in the scope of the data object (for instances)\n\t\treturn cellData.call( rowData );\n\t}\n\n\tif ( cellData === null && type === 'display' ) {\n\t\treturn '';\n\t}\n\n\tif ( type === 'filter' ) {\n\t\tvar fomatters = DataTable.ext.type.search;\n\n\t\tif ( fomatters[ col.sType ] ) {\n\t\t\tcellData = fomatters[ col.sType ]( cellData );\n\t\t}\n\t}\n\n\treturn cellData;\n}\n\n\n/**\n * Set the value for a specific cell, into the internal data cache\n *  @param {object} settings dataTables settings object\n *  @param {int} rowIdx aoData row id\n *  @param {int} colIdx Column index\n *  @param {*} val Value to set\n *  @memberof DataTable#oApi\n */\nfunction _fnSetCellData( settings, rowIdx, colIdx, val )\n{\n\tvar col     = settings.aoColumns[colIdx];\n\tvar rowData = settings.aoData[rowIdx]._aData;\n\n\tcol.fnSetData( rowData, val, {\n\t\tsettings: settings,\n\t\trow:      rowIdx,\n\t\tcol:      colIdx\n\t}  );\n}\n\n\n// Private variable that is used to match action syntax in the data property object\nvar __reArray = /\\[.*?\\]$/;\nvar __reFn = /\\(\\)$/;\n\n/**\n * Split string on periods, taking into account escaped periods\n * @param  {string} str String to split\n * @return {array} Split string\n */\nfunction _fnSplitObjNotation( str )\n{\n\treturn $.map( str.match(/(\\\\.|[^\\.])+/g) || [''], function ( s ) {\n\t\treturn s.replace(/\\\\\\./g, '.');\n\t} );\n}\n\n\n/**\n * Return a function that can be used to get data from a source object, taking\n * into account the ability to use nested objects as a source\n *  @param {string|int|function} mSource The data source for the object\n *  @returns {function} Data get function\n *  @memberof DataTable#oApi\n */\nvar _fnGetObjectDataFn = DataTable.util.get;\n\n\n/**\n * Return a function that can be used to set data from a source object, taking\n * into account the ability to use nested objects as a source\n *  @param {string|int|function} mSource The data source for the object\n *  @returns {function} Data set function\n *  @memberof DataTable#oApi\n */\nvar _fnSetObjectDataFn = DataTable.util.set;\n\n\n/**\n * Return an array with the full table data\n *  @param {object} oSettings dataTables settings object\n *  @returns array {array} aData Master data array\n *  @memberof DataTable#oApi\n */\nfunction _fnGetDataMaster ( settings )\n{\n\treturn _pluck( settings.aoData, '_aData' );\n}\n\n\n/**\n * Nuke the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnClearTable( settings )\n{\n\tsettings.aoData.length = 0;\n\tsettings.aiDisplayMaster.length = 0;\n\tsettings.aiDisplay.length = 0;\n\tsettings.aIds = {};\n}\n\n\n /**\n * Take an array of integers (index array) and remove a target integer (value - not\n * the key!)\n *  @param {array} a Index array to target\n *  @param {int} iTarget value to find\n *  @memberof DataTable#oApi\n */\nfunction _fnDeleteIndex( a, iTarget, splice )\n{\n\tvar iTargetIndex = -1;\n\n\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ )\n\t{\n\t\tif ( a[i] == iTarget )\n\t\t{\n\t\t\tiTargetIndex = i;\n\t\t}\n\t\telse if ( a[i] > iTarget )\n\t\t{\n\t\t\ta[i]--;\n\t\t}\n\t}\n\n\tif ( iTargetIndex != -1 && splice === undefined )\n\t{\n\t\ta.splice( iTargetIndex, 1 );\n\t}\n}\n\n\n/**\n * Mark cached data as invalid such that a re-read of the data will occur when\n * the cached data is next requested. Also update from the data source object.\n *\n * @param {object} settings DataTables settings object\n * @param {int}    rowIdx   Row index to invalidate\n * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n *     or 'data'\n * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n *     row will be invalidated\n * @memberof DataTable#oApi\n *\n * @todo For the modularisation of v1.11 this will need to become a callback, so\n *   the sort and filter methods can subscribe to it. That will required\n *   initialisation options for sorting, which is why it is not already baked in\n */\nfunction _fnInvalidate( settings, rowIdx, src, colIdx )\n{\n\tvar row = settings.aoData[ rowIdx ];\n\tvar i, ien;\n\tvar cellWrite = function ( cell, col ) {\n\t\t// This is very frustrating, but in IE if you just write directly\n\t\t// to innerHTML, and elements that are overwritten are GC'ed,\n\t\t// even if there is a reference to them elsewhere\n\t\twhile ( cell.childNodes.length ) {\n\t\t\tcell.removeChild( cell.firstChild );\n\t\t}\n\n\t\tcell.innerHTML = _fnGetCellData( settings, rowIdx, col, 'display' );\n\t};\n\n\t// Are we reading last data from DOM or the data object?\n\tif ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {\n\t\t// Read the data from the DOM\n\t\trow._aData = _fnGetRowElements(\n\t\t\t\tsettings, row, colIdx, colIdx === undefined ? undefined : row._aData\n\t\t\t)\n\t\t\t.data;\n\t}\n\telse {\n\t\t// Reading from data object, update the DOM\n\t\tvar cells = row.anCells;\n\n\t\tif ( cells ) {\n\t\t\tif ( colIdx !== undefined ) {\n\t\t\t\tcellWrite( cells[colIdx], colIdx );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\t\tcellWrite( cells[i], i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// For both row and cell invalidation, the cached data for sorting and\n\t// filtering is nulled out\n\trow._aSortData = null;\n\trow._aFilterData = null;\n\n\t// Invalidate the type for a specific column (if given) or all columns since\n\t// the data might have changed\n\tvar cols = settings.aoColumns;\n\tif ( colIdx !== undefined ) {\n\t\tcols[ colIdx ].sType = null;\n\t}\n\telse {\n\t\tfor ( i=0, ien=cols.length ; i<ien ; i++ ) {\n\t\t\tcols[i].sType = null;\n\t\t}\n\n\t\t// Update DataTables special `DT_*` attributes for the row\n\t\t_fnRowAttributes( settings, row );\n\t}\n}\n\n\n/**\n * Build a data source object from an HTML row, reading the contents of the\n * cells that are in the row.\n *\n * @param {object} settings DataTables settings object\n * @param {node|object} TR element from which to read data or existing row\n *   object from which to re-read the data from the cells\n * @param {int} [colIdx] Optional column index\n * @param {array|object} [d] Data source object. If `colIdx` is given then this\n *   parameter should also be given and will be used to write the data into.\n *   Only the column in question will be written\n * @returns {object} Object with two parameters: `data` the data read, in\n *   document order, and `cells` and array of nodes (they can be useful to the\n *   caller, so rather than needing a second traversal to get them, just return\n *   them from here).\n * @memberof DataTable#oApi\n */\nfunction _fnGetRowElements( settings, row, colIdx, d )\n{\n\tvar\n\t\ttds = [],\n\t\ttd = row.firstChild,\n\t\tname, col, o, i=0, contents,\n\t\tcolumns = settings.aoColumns,\n\t\tobjectRead = settings._rowReadObject;\n\n\t// Allow the data object to be passed in, or construct\n\td = d !== undefined ?\n\t\td :\n\t\tobjectRead ?\n\t\t\t{} :\n\t\t\t[];\n\n\tvar attr = function ( str, td  ) {\n\t\tif ( typeof str === 'string' ) {\n\t\t\tvar idx = str.indexOf('@');\n\n\t\t\tif ( idx !== -1 ) {\n\t\t\t\tvar attr = str.substring( idx+1 );\n\t\t\t\tvar setter = _fnSetObjectDataFn( str );\n\t\t\t\tsetter( d, td.getAttribute( attr ) );\n\t\t\t}\n\t\t}\n\t};\n\n\t// Read data from a cell and store into the data object\n\tvar cellProcess = function ( cell ) {\n\t\tif ( colIdx === undefined || colIdx === i ) {\n\t\t\tcol = columns[i];\n\t\t\tcontents = (cell.innerHTML).trim();\n\n\t\t\tif ( col && col._bAttrSrc ) {\n\t\t\t\tvar setter = _fnSetObjectDataFn( col.mData._ );\n\t\t\t\tsetter( d, contents );\n\n\t\t\t\tattr( col.mData.sort, cell );\n\t\t\t\tattr( col.mData.type, cell );\n\t\t\t\tattr( col.mData.filter, cell );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Depending on the `data` option for the columns the data can\n\t\t\t\t// be read to either an object or an array.\n\t\t\t\tif ( objectRead ) {\n\t\t\t\t\tif ( ! col._setter ) {\n\t\t\t\t\t\t// Cache the setter function\n\t\t\t\t\t\tcol._setter = _fnSetObjectDataFn( col.mData );\n\t\t\t\t\t}\n\t\t\t\t\tcol._setter( d, contents );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\td[i] = contents;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ti++;\n\t};\n\n\tif ( td ) {\n\t\t// `tr` element was passed in\n\t\twhile ( td ) {\n\t\t\tname = td.nodeName.toUpperCase();\n\n\t\t\tif ( name == \"TD\" || name == \"TH\" ) {\n\t\t\t\tcellProcess( td );\n\t\t\t\ttds.push( td );\n\t\t\t}\n\n\t\t\ttd = td.nextSibling;\n\t\t}\n\t}\n\telse {\n\t\t// Existing row object passed in\n\t\ttds = row.anCells;\n\n\t\tfor ( var j=0, jen=tds.length ; j<jen ; j++ ) {\n\t\t\tcellProcess( tds[j] );\n\t\t}\n\t}\n\n\t// Read the ID from the DOM if present\n\tvar rowNode = row.firstChild ? row : row.nTr;\n\n\tif ( rowNode ) {\n\t\tvar id = rowNode.getAttribute( 'id' );\n\n\t\tif ( id ) {\n\t\t\t_fnSetObjectDataFn( settings.rowId )( d, id );\n\t\t}\n\t}\n\n\treturn {\n\t\tdata: d,\n\t\tcells: tds\n\t};\n}\n/**\n * Create a new TR element (and it's TD children) for a row\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iRow Row to consider\n *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n *    DataTables will create a row automatically\n *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n *    if nTr is.\n *  @memberof DataTable#oApi\n */\nfunction _fnCreateTr ( oSettings, iRow, nTrIn, anTds )\n{\n\tvar\n\t\trow = oSettings.aoData[iRow],\n\t\trowData = row._aData,\n\t\tcells = [],\n\t\tnTr, nTd, oCol,\n\t\ti, iLen, create;\n\n\tif ( row.nTr === null )\n\t{\n\t\tnTr = nTrIn || document.createElement('tr');\n\n\t\trow.nTr = nTr;\n\t\trow.anCells = cells;\n\n\t\t/* Use a private property on the node to allow reserve mapping from the node\n\t\t * to the aoData array for fast look up\n\t\t */\n\t\tnTr._DT_RowIndex = iRow;\n\n\t\t/* Special parameters can be given by the data source to be used on the row */\n\t\t_fnRowAttributes( oSettings, row );\n\n\t\t/* Process each column */\n\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\toCol = oSettings.aoColumns[i];\n\t\t\tcreate = nTrIn ? false : true;\n\n\t\t\tnTd = create ? document.createElement( oCol.sCellType ) : anTds[i];\n\n\t\t\tif (! nTd) {\n\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\n\t\t\t}\n\n\t\t\tnTd._DT_CellIndex = {\n\t\t\t\trow: iRow,\n\t\t\t\tcolumn: i\n\t\t\t};\n\t\t\t\n\t\t\tcells.push( nTd );\n\n\t\t\t// Need to create the HTML if new, or if a rendering function is defined\n\t\t\tif ( create || ((oCol.mRender || oCol.mData !== i) &&\n\t\t\t\t (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')\n\t\t\t)) {\n\t\t\t\tnTd.innerHTML = _fnGetCellData( oSettings, iRow, i, 'display' );\n\t\t\t}\n\n\t\t\t/* Add user defined class */\n\t\t\tif ( oCol.sClass )\n\t\t\t{\n\t\t\t\tnTd.className += ' '+oCol.sClass;\n\t\t\t}\n\n\t\t\t// Visibility - add or remove as required\n\t\t\tif ( oCol.bVisible && ! nTrIn )\n\t\t\t{\n\t\t\t\tnTr.appendChild( nTd );\n\t\t\t}\n\t\t\telse if ( ! oCol.bVisible && nTrIn )\n\t\t\t{\n\t\t\t\tnTd.parentNode.removeChild( nTd );\n\t\t\t}\n\n\t\t\tif ( oCol.fnCreatedCell )\n\t\t\t{\n\t\t\t\toCol.fnCreatedCell.call( oSettings.oInstance,\n\t\t\t\t\tnTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t_fnCallbackFire( oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow, cells] );\n\t}\n}\n\n\n/**\n * Add attributes to a row based on the special `DT_*` parameters in a data\n * source object.\n *  @param {object} settings DataTables settings object\n *  @param {object} DataTables row object for the row to be modified\n *  @memberof DataTable#oApi\n */\nfunction _fnRowAttributes( settings, row )\n{\n\tvar tr = row.nTr;\n\tvar data = row._aData;\n\n\tif ( tr ) {\n\t\tvar id = settings.rowIdFn( data );\n\n\t\tif ( id ) {\n\t\t\ttr.id = id;\n\t\t}\n\n\t\tif ( data.DT_RowClass ) {\n\t\t\t// Remove any classes added by DT_RowClass before\n\t\t\tvar a = data.DT_RowClass.split(' ');\n\t\t\trow.__rowc = row.__rowc ?\n\t\t\t\t_unique( row.__rowc.concat( a ) ) :\n\t\t\t\ta;\n\n\t\t\t$(tr)\n\t\t\t\t.removeClass( row.__rowc.join(' ') )\n\t\t\t\t.addClass( data.DT_RowClass );\n\t\t}\n\n\t\tif ( data.DT_RowAttr ) {\n\t\t\t$(tr).attr( data.DT_RowAttr );\n\t\t}\n\n\t\tif ( data.DT_RowData ) {\n\t\t\t$(tr).data( data.DT_RowData );\n\t\t}\n\t}\n}\n\n\n/**\n * Create the HTML header for the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnBuildHead( oSettings )\n{\n\tvar i, ien, cell, row, column;\n\tvar thead = oSettings.nTHead;\n\tvar tfoot = oSettings.nTFoot;\n\tvar createHeader = $('th, td', thead).length === 0;\n\tvar classes = oSettings.oClasses;\n\tvar columns = oSettings.aoColumns;\n\n\tif ( createHeader ) {\n\t\trow = $('<tr/>').appendTo( thead );\n\t}\n\n\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\tcolumn = columns[i];\n\t\tcell = $( column.nTh ).addClass( column.sClass );\n\n\t\tif ( createHeader ) {\n\t\t\tcell.appendTo( row );\n\t\t}\n\n\t\t// 1.11 move into sorting\n\t\tif ( oSettings.oFeatures.bSort ) {\n\t\t\tcell.addClass( column.sSortingClass );\n\n\t\t\tif ( column.bSortable !== false ) {\n\t\t\t\tcell\n\t\t\t\t\t.attr( 'tabindex', oSettings.iTabIndex )\n\t\t\t\t\t.attr( 'aria-controls', oSettings.sTableId );\n\n\t\t\t\t_fnSortAttachListener( oSettings, column.nTh, i );\n\t\t\t}\n\t\t}\n\n\t\tif ( column.sTitle != cell[0].innerHTML ) {\n\t\t\tcell.html( column.sTitle );\n\t\t}\n\n\t\t_fnRenderer( oSettings, 'header' )(\n\t\t\toSettings, cell, column, classes\n\t\t);\n\t}\n\n\tif ( createHeader ) {\n\t\t_fnDetectHeader( oSettings.aoHeader, thead );\n\t}\n\n\t/* Deal with the footer - add classes if required */\n\t$(thead).children('tr').children('th, td').addClass( classes.sHeaderTH );\n\t$(tfoot).children('tr').children('th, td').addClass( classes.sFooterTH );\n\n\t// Cache the footer cells. Note that we only take the cells from the first\n\t// row in the footer. If there is more than one row the user wants to\n\t// interact with, they need to use the table().foot() method. Note also this\n\t// allows cells to be used for multiple columns using colspan\n\tif ( tfoot !== null ) {\n\t\tvar cells = oSettings.aoFooter[0];\n\n\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\tcolumn = columns[i];\n\n\t\t\tif (column) {\n\t\t\t\tcolumn.nTf = cells[i].cell;\n\t\n\t\t\t\tif ( column.sClass ) {\n\t\t\t\t\t$(column.nTf).addClass( column.sClass );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * Draw the header (or footer) element based on the column visibility states. The\n * methodology here is to use the layout array from _fnDetectHeader, modified for\n * the instantaneous column visibility, to construct the new layout. The grid is\n * traversed over cell at a time in a rows x columns grid fashion, although each\n * cell insert can cover multiple elements in the grid - which is tracks using the\n * aApplied array. Cell inserts in the grid will only occur where there isn't\n * already a cell in that position.\n *  @param {object} oSettings dataTables settings object\n *  @param array {objects} aoSource Layout array from _fnDetectHeader\n *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,\n *  @memberof DataTable#oApi\n */\nfunction _fnDrawHead( oSettings, aoSource, bIncludeHidden )\n{\n\tvar i, iLen, j, jLen, k, kLen, n, nLocalTr;\n\tvar aoLocal = [];\n\tvar aApplied = [];\n\tvar iColumns = oSettings.aoColumns.length;\n\tvar iRowspan, iColspan;\n\n\tif ( ! aoSource )\n\t{\n\t\treturn;\n\t}\n\n\tif (  bIncludeHidden === undefined )\n\t{\n\t\tbIncludeHidden = false;\n\t}\n\n\t/* Make a copy of the master layout array, but without the visible columns in it */\n\tfor ( i=0, iLen=aoSource.length ; i<iLen ; i++ )\n\t{\n\t\taoLocal[i] = aoSource[i].slice();\n\t\taoLocal[i].nTr = aoSource[i].nTr;\n\n\t\t/* Remove any columns which are currently hidden */\n\t\tfor ( j=iColumns-1 ; j>=0 ; j-- )\n\t\t{\n\t\t\tif ( !oSettings.aoColumns[j].bVisible && !bIncludeHidden )\n\t\t\t{\n\t\t\t\taoLocal[i].splice( j, 1 );\n\t\t\t}\n\t\t}\n\n\t\t/* Prep the applied array - it needs an element for each row */\n\t\taApplied.push( [] );\n\t}\n\n\tfor ( i=0, iLen=aoLocal.length ; i<iLen ; i++ )\n\t{\n\t\tnLocalTr = aoLocal[i].nTr;\n\n\t\t/* All cells are going to be replaced, so empty out the row */\n\t\tif ( nLocalTr )\n\t\t{\n\t\t\twhile( (n = nLocalTr.firstChild) )\n\t\t\t{\n\t\t\t\tnLocalTr.removeChild( n );\n\t\t\t}\n\t\t}\n\n\t\tfor ( j=0, jLen=aoLocal[i].length ; j<jLen ; j++ )\n\t\t{\n\t\t\tiRowspan = 1;\n\t\t\tiColspan = 1;\n\n\t\t\t/* Check to see if there is already a cell (row/colspan) covering our target\n\t\t\t * insert point. If there is, then there is nothing to do.\n\t\t\t */\n\t\t\tif ( aApplied[i][j] === undefined )\n\t\t\t{\n\t\t\t\tnLocalTr.appendChild( aoLocal[i][j].cell );\n\t\t\t\taApplied[i][j] = 1;\n\n\t\t\t\t/* Expand the cell to cover as many rows as needed */\n\t\t\t\twhile ( aoLocal[i+iRowspan] !== undefined &&\n\t\t\t\t        aoLocal[i][j].cell == aoLocal[i+iRowspan][j].cell )\n\t\t\t\t{\n\t\t\t\t\taApplied[i+iRowspan][j] = 1;\n\t\t\t\t\tiRowspan++;\n\t\t\t\t}\n\n\t\t\t\t/* Expand the cell to cover as many columns as needed */\n\t\t\t\twhile ( aoLocal[i][j+iColspan] !== undefined &&\n\t\t\t\t        aoLocal[i][j].cell == aoLocal[i][j+iColspan].cell )\n\t\t\t\t{\n\t\t\t\t\t/* Must update the applied array over the rows for the columns */\n\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t{\n\t\t\t\t\t\taApplied[i+k][j+iColspan] = 1;\n\t\t\t\t\t}\n\t\t\t\t\tiColspan++;\n\t\t\t\t}\n\n\t\t\t\t/* Do the actual expansion in the DOM */\n\t\t\t\t$(aoLocal[i][j].cell)\n\t\t\t\t\t.attr('rowspan', iRowspan)\n\t\t\t\t\t.attr('colspan', iColspan);\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * Insert the required TR nodes into the table for display\n *  @param {object} oSettings dataTables settings object\n *  @param ajaxComplete true after ajax call to complete rendering\n *  @memberof DataTable#oApi\n */\nfunction _fnDraw( oSettings, ajaxComplete )\n{\n\t// Allow for state saving and a custom start position\n\t_fnStart( oSettings );\n\n\t/* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n\tvar aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );\n\tif ( $.inArray( false, aPreDraw ) !== -1 )\n\t{\n\t\t_fnProcessingDisplay( oSettings, false );\n\t\treturn;\n\t}\n\n\tvar anRows = [];\n\tvar iRowCount = 0;\n\tvar asStripeClasses = oSettings.asStripeClasses;\n\tvar iStripes = asStripeClasses.length;\n\tvar oLang = oSettings.oLanguage;\n\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\tvar aiDisplay = oSettings.aiDisplay;\n\tvar iDisplayStart = oSettings._iDisplayStart;\n\tvar iDisplayEnd = oSettings.fnDisplayEnd();\n\n\toSettings.bDrawing = true;\n\n\t/* Server-side processing draw intercept */\n\tif ( oSettings.bDeferLoading )\n\t{\n\t\toSettings.bDeferLoading = false;\n\t\toSettings.iDraw++;\n\t\t_fnProcessingDisplay( oSettings, false );\n\t}\n\telse if ( !bServerSide )\n\t{\n\t\toSettings.iDraw++;\n\t}\n\telse if ( !oSettings.bDestroying && !ajaxComplete)\n\t{\n\t\t_fnAjaxUpdate( oSettings );\n\t\treturn;\n\t}\n\n\tif ( aiDisplay.length !== 0 )\n\t{\n\t\tvar iStart = bServerSide ? 0 : iDisplayStart;\n\t\tvar iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n\n\t\tfor ( var j=iStart ; j<iEnd ; j++ )\n\t\t{\n\t\t\tvar iDataIndex = aiDisplay[j];\n\t\t\tvar aoData = oSettings.aoData[ iDataIndex ];\n\t\t\tif ( aoData.nTr === null )\n\t\t\t{\n\t\t\t\t_fnCreateTr( oSettings, iDataIndex );\n\t\t\t}\n\n\t\t\tvar nRow = aoData.nTr;\n\n\t\t\t/* Remove the old striping classes and then add the new one */\n\t\t\tif ( iStripes !== 0 )\n\t\t\t{\n\t\t\t\tvar sStripe = asStripeClasses[ iRowCount % iStripes ];\n\t\t\t\tif ( aoData._sRowStripe != sStripe )\n\t\t\t\t{\n\t\t\t\t\t$(nRow).removeClass( aoData._sRowStripe ).addClass( sStripe );\n\t\t\t\t\taoData._sRowStripe = sStripe;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Row callback functions - might want to manipulate the row\n\t\t\t// iRowCount and j are not currently documented. Are they at all\n\t\t\t// useful?\n\t\t\t_fnCallbackFire( oSettings, 'aoRowCallback', null,\n\t\t\t\t[nRow, aoData._aData, iRowCount, j, iDataIndex] );\n\n\t\t\tanRows.push( nRow );\n\t\t\tiRowCount++;\n\t\t}\n\t}\n\telse\n\t{\n\t\t/* Table is empty - create a row with an empty message in it */\n\t\tvar sZero = oLang.sZeroRecords;\n\t\tif ( oSettings.iDraw == 1 &&  _fnDataSource( oSettings ) == 'ajax' )\n\t\t{\n\t\t\tsZero = oLang.sLoadingRecords;\n\t\t}\n\t\telse if ( oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0 )\n\t\t{\n\t\t\tsZero = oLang.sEmptyTable;\n\t\t}\n\n\t\tanRows[ 0 ] = $( '<tr/>', { 'class': iStripes ? asStripeClasses[0] : '' } )\n\t\t\t.append( $('<td />', {\n\t\t\t\t'valign':  'top',\n\t\t\t\t'colSpan': _fnVisbleColumns( oSettings ),\n\t\t\t\t'class':   oSettings.oClasses.sRowEmpty\n\t\t\t} ).html( sZero ) )[0];\n\t}\n\n\t/* Header and footer callbacks */\n\t_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],\n\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\n\t_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],\n\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\n\tvar body = $(oSettings.nTBody);\n\n\tbody.children().detach();\n\tbody.append( $(anRows) );\n\n\t/* Call all required callback functions for the end of a draw */\n\t_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings] );\n\n\t/* Draw is complete, sorting and filtering must be as well */\n\toSettings.bSorted = false;\n\toSettings.bFiltered = false;\n\toSettings.bDrawing = false;\n}\n\n\n/**\n * Redraw the table - taking account of the various features which are enabled\n *  @param {object} oSettings dataTables settings object\n *  @param {boolean} [holdPosition] Keep the current paging position. By default\n *    the paging is reset to the first page\n *  @memberof DataTable#oApi\n */\nfunction _fnReDraw( settings, holdPosition )\n{\n\tvar\n\t\tfeatures = settings.oFeatures,\n\t\tsort     = features.bSort,\n\t\tfilter   = features.bFilter;\n\n\tif ( sort ) {\n\t\t_fnSort( settings );\n\t}\n\n\tif ( filter ) {\n\t\t_fnFilterComplete( settings, settings.oPreviousSearch );\n\t}\n\telse {\n\t\t// No filtering, so we want to just use the display master\n\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t}\n\n\tif ( holdPosition !== true ) {\n\t\tsettings._iDisplayStart = 0;\n\t}\n\n\t// Let any modules know about the draw hold position state (used by\n\t// scrolling internally)\n\tsettings._drawHold = holdPosition;\n\n\t_fnDraw( settings );\n\n\tsettings._drawHold = false;\n}\n\n\n/**\n * Add the options to the page HTML for the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAddOptionsHtml ( oSettings )\n{\n\tvar classes = oSettings.oClasses;\n\tvar table = $(oSettings.nTable);\n\tvar holding = $('<div/>').insertBefore( table ); // Holding element for speed\n\tvar features = oSettings.oFeatures;\n\n\t// All DataTables are wrapped in a div\n\tvar insert = $('<div/>', {\n\t\tid:      oSettings.sTableId+'_wrapper',\n\t\t'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' '+classes.sNoFooter)\n\t} );\n\n\toSettings.nHolding = holding[0];\n\toSettings.nTableWrapper = insert[0];\n\toSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;\n\n\t/* Loop over the user set positioning and place the elements as needed */\n\tvar aDom = oSettings.sDom.split('');\n\tvar featureNode, cOption, nNewNode, cNext, sAttr, j;\n\tfor ( var i=0 ; i<aDom.length ; i++ )\n\t{\n\t\tfeatureNode = null;\n\t\tcOption = aDom[i];\n\n\t\tif ( cOption == '<' )\n\t\t{\n\t\t\t/* New container div */\n\t\t\tnNewNode = $('<div/>')[0];\n\n\t\t\t/* Check to see if we should append an id and/or a class name to the container */\n\t\t\tcNext = aDom[i+1];\n\t\t\tif ( cNext == \"'\" || cNext == '\"' )\n\t\t\t{\n\t\t\t\tsAttr = \"\";\n\t\t\t\tj = 2;\n\t\t\t\twhile ( aDom[i+j] != cNext )\n\t\t\t\t{\n\t\t\t\t\tsAttr += aDom[i+j];\n\t\t\t\t\tj++;\n\t\t\t\t}\n\n\t\t\t\t/* Replace jQuery UI constants @todo depreciated */\n\t\t\t\tif ( sAttr == \"H\" )\n\t\t\t\t{\n\t\t\t\t\tsAttr = classes.sJUIHeader;\n\t\t\t\t}\n\t\t\t\telse if ( sAttr == \"F\" )\n\t\t\t\t{\n\t\t\t\t\tsAttr = classes.sJUIFooter;\n\t\t\t\t}\n\n\t\t\t\t/* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n\t\t\t\t * breaks the string into parts and applies them as needed\n\t\t\t\t */\n\t\t\t\tif ( sAttr.indexOf('.') != -1 )\n\t\t\t\t{\n\t\t\t\t\tvar aSplit = sAttr.split('.');\n\t\t\t\t\tnNewNode.id = aSplit[0].substr(1, aSplit[0].length-1);\n\t\t\t\t\tnNewNode.className = aSplit[1];\n\t\t\t\t}\n\t\t\t\telse if ( sAttr.charAt(0) == \"#\" )\n\t\t\t\t{\n\t\t\t\t\tnNewNode.id = sAttr.substr(1, sAttr.length-1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnNewNode.className = sAttr;\n\t\t\t\t}\n\n\t\t\t\ti += j; /* Move along the position array */\n\t\t\t}\n\n\t\t\tinsert.append( nNewNode );\n\t\t\tinsert = $(nNewNode);\n\t\t}\n\t\telse if ( cOption == '>' )\n\t\t{\n\t\t\t/* End container div */\n\t\t\tinsert = insert.parent();\n\t\t}\n\t\t// @todo Move options into their own plugins?\n\t\telse if ( cOption == 'l' && features.bPaginate && features.bLengthChange )\n\t\t{\n\t\t\t/* Length */\n\t\t\tfeatureNode = _fnFeatureHtmlLength( oSettings );\n\t\t}\n\t\telse if ( cOption == 'f' && features.bFilter )\n\t\t{\n\t\t\t/* Filter */\n\t\t\tfeatureNode = _fnFeatureHtmlFilter( oSettings );\n\t\t}\n\t\telse if ( cOption == 'r' && features.bProcessing )\n\t\t{\n\t\t\t/* pRocessing */\n\t\t\tfeatureNode = _fnFeatureHtmlProcessing( oSettings );\n\t\t}\n\t\telse if ( cOption == 't' )\n\t\t{\n\t\t\t/* Table */\n\t\t\tfeatureNode = _fnFeatureHtmlTable( oSettings );\n\t\t}\n\t\telse if ( cOption ==  'i' && features.bInfo )\n\t\t{\n\t\t\t/* Info */\n\t\t\tfeatureNode = _fnFeatureHtmlInfo( oSettings );\n\t\t}\n\t\telse if ( cOption == 'p' && features.bPaginate )\n\t\t{\n\t\t\t/* Pagination */\n\t\t\tfeatureNode = _fnFeatureHtmlPaginate( oSettings );\n\t\t}\n\t\telse if ( DataTable.ext.feature.length !== 0 )\n\t\t{\n\t\t\t/* Plug-in features */\n\t\t\tvar aoFeatures = DataTable.ext.feature;\n\t\t\tfor ( var k=0, kLen=aoFeatures.length ; k<kLen ; k++ )\n\t\t\t{\n\t\t\t\tif ( cOption == aoFeatures[k].cFeature )\n\t\t\t\t{\n\t\t\t\t\tfeatureNode = aoFeatures[k].fnInit( oSettings );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/* Add to the 2D features array */\n\t\tif ( featureNode )\n\t\t{\n\t\t\tvar aanFeatures = oSettings.aanFeatures;\n\n\t\t\tif ( ! aanFeatures[cOption] )\n\t\t\t{\n\t\t\t\taanFeatures[cOption] = [];\n\t\t\t}\n\n\t\t\taanFeatures[cOption].push( featureNode );\n\t\t\tinsert.append( featureNode );\n\t\t}\n\t}\n\n\t/* Built our DOM structure - replace the holding div with what we want */\n\tholding.replaceWith( insert );\n\toSettings.nHolding = null;\n}\n\n\n/**\n * Use the DOM source to create up an array of header cells. The idea here is to\n * create a layout grid (array) of rows x columns, which contains a reference\n * to the cell that that point in the grid (regardless of col/rowspan), such that\n * any column / row could be removed and the new grid constructed\n *  @param array {object} aLayout Array to store the calculated layout in\n *  @param {node} nThead The header/footer element for the table\n *  @memberof DataTable#oApi\n */\nfunction _fnDetectHeader ( aLayout, nThead )\n{\n\tvar nTrs = $(nThead).children('tr');\n\tvar nTr, nCell;\n\tvar i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;\n\tvar bUnique;\n\tvar fnShiftCol = function ( a, i, j ) {\n\t\tvar k = a[i];\n                while ( k[j] ) {\n\t\t\tj++;\n\t\t}\n\t\treturn j;\n\t};\n\n\taLayout.splice( 0, aLayout.length );\n\n\t/* We know how many rows there are in the layout - so prep it */\n\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t{\n\t\taLayout.push( [] );\n\t}\n\n\t/* Calculate a layout array */\n\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t{\n\t\tnTr = nTrs[i];\n\t\tiColumn = 0;\n\n\t\t/* For every cell in the row... */\n\t\tnCell = nTr.firstChild;\n\t\twhile ( nCell ) {\n\t\t\tif ( nCell.nodeName.toUpperCase() == \"TD\" ||\n\t\t\t     nCell.nodeName.toUpperCase() == \"TH\" )\n\t\t\t{\n\t\t\t\t/* Get the col and rowspan attributes from the DOM and sanitise them */\n\t\t\t\tiColspan = nCell.getAttribute('colspan') * 1;\n\t\t\t\tiRowspan = nCell.getAttribute('rowspan') * 1;\n\t\t\t\tiColspan = (!iColspan || iColspan===0 || iColspan===1) ? 1 : iColspan;\n\t\t\t\tiRowspan = (!iRowspan || iRowspan===0 || iRowspan===1) ? 1 : iRowspan;\n\n\t\t\t\t/* There might be colspan cells already in this row, so shift our target\n\t\t\t\t * accordingly\n\t\t\t\t */\n\t\t\t\tiColShifted = fnShiftCol( aLayout, i, iColumn );\n\n\t\t\t\t/* Cache calculation for unique columns */\n\t\t\t\tbUnique = iColspan === 1 ? true : false;\n\n\t\t\t\t/* If there is col / rowspan, copy the information into the layout grid */\n\t\t\t\tfor ( l=0 ; l<iColspan ; l++ )\n\t\t\t\t{\n\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t{\n\t\t\t\t\t\taLayout[i+k][iColShifted+l] = {\n\t\t\t\t\t\t\t\"cell\": nCell,\n\t\t\t\t\t\t\t\"unique\": bUnique\n\t\t\t\t\t\t};\n\t\t\t\t\t\taLayout[i+k].nTr = nTr;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tnCell = nCell.nextSibling;\n\t\t}\n\t}\n}\n\n\n/**\n * Get an array of unique th elements, one for each column\n *  @param {object} oSettings dataTables settings object\n *  @param {node} nHeader automatically detect the layout from this node - optional\n *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional\n *  @returns array {node} aReturn list of unique th's\n *  @memberof DataTable#oApi\n */\nfunction _fnGetUniqueThs ( oSettings, nHeader, aLayout )\n{\n\tvar aReturn = [];\n\tif ( !aLayout )\n\t{\n\t\taLayout = oSettings.aoHeader;\n\t\tif ( nHeader )\n\t\t{\n\t\t\taLayout = [];\n\t\t\t_fnDetectHeader( aLayout, nHeader );\n\t\t}\n\t}\n\n\tfor ( var i=0, iLen=aLayout.length ; i<iLen ; i++ )\n\t{\n\t\tfor ( var j=0, jLen=aLayout[i].length ; j<jLen ; j++ )\n\t\t{\n\t\t\tif ( aLayout[i][j].unique &&\n\t\t\t\t (!aReturn[j] || !oSettings.bSortCellsTop) )\n\t\t\t{\n\t\t\t\taReturn[j] = aLayout[i][j].cell;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn aReturn;\n}\n\n/**\n * Set the start position for draw\n *  @param {object} oSettings dataTables settings object\n */\nfunction _fnStart( oSettings )\n{\n\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\tvar iInitDisplayStart = oSettings.iInitDisplayStart;\n\n\t// Check and see if we have an initial draw position from state saving\n\tif ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )\n\t{\n\t\toSettings._iDisplayStart = bServerSide ?\n\t\t\tiInitDisplayStart :\n\t\t\tiInitDisplayStart >= oSettings.fnRecordsDisplay() ?\n\t\t\t\t0 :\n\t\t\t\tiInitDisplayStart;\n\n\t\toSettings.iInitDisplayStart = -1;\n\t}\n}\n\n/**\n * Create an Ajax call based on the table's settings, taking into account that\n * parameters can have multiple forms, and backwards compatibility.\n *\n * @param {object} oSettings dataTables settings object\n * @param {array} data Data to send to the server, required by\n *     DataTables - may be augmented by developer callbacks\n * @param {function} fn Callback function to run when data is obtained\n */\nfunction _fnBuildAjax( oSettings, data, fn )\n{\n\t// Compatibility with 1.9-, allow fnServerData and event to manipulate\n\t_fnCallbackFire( oSettings, 'aoServerParams', 'serverParams', [data] );\n\n\t// Convert to object based for 1.10+ if using the old array scheme which can\n\t// come from server-side processing or serverParams\n\tif ( data && Array.isArray(data) ) {\n\t\tvar tmp = {};\n\t\tvar rbracket = /(.*?)\\[\\]$/;\n\n\t\t$.each( data, function (key, val) {\n\t\t\tvar match = val.name.match(rbracket);\n\n\t\t\tif ( match ) {\n\t\t\t\t// Support for arrays\n\t\t\t\tvar name = match[0];\n\n\t\t\t\tif ( ! tmp[ name ] ) {\n\t\t\t\t\ttmp[ name ] = [];\n\t\t\t\t}\n\t\t\t\ttmp[ name ].push( val.value );\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttmp[val.name] = val.value;\n\t\t\t}\n\t\t} );\n\t\tdata = tmp;\n\t}\n\n\tvar ajaxData;\n\tvar ajax = oSettings.ajax;\n\tvar instance = oSettings.oInstance;\n\tvar callback = function ( json ) {\n\t\tvar status = oSettings.jqXHR\n\t\t\t? oSettings.jqXHR.status\n\t\t\t: null;\n\n\t\tif ( json === null || (typeof status === 'number' && status == 204 ) ) {\n\t\t\tjson = {};\n\t\t\t_fnAjaxDataSrc( oSettings, json, [] );\n\t\t}\n\n\t\tvar error = json.error || json.sError;\n\t\tif ( error ) {\n\t\t\t_fnLog( oSettings, 0, error );\n\t\t}\n\n\t\toSettings.json = json;\n\n\t\t_fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR] );\n\t\tfn( json );\n\t};\n\n\tif ( $.isPlainObject( ajax ) && ajax.data )\n\t{\n\t\tajaxData = ajax.data;\n\n\t\tvar newData = typeof ajaxData === 'function' ?\n\t\t\tajaxData( data, oSettings ) :  // fn can manipulate data or return\n\t\t\tajaxData;                      // an object object or array to merge\n\n\t\t// If the function returned something, use that alone\n\t\tdata = typeof ajaxData === 'function' && newData ?\n\t\t\tnewData :\n\t\t\t$.extend( true, data, newData );\n\n\t\t// Remove the data property as we've resolved it already and don't want\n\t\t// jQuery to do it again (it is restored at the end of the function)\n\t\tdelete ajax.data;\n\t}\n\n\tvar baseAjax = {\n\t\t\"data\": data,\n\t\t\"success\": callback,\n\t\t\"dataType\": \"json\",\n\t\t\"cache\": false,\n\t\t\"type\": oSettings.sServerMethod,\n\t\t\"error\": function (xhr, error, thrown) {\n\t\t\tvar ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR] );\n\n\t\t\tif ( $.inArray( true, ret ) === -1 ) {\n\t\t\t\tif ( error == \"parsererror\" ) {\n\t\t\t\t\t_fnLog( oSettings, 0, 'Invalid JSON response', 1 );\n\t\t\t\t}\n\t\t\t\telse if ( xhr.readyState === 4 ) {\n\t\t\t\t\t_fnLog( oSettings, 0, 'Ajax error', 7 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t}\n\t};\n\n\t// Store the data submitted for the API\n\toSettings.oAjaxData = data;\n\n\t// Allow plug-ins and external processes to modify the data\n\t_fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data] );\n\n\tif ( oSettings.fnServerData )\n\t{\n\t\t// DataTables 1.9- compatibility\n\t\toSettings.fnServerData.call( instance,\n\t\t\toSettings.sAjaxSource,\n\t\t\t$.map( data, function (val, key) { // Need to convert back to 1.9 trad format\n\t\t\t\treturn { name: key, value: val };\n\t\t\t} ),\n\t\t\tcallback,\n\t\t\toSettings\n\t\t);\n\t}\n\telse if ( oSettings.sAjaxSource || typeof ajax === 'string' )\n\t{\n\t\t// DataTables 1.9- compatibility\n\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, {\n\t\t\turl: ajax || oSettings.sAjaxSource\n\t\t} ) );\n\t}\n\telse if ( typeof ajax === 'function' )\n\t{\n\t\t// Is a function - let the caller define what needs to be done\n\t\toSettings.jqXHR = ajax.call( instance, data, callback, oSettings );\n\t}\n\telse\n\t{\n\t\t// Object to extend the base settings\n\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, ajax ) );\n\n\t\t// Restore for next time around\n\t\tajax.data = ajaxData;\n\t}\n}\n\n\n/**\n * Update the table using an Ajax call\n *  @param {object} settings dataTables settings object\n *  @returns {boolean} Block the table drawing or not\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxUpdate( settings )\n{\n\tsettings.iDraw++;\n\t_fnProcessingDisplay( settings, true );\n\n\t_fnBuildAjax(\n\t\tsettings,\n\t\t_fnAjaxParameters( settings ),\n\t\tfunction(json) {\n\t\t\t_fnAjaxUpdateDraw( settings, json );\n\t\t}\n\t);\n}\n\n\n/**\n * Build up the parameters in an object needed for a server-side processing\n * request. Note that this is basically done twice, is different ways - a modern\n * method which is used by default in DataTables 1.10 which uses objects and\n * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if\n * the sAjaxSource option is used in the initialisation, or the legacyAjax\n * option is set.\n *  @param {object} oSettings dataTables settings object\n *  @returns {bool} block the table drawing or not\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxParameters( settings )\n{\n\tvar\n\t\tcolumns = settings.aoColumns,\n\t\tcolumnCount = columns.length,\n\t\tfeatures = settings.oFeatures,\n\t\tpreSearch = settings.oPreviousSearch,\n\t\tpreColSearch = settings.aoPreSearchCols,\n\t\ti, data = [], dataProp, column, columnSearch,\n\t\tsort = _fnSortFlatten( settings ),\n\t\tdisplayStart = settings._iDisplayStart,\n\t\tdisplayLength = features.bPaginate !== false ?\n\t\t\tsettings._iDisplayLength :\n\t\t\t-1;\n\n\tvar param = function ( name, value ) {\n\t\tdata.push( { 'name': name, 'value': value } );\n\t};\n\n\t// DataTables 1.9- compatible method\n\tparam( 'sEcho',          settings.iDraw );\n\tparam( 'iColumns',       columnCount );\n\tparam( 'sColumns',       _pluck( columns, 'sName' ).join(',') );\n\tparam( 'iDisplayStart',  displayStart );\n\tparam( 'iDisplayLength', displayLength );\n\n\t// DataTables 1.10+ method\n\tvar d = {\n\t\tdraw:    settings.iDraw,\n\t\tcolumns: [],\n\t\torder:   [],\n\t\tstart:   displayStart,\n\t\tlength:  displayLength,\n\t\tsearch:  {\n\t\t\tvalue: preSearch.sSearch,\n\t\t\tregex: preSearch.bRegex\n\t\t}\n\t};\n\n\tfor ( i=0 ; i<columnCount ; i++ ) {\n\t\tcolumn = columns[i];\n\t\tcolumnSearch = preColSearch[i];\n\t\tdataProp = typeof column.mData==\"function\" ? 'function' : column.mData ;\n\n\t\td.columns.push( {\n\t\t\tdata:       dataProp,\n\t\t\tname:       column.sName,\n\t\t\tsearchable: column.bSearchable,\n\t\t\torderable:  column.bSortable,\n\t\t\tsearch:     {\n\t\t\t\tvalue: columnSearch.sSearch,\n\t\t\t\tregex: columnSearch.bRegex\n\t\t\t}\n\t\t} );\n\n\t\tparam( \"mDataProp_\"+i, dataProp );\n\n\t\tif ( features.bFilter ) {\n\t\t\tparam( 'sSearch_'+i,     columnSearch.sSearch );\n\t\t\tparam( 'bRegex_'+i,      columnSearch.bRegex );\n\t\t\tparam( 'bSearchable_'+i, column.bSearchable );\n\t\t}\n\n\t\tif ( features.bSort ) {\n\t\t\tparam( 'bSortable_'+i, column.bSortable );\n\t\t}\n\t}\n\n\tif ( features.bFilter ) {\n\t\tparam( 'sSearch', preSearch.sSearch );\n\t\tparam( 'bRegex', preSearch.bRegex );\n\t}\n\n\tif ( features.bSort ) {\n\t\t$.each( sort, function ( i, val ) {\n\t\t\td.order.push( { column: val.col, dir: val.dir } );\n\n\t\t\tparam( 'iSortCol_'+i, val.col );\n\t\t\tparam( 'sSortDir_'+i, val.dir );\n\t\t} );\n\n\t\tparam( 'iSortingCols', sort.length );\n\t}\n\n\t// If the legacy.ajax parameter is null, then we automatically decide which\n\t// form to use, based on sAjaxSource\n\tvar legacy = DataTable.ext.legacy.ajax;\n\tif ( legacy === null ) {\n\t\treturn settings.sAjaxSource ? data : d;\n\t}\n\n\t// Otherwise, if legacy has been specified then we use that to decide on the\n\t// form\n\treturn legacy ? data : d;\n}\n\n\n/**\n * Data the data from the server (nuking the old) and redraw the table\n *  @param {object} oSettings dataTables settings object\n *  @param {object} json json data return from the server.\n *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n *  @param {array} json.aaData The data to display on this page\n *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxUpdateDraw ( settings, json )\n{\n\t// v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.\n\t// Support both\n\tvar compat = function ( old, modern ) {\n\t\treturn json[old] !== undefined ? json[old] : json[modern];\n\t};\n\n\tvar data = _fnAjaxDataSrc( settings, json );\n\tvar draw            = compat( 'sEcho',                'draw' );\n\tvar recordsTotal    = compat( 'iTotalRecords',        'recordsTotal' );\n\tvar recordsFiltered = compat( 'iTotalDisplayRecords', 'recordsFiltered' );\n\n\tif ( draw !== undefined ) {\n\t\t// Protect against out of sequence returns\n\t\tif ( draw*1 < settings.iDraw ) {\n\t\t\treturn;\n\t\t}\n\t\tsettings.iDraw = draw * 1;\n\t}\n\n\t// No data in returned object, so rather than an array, we show an empty table\n\tif ( ! data ) {\n\t\tdata = [];\n\t}\n\n\t_fnClearTable( settings );\n\tsettings._iRecordsTotal   = parseInt(recordsTotal, 10);\n\tsettings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n\n\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t_fnAddData( settings, data[i] );\n\t}\n\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\n\t_fnDraw( settings, true );\n\n\tif ( ! settings._bInitComplete ) {\n\t\t_fnInitComplete( settings, json );\n\t}\n\n\t_fnProcessingDisplay( settings, false );\n}\n\n\n/**\n * Get the data from the JSON data source to use for drawing a table. Using\n * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n * source object, or from a processing function.\n *  @param {object} oSettings dataTables settings object\n *  @param  {object} json Data source object / array from the server\n *  @return {array} Array of data to use\n */\n function _fnAjaxDataSrc ( oSettings, json, write )\n {\n\tvar dataSrc = $.isPlainObject( oSettings.ajax ) && oSettings.ajax.dataSrc !== undefined ?\n\t\toSettings.ajax.dataSrc :\n\t\toSettings.sAjaxDataProp; // Compatibility with 1.9-.\n\n\tif ( ! write ) {\n\t\tif ( dataSrc === 'data' ) {\n\t\t\t// If the default, then we still want to support the old style, and safely ignore\n\t\t\t// it if possible\n\t\t\treturn json.aaData || json[dataSrc];\n\t\t}\n\n\t\treturn dataSrc !== \"\" ?\n\t\t\t_fnGetObjectDataFn( dataSrc )( json ) :\n\t\t\tjson;\n\t}\n\n\t// set\n\t_fnSetObjectDataFn( dataSrc )( json, write );\n}\n\n/**\n * Generate the node required for filtering text\n *  @returns {node} Filter control element\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlFilter ( settings )\n{\n\tvar classes = settings.oClasses;\n\tvar tableId = settings.sTableId;\n\tvar language = settings.oLanguage;\n\tvar previousSearch = settings.oPreviousSearch;\n\tvar features = settings.aanFeatures;\n\tvar input = '<input type=\"search\" class=\"'+classes.sFilterInput+'\"/>';\n\n\tvar str = language.sSearch;\n\tstr = str.match(/_INPUT_/) ?\n\t\tstr.replace('_INPUT_', input) :\n\t\tstr+input;\n\n\tvar filter = $('<div/>', {\n\t\t\t'id': ! features.f ? tableId+'_filter' : null,\n\t\t\t'class': classes.sFilter\n\t\t} )\n\t\t.append( $('<label/>' ).append( str ) );\n\n\tvar searchFn = function(event) {\n\t\t/* Update all other filter input elements for the new display */\n\t\tvar n = features.f;\n\t\tvar val = !this.value ? \"\" : this.value; // mental IE8 fix :-(\n\t\tif(previousSearch.return && event.key !== \"Enter\") {\n\t\t\treturn;\n\t\t}\n\t\t/* Now do the filter */\n\t\tif ( val != previousSearch.sSearch ) {\n\t\t\t_fnFilterComplete( settings, {\n\t\t\t\t\"sSearch\": val,\n\t\t\t\t\"bRegex\": previousSearch.bRegex,\n\t\t\t\t\"bSmart\": previousSearch.bSmart ,\n\t\t\t\t\"bCaseInsensitive\": previousSearch.bCaseInsensitive,\n\t\t\t\t\"return\": previousSearch.return\n\t\t\t} );\n\n\t\t\t// Need to redraw, without resorting\n\t\t\tsettings._iDisplayStart = 0;\n\t\t\t_fnDraw( settings );\n\t\t}\n\t};\n\n\tvar searchDelay = settings.searchDelay !== null ?\n\t\tsettings.searchDelay :\n\t\t_fnDataSource( settings ) === 'ssp' ?\n\t\t\t400 :\n\t\t\t0;\n\n\tvar jqFilter = $('input', filter)\n\t\t.val( previousSearch.sSearch )\n\t\t.attr( 'placeholder', language.sSearchPlaceholder )\n\t\t.on(\n\t\t\t'keyup.DT search.DT input.DT paste.DT cut.DT',\n\t\t\tsearchDelay ?\n\t\t\t\t_fnThrottle( searchFn, searchDelay ) :\n\t\t\t\tsearchFn\n\t\t)\n\t\t.on( 'mouseup', function(e) {\n\t\t\t// Edge fix! Edge 17 does not trigger anything other than mouse events when clicking\n\t\t\t// on the clear icon (Edge bug 17584515). This is safe in other browsers as `searchFn`\n\t\t\t// checks the value to see if it has changed. In other browsers it won't have.\n\t\t\tsetTimeout( function () {\n\t\t\t\tsearchFn.call(jqFilter[0], e);\n\t\t\t}, 10);\n\t\t} )\n\t\t.on( 'keypress.DT', function(e) {\n\t\t\t/* Prevent form submission */\n\t\t\tif ( e.keyCode == 13 ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} )\n\t\t.attr('aria-controls', tableId);\n\n\t// Update the input elements whenever the table is filtered\n\t$(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {\n\t\tif ( settings === s ) {\n\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t// inside an iframe or frame...\n\t\t\ttry {\n\t\t\t\tif ( jqFilter[0] !== document.activeElement ) {\n\t\t\t\t\tjqFilter.val( previousSearch.sSearch );\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch ( e ) {}\n\t\t}\n\t} );\n\n\treturn filter[0];\n}\n\n\n/**\n * Filter the table using both the global filter and column based filtering\n *  @param {object} oSettings dataTables settings object\n *  @param {object} oSearch search information\n *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterComplete ( oSettings, oInput, iForce )\n{\n\tvar oPrevSearch = oSettings.oPreviousSearch;\n\tvar aoPrevSearch = oSettings.aoPreSearchCols;\n\tvar fnSaveFilter = function ( oFilter ) {\n\t\t/* Save the filtering values */\n\t\toPrevSearch.sSearch = oFilter.sSearch;\n\t\toPrevSearch.bRegex = oFilter.bRegex;\n\t\toPrevSearch.bSmart = oFilter.bSmart;\n\t\toPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;\n\t\toPrevSearch.return = oFilter.return;\n\t};\n\tvar fnRegex = function ( o ) {\n\t\t// Backwards compatibility with the bEscapeRegex option\n\t\treturn o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;\n\t};\n\n\t// Resolve any column types that are unknown due to addition or invalidation\n\t// @todo As per sort - can this be moved into an event handler?\n\t_fnColumnTypes( oSettings );\n\n\t/* In server-side processing all filtering is done by the server, so no point hanging around here */\n\tif ( _fnDataSource( oSettings ) != 'ssp' )\n\t{\n\t\t/* Global filter */\n\t\t_fnFilter( oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive, oInput.return );\n\t\tfnSaveFilter( oInput );\n\n\t\t/* Now do the individual column filter */\n\t\tfor ( var i=0 ; i<aoPrevSearch.length ; i++ )\n\t\t{\n\t\t\t_fnFilterColumn( oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]),\n\t\t\t\taoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive );\n\t\t}\n\n\t\t/* Custom filtering */\n\t\t_fnFilterCustom( oSettings );\n\t}\n\telse\n\t{\n\t\tfnSaveFilter( oInput );\n\t}\n\n\t/* Tell the draw function we have been filtering */\n\toSettings.bFiltered = true;\n\t_fnCallbackFire( oSettings, null, 'search', [oSettings] );\n}\n\n\n/**\n * Apply custom filtering functions\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterCustom( settings )\n{\n\tvar filters = DataTable.ext.search;\n\tvar displayRows = settings.aiDisplay;\n\tvar row, rowIdx;\n\n\tfor ( var i=0, ien=filters.length ; i<ien ; i++ ) {\n\t\tvar rows = [];\n\n\t\t// Loop over each row and see if it should be included\n\t\tfor ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {\n\t\t\trowIdx = displayRows[ j ];\n\t\t\trow = settings.aoData[ rowIdx ];\n\n\t\t\tif ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {\n\t\t\t\trows.push( rowIdx );\n\t\t\t}\n\t\t}\n\n\t\t// So the array reference doesn't break set the results into the\n\t\t// existing array\n\t\tdisplayRows.length = 0;\n\t\t$.merge( displayRows, rows );\n\t}\n}\n\n\n/**\n * Filter the table on a per-column basis\n *  @param {object} oSettings dataTables settings object\n *  @param {string} sInput string to filter on\n *  @param {int} iColumn column to filter\n *  @param {bool} bRegex treat search string as a regular expression or not\n *  @param {bool} bSmart use smart filtering or not\n *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterColumn ( settings, searchStr, colIdx, regex, smart, caseInsensitive )\n{\n\tif ( searchStr === '' ) {\n\t\treturn;\n\t}\n\n\tvar data;\n\tvar out = [];\n\tvar display = settings.aiDisplay;\n\tvar rpSearch = _fnFilterCreateSearch( searchStr, regex, smart, caseInsensitive );\n\n\tfor ( var i=0 ; i<display.length ; i++ ) {\n\t\tdata = settings.aoData[ display[i] ]._aFilterData[ colIdx ];\n\n\t\tif ( rpSearch.test( data ) ) {\n\t\t\tout.push( display[i] );\n\t\t}\n\t}\n\n\tsettings.aiDisplay = out;\n}\n\n\n/**\n * Filter the data table based on user input and draw the table\n *  @param {object} settings dataTables settings object\n *  @param {string} input string to filter on\n *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)\n *  @param {bool} regex treat as a regular expression or not\n *  @param {bool} smart perform smart filtering or not\n *  @param {bool} caseInsensitive Do case insensitive matching or not\n *  @memberof DataTable#oApi\n */\nfunction _fnFilter( settings, input, force, regex, smart, caseInsensitive )\n{\n\tvar rpSearch = _fnFilterCreateSearch( input, regex, smart, caseInsensitive );\n\tvar prevSearch = settings.oPreviousSearch.sSearch;\n\tvar displayMaster = settings.aiDisplayMaster;\n\tvar display, invalidated, i;\n\tvar filtered = [];\n\n\t// Need to take account of custom filtering functions - always filter\n\tif ( DataTable.ext.search.length !== 0 ) {\n\t\tforce = true;\n\t}\n\n\t// Check if any of the rows were invalidated\n\tinvalidated = _fnFilterData( settings );\n\n\t// If the input is blank - we just want the full data set\n\tif ( input.length <= 0 ) {\n\t\tsettings.aiDisplay = displayMaster.slice();\n\t}\n\telse {\n\t\t// New search - start from the master array\n\t\tif ( invalidated ||\n\t\t\t force ||\n\t\t\t regex ||\n\t\t\t prevSearch.length > input.length ||\n\t\t\t input.indexOf(prevSearch) !== 0 ||\n\t\t\t settings.bSorted // On resort, the display master needs to be\n\t\t\t                  // re-filtered since indexes will have changed\n\t\t) {\n\t\t\tsettings.aiDisplay = displayMaster.slice();\n\t\t}\n\n\t\t// Search the display array\n\t\tdisplay = settings.aiDisplay;\n\n\t\tfor ( i=0 ; i<display.length ; i++ ) {\n\t\t\tif ( rpSearch.test( settings.aoData[ display[i] ]._sFilterRow ) ) {\n\t\t\t\tfiltered.push( display[i] );\n\t\t\t}\n\t\t}\n\n\t\tsettings.aiDisplay = filtered;\n\t}\n}\n\n\n/**\n * Build a regular expression object suitable for searching a table\n *  @param {string} sSearch string to search for\n *  @param {bool} bRegex treat as a regular expression or not\n *  @param {bool} bSmart perform smart filtering or not\n *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n *  @returns {RegExp} constructed object\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterCreateSearch( search, regex, smart, caseInsensitive )\n{\n\tsearch = regex ?\n\t\tsearch :\n\t\t_fnEscapeRegex( search );\n\t\n\tif ( smart ) {\n\t\t/* For smart filtering we want to allow the search to work regardless of\n\t\t * word order. We also want double quoted text to be preserved, so word\n\t\t * order is important - a la google. So this is what we want to\n\t\t * generate:\n\t\t * \n\t\t * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n\t\t */\n\t\tvar a = $.map( search.match( /\"[^\"]+\"|[^ ]+/g ) || [''], function ( word ) {\n\t\t\tif ( word.charAt(0) === '\"' ) {\n\t\t\t\tvar m = word.match( /^\"(.*)\"$/ );\n\t\t\t\tword = m ? m[1] : word;\n\t\t\t}\n\n\t\t\treturn word.replace('\"', '');\n\t\t} );\n\n\t\tsearch = '^(?=.*?'+a.join( ')(?=.*?' )+').*$';\n\t}\n\n\treturn new RegExp( search, caseInsensitive ? 'i' : '' );\n}\n\n\n/**\n * Escape a string such that it can be used in a regular expression\n *  @param {string} sVal string to escape\n *  @returns {string} escaped string\n *  @memberof DataTable#oApi\n */\nvar _fnEscapeRegex = DataTable.util.escapeRegex;\n\nvar __filter_div = $('<div>')[0];\nvar __filter_div_textContent = __filter_div.textContent !== undefined;\n\n// Update the filtering data for each row if needed (by invalidation or first run)\nfunction _fnFilterData ( settings )\n{\n\tvar columns = settings.aoColumns;\n\tvar column;\n\tvar i, j, ien, jen, filterData, cellData, row;\n\tvar wasInvalidated = false;\n\n\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\trow = settings.aoData[i];\n\n\t\tif ( ! row._aFilterData ) {\n\t\t\tfilterData = [];\n\n\t\t\tfor ( j=0, jen=columns.length ; j<jen ; j++ ) {\n\t\t\t\tcolumn = columns[j];\n\n\t\t\t\tif ( column.bSearchable ) {\n\t\t\t\t\tcellData = _fnGetCellData( settings, i, j, 'filter' );\n\n\t\t\t\t\t// Search in DataTables 1.10 is string based. In 1.11 this\n\t\t\t\t\t// should be altered to also allow strict type checking.\n\t\t\t\t\tif ( cellData === null ) {\n\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( typeof cellData !== 'string' && cellData.toString ) {\n\t\t\t\t\t\tcellData = cellData.toString();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcellData = '';\n\t\t\t\t}\n\n\t\t\t\t// If it looks like there is an HTML entity in the string,\n\t\t\t\t// attempt to decode it so sorting works as expected. Note that\n\t\t\t\t// we could use a single line of jQuery to do this, but the DOM\n\t\t\t\t// method used here is much faster http://jsperf.com/html-decode\n\t\t\t\tif ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {\n\t\t\t\t\t__filter_div.innerHTML = cellData;\n\t\t\t\t\tcellData = __filter_div_textContent ?\n\t\t\t\t\t\t__filter_div.textContent :\n\t\t\t\t\t\t__filter_div.innerText;\n\t\t\t\t}\n\n\t\t\t\tif ( cellData.replace ) {\n\t\t\t\t\tcellData = cellData.replace(/[\\r\\n\\u2028]/g, '');\n\t\t\t\t}\n\n\t\t\t\tfilterData.push( cellData );\n\t\t\t}\n\n\t\t\trow._aFilterData = filterData;\n\t\t\trow._sFilterRow = filterData.join('  ');\n\t\t\twasInvalidated = true;\n\t\t}\n\t}\n\n\treturn wasInvalidated;\n}\n\n\n/**\n * Convert from the internal Hungarian notation to camelCase for external\n * interaction\n *  @param {object} obj Object to convert\n *  @returns {object} Inverted object\n *  @memberof DataTable#oApi\n */\nfunction _fnSearchToCamel ( obj )\n{\n\treturn {\n\t\tsearch:          obj.sSearch,\n\t\tsmart:           obj.bSmart,\n\t\tregex:           obj.bRegex,\n\t\tcaseInsensitive: obj.bCaseInsensitive\n\t};\n}\n\n\n\n/**\n * Convert from camelCase notation to the internal Hungarian. We could use the\n * Hungarian convert function here, but this is cleaner\n *  @param {object} obj Object to convert\n *  @returns {object} Inverted object\n *  @memberof DataTable#oApi\n */\nfunction _fnSearchToHung ( obj )\n{\n\treturn {\n\t\tsSearch:          obj.search,\n\t\tbSmart:           obj.smart,\n\t\tbRegex:           obj.regex,\n\t\tbCaseInsensitive: obj.caseInsensitive\n\t};\n}\n\n/**\n * Generate the node required for the info display\n *  @param {object} oSettings dataTables settings object\n *  @returns {node} Information element\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlInfo ( settings )\n{\n\tvar\n\t\ttid = settings.sTableId,\n\t\tnodes = settings.aanFeatures.i,\n\t\tn = $('<div/>', {\n\t\t\t'class': settings.oClasses.sInfo,\n\t\t\t'id': ! nodes ? tid+'_info' : null\n\t\t} );\n\n\tif ( ! nodes ) {\n\t\t// Update display on each draw\n\t\tsettings.aoDrawCallback.push( {\n\t\t\t\"fn\": _fnUpdateInfo,\n\t\t\t\"sName\": \"information\"\n\t\t} );\n\n\t\tn\n\t\t\t.attr( 'role', 'status' )\n\t\t\t.attr( 'aria-live', 'polite' );\n\n\t\t// Table is described by our info div\n\t\t$(settings.nTable).attr( 'aria-describedby', tid+'_info' );\n\t}\n\n\treturn n[0];\n}\n\n\n/**\n * Update the information elements in the display\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnUpdateInfo ( settings )\n{\n\t/* Show information about the table */\n\tvar nodes = settings.aanFeatures.i;\n\tif ( nodes.length === 0 ) {\n\t\treturn;\n\t}\n\n\tvar\n\t\tlang  = settings.oLanguage,\n\t\tstart = settings._iDisplayStart+1,\n\t\tend   = settings.fnDisplayEnd(),\n\t\tmax   = settings.fnRecordsTotal(),\n\t\ttotal = settings.fnRecordsDisplay(),\n\t\tout   = total ?\n\t\t\tlang.sInfo :\n\t\t\tlang.sInfoEmpty;\n\n\tif ( total !== max ) {\n\t\t/* Record set after filtering */\n\t\tout += ' ' + lang.sInfoFiltered;\n\t}\n\n\t// Convert the macros\n\tout += lang.sInfoPostFix;\n\tout = _fnInfoMacros( settings, out );\n\n\tvar callback = lang.fnInfoCallback;\n\tif ( callback !== null ) {\n\t\tout = callback.call( settings.oInstance,\n\t\t\tsettings, start, end, max, total, out\n\t\t);\n\t}\n\n\t$(nodes).html( out );\n}\n\n\nfunction _fnInfoMacros ( settings, str )\n{\n\t// When infinite scrolling, we are always starting at 1. _iDisplayStart is used only\n\t// internally\n\tvar\n\t\tformatter  = settings.fnFormatNumber,\n\t\tstart      = settings._iDisplayStart+1,\n\t\tlen        = settings._iDisplayLength,\n\t\tvis        = settings.fnRecordsDisplay(),\n\t\tall        = len === -1;\n\n\treturn str.\n\t\treplace(/_START_/g, formatter.call( settings, start ) ).\n\t\treplace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).\n\t\treplace(/_MAX_/g,   formatter.call( settings, settings.fnRecordsTotal() ) ).\n\t\treplace(/_TOTAL_/g, formatter.call( settings, vis ) ).\n\t\treplace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).\n\t\treplace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) );\n}\n\n\n\n/**\n * Draw the table for the first time, adding all required features\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnInitialise ( settings )\n{\n\tvar i, iLen, iAjaxStart=settings.iInitDisplayStart;\n\tvar columns = settings.aoColumns, column;\n\tvar features = settings.oFeatures;\n\tvar deferLoading = settings.bDeferLoading; // value modified by the draw\n\n\t/* Ensure that the table data is fully initialised */\n\tif ( ! settings.bInitialised ) {\n\t\tsetTimeout( function(){ _fnInitialise( settings ); }, 200 );\n\t\treturn;\n\t}\n\n\t/* Show the display HTML options */\n\t_fnAddOptionsHtml( settings );\n\n\t/* Build and draw the header / footer for the table */\n\t_fnBuildHead( settings );\n\t_fnDrawHead( settings, settings.aoHeader );\n\t_fnDrawHead( settings, settings.aoFooter );\n\n\t/* Okay to show that something is going on now */\n\t_fnProcessingDisplay( settings, true );\n\n\t/* Calculate sizes for columns */\n\tif ( features.bAutoWidth ) {\n\t\t_fnCalculateColumnWidths( settings );\n\t}\n\n\tfor ( i=0, iLen=columns.length ; i<iLen ; i++ ) {\n\t\tcolumn = columns[i];\n\n\t\tif ( column.sWidth ) {\n\t\t\tcolumn.nTh.style.width = _fnStringToCss( column.sWidth );\n\t\t}\n\t}\n\n\t_fnCallbackFire( settings, null, 'preInit', [settings] );\n\n\t// If there is default sorting required - let's do it. The sort function\n\t// will do the drawing for us. Otherwise we draw the table regardless of the\n\t// Ajax source - this allows the table to look initialised for Ajax sourcing\n\t// data (show 'loading' message possibly)\n\t_fnReDraw( settings );\n\n\t// Server-side processing init complete is done by _fnAjaxUpdateDraw\n\tvar dataSrc = _fnDataSource( settings );\n\tif ( dataSrc != 'ssp' || deferLoading ) {\n\t\t// if there is an ajax source load the data\n\t\tif ( dataSrc == 'ajax' ) {\n\t\t\t_fnBuildAjax( settings, [], function(json) {\n\t\t\t\tvar aData = _fnAjaxDataSrc( settings, json );\n\n\t\t\t\t// Got the data - add it to the table\n\t\t\t\tfor ( i=0 ; i<aData.length ; i++ ) {\n\t\t\t\t\t_fnAddData( settings, aData[i] );\n\t\t\t\t}\n\n\t\t\t\t// Reset the init display for cookie saving. We've already done\n\t\t\t\t// a filter, and therefore cleared it before. So we need to make\n\t\t\t\t// it appear 'fresh'\n\t\t\t\tsettings.iInitDisplayStart = iAjaxStart;\n\n\t\t\t\t_fnReDraw( settings );\n\n\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t_fnInitComplete( settings, json );\n\t\t\t}, settings );\n\t\t}\n\t\telse {\n\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t_fnInitComplete( settings );\n\t\t}\n\t}\n}\n\n\n/**\n * Draw the table for the first time, adding all required features\n *  @param {object} oSettings dataTables settings object\n *  @param {object} [json] JSON from the server that completed the table, if using Ajax source\n *    with client-side processing (optional)\n *  @memberof DataTable#oApi\n */\nfunction _fnInitComplete ( settings, json )\n{\n\tsettings._bInitComplete = true;\n\n\t// When data was added after the initialisation (data or Ajax) we need to\n\t// calculate the column sizing\n\tif ( json || settings.oInit.aaData ) {\n\t\t_fnAdjustColumnSizing( settings );\n\t}\n\n\t_fnCallbackFire( settings, null, 'plugin-init', [settings, json] );\n\t_fnCallbackFire( settings, 'aoInitComplete', 'init', [settings, json] );\n}\n\n\nfunction _fnLengthChange ( settings, val )\n{\n\tvar len = parseInt( val, 10 );\n\tsettings._iDisplayLength = len;\n\n\t_fnLengthOverflow( settings );\n\n\t// Fire length change event\n\t_fnCallbackFire( settings, null, 'length', [settings, len] );\n}\n\n\n/**\n * Generate the node required for user display length changing\n *  @param {object} settings dataTables settings object\n *  @returns {node} Display length feature node\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlLength ( settings )\n{\n\tvar\n\t\tclasses  = settings.oClasses,\n\t\ttableId  = settings.sTableId,\n\t\tmenu     = settings.aLengthMenu,\n\t\td2       = Array.isArray( menu[0] ),\n\t\tlengths  = d2 ? menu[0] : menu,\n\t\tlanguage = d2 ? menu[1] : menu;\n\n\tvar select = $('<select/>', {\n\t\t'name':          tableId+'_length',\n\t\t'aria-controls': tableId,\n\t\t'class':         classes.sLengthSelect\n\t} );\n\n\tfor ( var i=0, ien=lengths.length ; i<ien ; i++ ) {\n\t\tselect[0][ i ] = new Option(\n\t\t\ttypeof language[i] === 'number' ?\n\t\t\t\tsettings.fnFormatNumber( language[i] ) :\n\t\t\t\tlanguage[i],\n\t\t\tlengths[i]\n\t\t);\n\t}\n\n\tvar div = $('<div><label/></div>').addClass( classes.sLength );\n\tif ( ! settings.aanFeatures.l ) {\n\t\tdiv[0].id = tableId+'_length';\n\t}\n\n\tdiv.children().append(\n\t\tsettings.oLanguage.sLengthMenu.replace( '_MENU_', select[0].outerHTML )\n\t);\n\n\t// Can't use `select` variable as user might provide their own and the\n\t// reference is broken by the use of outerHTML\n\t$('select', div)\n\t\t.val( settings._iDisplayLength )\n\t\t.on( 'change.DT', function(e) {\n\t\t\t_fnLengthChange( settings, $(this).val() );\n\t\t\t_fnDraw( settings );\n\t\t} );\n\n\t// Update node value whenever anything changes the table's length\n\t$(settings.nTable).on( 'length.dt.DT', function (e, s, len) {\n\t\tif ( settings === s ) {\n\t\t\t$('select', div).val( len );\n\t\t}\n\t} );\n\n\treturn div[0];\n}\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Note that most of the paging logic is done in\n * DataTable.ext.pager\n */\n\n/**\n * Generate the node required for default pagination\n *  @param {object} oSettings dataTables settings object\n *  @returns {node} Pagination feature node\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlPaginate ( settings )\n{\n\tvar\n\t\ttype   = settings.sPaginationType,\n\t\tplugin = DataTable.ext.pager[ type ],\n\t\tmodern = typeof plugin === 'function',\n\t\tredraw = function( settings ) {\n\t\t\t_fnDraw( settings );\n\t\t},\n\t\tnode = $('<div/>').addClass( settings.oClasses.sPaging + type )[0],\n\t\tfeatures = settings.aanFeatures;\n\n\tif ( ! modern ) {\n\t\tplugin.fnInit( settings, node, redraw );\n\t}\n\n\t/* Add a draw callback for the pagination on first instance, to update the paging display */\n\tif ( ! features.p )\n\t{\n\t\tnode.id = settings.sTableId+'_paginate';\n\n\t\tsettings.aoDrawCallback.push( {\n\t\t\t\"fn\": function( settings ) {\n\t\t\t\tif ( modern ) {\n\t\t\t\t\tvar\n\t\t\t\t\t\tstart      = settings._iDisplayStart,\n\t\t\t\t\t\tlen        = settings._iDisplayLength,\n\t\t\t\t\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\t\t\t\t\tall        = len === -1,\n\t\t\t\t\t\tpage = all ? 0 : Math.ceil( start / len ),\n\t\t\t\t\t\tpages = all ? 1 : Math.ceil( visRecords / len ),\n\t\t\t\t\t\tbuttons = plugin(page, pages),\n\t\t\t\t\t\ti, ien;\n\n\t\t\t\t\tfor ( i=0, ien=features.p.length ; i<ien ; i++ ) {\n\t\t\t\t\t\t_fnRenderer( settings, 'pageButton' )(\n\t\t\t\t\t\t\tsettings, features.p[i], i, buttons, page, pages\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tplugin.fnUpdate( settings, redraw );\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"sName\": \"pagination\"\n\t\t} );\n\t}\n\n\treturn node;\n}\n\n\n/**\n * Alter the display settings to change the page\n *  @param {object} settings DataTables settings object\n *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n *    \"next\" or \"last\" or page number to jump to (integer)\n *  @param [bool] redraw Automatically draw the update or not\n *  @returns {bool} true page has changed, false - no change\n *  @memberof DataTable#oApi\n */\nfunction _fnPageChange ( settings, action, redraw )\n{\n\tvar\n\t\tstart     = settings._iDisplayStart,\n\t\tlen       = settings._iDisplayLength,\n\t\trecords   = settings.fnRecordsDisplay();\n\n\tif ( records === 0 || len === -1 )\n\t{\n\t\tstart = 0;\n\t}\n\telse if ( typeof action === \"number\" )\n\t{\n\t\tstart = action * len;\n\n\t\tif ( start > records )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t}\n\telse if ( action == \"first\" )\n\t{\n\t\tstart = 0;\n\t}\n\telse if ( action == \"previous\" )\n\t{\n\t\tstart = len >= 0 ?\n\t\t\tstart - len :\n\t\t\t0;\n\n\t\tif ( start < 0 )\n\t\t{\n\t\t  start = 0;\n\t\t}\n\t}\n\telse if ( action == \"next\" )\n\t{\n\t\tif ( start + len < records )\n\t\t{\n\t\t\tstart += len;\n\t\t}\n\t}\n\telse if ( action == \"last\" )\n\t{\n\t\tstart = Math.floor( (records-1) / len) * len;\n\t}\n\telse\n\t{\n\t\t_fnLog( settings, 0, \"Unknown paging action: \"+action, 5 );\n\t}\n\n\tvar changed = settings._iDisplayStart !== start;\n\tsettings._iDisplayStart = start;\n\n\tif ( changed ) {\n\t\t_fnCallbackFire( settings, null, 'page', [settings] );\n\n\t\tif ( redraw ) {\n\t\t\t_fnDraw( settings );\n\t\t}\n\t}\n\telse {\n\t\t// No change event - paging was called, but no change\n\t\t_fnCallbackFire( settings, null, 'page-nc', [settings] );\n\t}\n\n\treturn changed;\n}\n\n\n\n/**\n * Generate the node required for the processing node\n *  @param {object} settings dataTables settings object\n *  @returns {node} Processing element\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlProcessing ( settings )\n{\n\treturn $('<div/>', {\n\t\t\t'id': ! settings.aanFeatures.r ? settings.sTableId+'_processing' : null,\n\t\t\t'class': settings.oClasses.sProcessing,\n\t\t\t'role': 'status'\n\t\t} )\n\t\t.html( settings.oLanguage.sProcessing )\n\t\t.append('<div><div></div><div></div><div></div><div></div></div>')\n\t\t.insertBefore( settings.nTable )[0];\n}\n\n\n/**\n * Display or hide the processing indicator\n *  @param {object} settings dataTables settings object\n *  @param {bool} show Show the processing indicator (true) or not (false)\n *  @memberof DataTable#oApi\n */\nfunction _fnProcessingDisplay ( settings, show )\n{\n\tif ( settings.oFeatures.bProcessing ) {\n\t\t$(settings.aanFeatures.r).css( 'display', show ? 'block' : 'none' );\n\t}\n\n\t_fnCallbackFire( settings, null, 'processing', [settings, show] );\n}\n\n/**\n * Add any control elements for the table - specifically scrolling\n *  @param {object} settings dataTables settings object\n *  @returns {node} Node to add to the DOM\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlTable ( settings )\n{\n\tvar table = $(settings.nTable);\n\n\t// Scrolling from here on in\n\tvar scroll = settings.oScroll;\n\n\tif ( scroll.sX === '' && scroll.sY === '' ) {\n\t\treturn settings.nTable;\n\t}\n\n\tvar scrollX = scroll.sX;\n\tvar scrollY = scroll.sY;\n\tvar classes = settings.oClasses;\n\tvar caption = table.children('caption');\n\tvar captionSide = caption.length ? caption[0]._captionSide : null;\n\tvar headerClone = $( table[0].cloneNode(false) );\n\tvar footerClone = $( table[0].cloneNode(false) );\n\tvar footer = table.children('tfoot');\n\tvar _div = '<div/>';\n\tvar size = function ( s ) {\n\t\treturn !s ? null : _fnStringToCss( s );\n\t};\n\n\tif ( ! footer.length ) {\n\t\tfooter = null;\n\t}\n\n\t/*\n\t * The HTML structure that we want to generate in this function is:\n\t *  div - scroller\n\t *    div - scroll head\n\t *      div - scroll head inner\n\t *        table - scroll head table\n\t *          thead - thead\n\t *    div - scroll body\n\t *      table - table (master table)\n\t *        thead - thead clone for sizing\n\t *        tbody - tbody\n\t *    div - scroll foot\n\t *      div - scroll foot inner\n\t *        table - scroll foot table\n\t *          tfoot - tfoot\n\t */\n\tvar scroller = $( _div, { 'class': classes.sScrollWrapper } )\n\t\t.append(\n\t\t\t$(_div, { 'class': classes.sScrollHead } )\n\t\t\t\t.css( {\n\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\tborder: 0,\n\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t} )\n\t\t\t\t.append(\n\t\t\t\t\t$(_div, { 'class': classes.sScrollHeadInner } )\n\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t'box-sizing': 'content-box',\n\t\t\t\t\t\t\twidth: scroll.sXInner || '100%'\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\theaderClone\n\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t.append( captionSide === 'top' ? caption : null )\n\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\ttable.children('thead')\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t)\n\t\t.append(\n\t\t\t$(_div, { 'class': classes.sScrollBody } )\n\t\t\t\t.css( {\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\toverflow: 'auto',\n\t\t\t\t\twidth: size( scrollX )\n\t\t\t\t} )\n\t\t\t\t.append( table )\n\t\t);\n\n\tif ( footer ) {\n\t\tscroller.append(\n\t\t\t$(_div, { 'class': classes.sScrollFoot } )\n\t\t\t\t.css( {\n\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\tborder: 0,\n\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t} )\n\t\t\t\t.append(\n\t\t\t\t\t$(_div, { 'class': classes.sScrollFootInner } )\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\tfooterClone\n\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t.append( captionSide === 'bottom' ? caption : null )\n\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\ttable.children('tfoot')\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t);\n\t}\n\n\tvar children = scroller.children();\n\tvar scrollHead = children[0];\n\tvar scrollBody = children[1];\n\tvar scrollFoot = footer ? children[2] : null;\n\n\t// When the body is scrolled, then we also want to scroll the headers\n\tif ( scrollX ) {\n\t\t$(scrollBody).on( 'scroll.DT', function (e) {\n\t\t\tvar scrollLeft = this.scrollLeft;\n\n\t\t\tscrollHead.scrollLeft = scrollLeft;\n\n\t\t\tif ( footer ) {\n\t\t\t\tscrollFoot.scrollLeft = scrollLeft;\n\t\t\t}\n\t\t} );\n\t}\n\n\t$(scrollBody).css('max-height', scrollY);\n\tif (! scroll.bCollapse) {\n\t\t$(scrollBody).css('height', scrollY);\n\t}\n\n\tsettings.nScrollHead = scrollHead;\n\tsettings.nScrollBody = scrollBody;\n\tsettings.nScrollFoot = scrollFoot;\n\n\t// On redraw - align columns\n\tsettings.aoDrawCallback.push( {\n\t\t\"fn\": _fnScrollDraw,\n\t\t\"sName\": \"scrolling\"\n\t} );\n\n\treturn scroller[0];\n}\n\n\n\n/**\n * Update the header, footer and body tables for resizing - i.e. column\n * alignment.\n *\n * Welcome to the most horrible function DataTables. The process that this\n * function follows is basically:\n *   1. Re-create the table inside the scrolling div\n *   2. Take live measurements from the DOM\n *   3. Apply the measurements to align the columns\n *   4. Clean up\n *\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnScrollDraw ( settings )\n{\n\t// Given that this is such a monster function, a lot of variables are use\n\t// to try and keep the minimised size as small as possible\n\tvar\n\t\tscroll         = settings.oScroll,\n\t\tscrollX        = scroll.sX,\n\t\tscrollXInner   = scroll.sXInner,\n\t\tscrollY        = scroll.sY,\n\t\tbarWidth       = scroll.iBarWidth,\n\t\tdivHeader      = $(settings.nScrollHead),\n\t\tdivHeaderStyle = divHeader[0].style,\n\t\tdivHeaderInner = divHeader.children('div'),\n\t\tdivHeaderInnerStyle = divHeaderInner[0].style,\n\t\tdivHeaderTable = divHeaderInner.children('table'),\n\t\tdivBodyEl      = settings.nScrollBody,\n\t\tdivBody        = $(divBodyEl),\n\t\tdivBodyStyle   = divBodyEl.style,\n\t\tdivFooter      = $(settings.nScrollFoot),\n\t\tdivFooterInner = divFooter.children('div'),\n\t\tdivFooterTable = divFooterInner.children('table'),\n\t\theader         = $(settings.nTHead),\n\t\ttable          = $(settings.nTable),\n\t\ttableEl        = table[0],\n\t\ttableStyle     = tableEl.style,\n\t\tfooter         = settings.nTFoot ? $(settings.nTFoot) : null,\n\t\tbrowser        = settings.oBrowser,\n\t\tie67           = browser.bScrollOversize,\n\t\tdtHeaderCells  = _pluck( settings.aoColumns, 'nTh' ),\n\t\theaderTrgEls, footerTrgEls,\n\t\theaderSrcEls, footerSrcEls,\n\t\theaderCopy, footerCopy,\n\t\theaderWidths=[], footerWidths=[],\n\t\theaderContent=[], footerContent=[],\n\t\tidx, correction, sanityWidth,\n\t\tzeroOut = function(nSizer) {\n\t\t\tvar style = nSizer.style;\n\t\t\tstyle.paddingTop = \"0\";\n\t\t\tstyle.paddingBottom = \"0\";\n\t\t\tstyle.borderTopWidth = \"0\";\n\t\t\tstyle.borderBottomWidth = \"0\";\n\t\t\tstyle.height = 0;\n\t\t};\n\n\t// If the scrollbar visibility has changed from the last draw, we need to\n\t// adjust the column sizes as the table width will have changed to account\n\t// for the scrollbar\n\tvar scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n\t\n\tif ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {\n\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t_fnAdjustColumnSizing( settings );\n\t\treturn; // adjust column sizing will call this function again\n\t}\n\telse {\n\t\tsettings.scrollBarVis = scrollBarVis;\n\t}\n\n\t/*\n\t * 1. Re-create the table inside the scrolling div\n\t */\n\n\t// Remove the old minimised thead and tfoot elements in the inner table\n\ttable.children('thead, tfoot').remove();\n\n\tif ( footer ) {\n\t\tfooterCopy = footer.clone().prependTo( table );\n\t\tfooterTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized\n\t\tfooterSrcEls = footerCopy.find('tr');\n\t\tfooterCopy.find('[id]').removeAttr('id');\n\t}\n\n\t// Clone the current header and footer elements and then place it into the inner table\n\theaderCopy = header.clone().prependTo( table );\n\theaderTrgEls = header.find('tr'); // original header is in its own table\n\theaderSrcEls = headerCopy.find('tr');\n\theaderCopy.find('th, td').removeAttr('tabindex');\n\theaderCopy.find('[id]').removeAttr('id');\n\n\n\t/*\n\t * 2. Take live measurements from the DOM - do not alter the DOM itself!\n\t */\n\n\t// Remove old sizing and apply the calculated column widths\n\t// Get the unique column headers in the newly created (cloned) header. We want to apply the\n\t// calculated sizes to this header\n\tif ( ! scrollX )\n\t{\n\t\tdivBodyStyle.width = '100%';\n\t\tdivHeader[0].style.width = '100%';\n\t}\n\n\t$.each( _fnGetUniqueThs( settings, headerCopy ), function ( i, el ) {\n\t\tidx = _fnVisibleToColumnIndex( settings, i );\n\t\tel.style.width = settings.aoColumns[idx].sWidth;\n\t} );\n\n\tif ( footer ) {\n\t\t_fnApplyToChildren( function(n) {\n\t\t\tn.style.width = \"\";\n\t\t}, footerSrcEls );\n\t}\n\n\t// Size the table as a whole\n\tsanityWidth = table.outerWidth();\n\tif ( scrollX === \"\" ) {\n\t\t// No x scrolling\n\t\ttableStyle.width = \"100%\";\n\n\t\t// IE7 will make the width of the table when 100% include the scrollbar\n\t\t// - which is shouldn't. When there is a scrollbar we need to take this\n\t\t// into account.\n\t\tif ( ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight ||\n\t\t\tdivBody.css('overflow-y') == \"scroll\")\n\t\t) {\n\t\t\ttableStyle.width = _fnStringToCss( table.outerWidth() - barWidth);\n\t\t}\n\n\t\t// Recalculate the sanity width\n\t\tsanityWidth = table.outerWidth();\n\t}\n\telse if ( scrollXInner !== \"\" ) {\n\t\t// legacy x scroll inner has been given - use it\n\t\ttableStyle.width = _fnStringToCss(scrollXInner);\n\n\t\t// Recalculate the sanity width\n\t\tsanityWidth = table.outerWidth();\n\t}\n\n\t// Hidden header should have zero height, so remove padding and borders. Then\n\t// set the width based on the real headers\n\n\t// Apply all styles in one pass\n\t_fnApplyToChildren( zeroOut, headerSrcEls );\n\n\t// Read all widths in next pass\n\t_fnApplyToChildren( function(nSizer) {\n\t\tvar style = window.getComputedStyle ?\n\t\t\twindow.getComputedStyle(nSizer).width :\n\t\t\t_fnStringToCss( $(nSizer).width() );\n\n\t\theaderContent.push( nSizer.innerHTML );\n\t\theaderWidths.push( style );\n\t}, headerSrcEls );\n\n\t// Apply all widths in final pass\n\t_fnApplyToChildren( function(nToSize, i) {\n\t\tnToSize.style.width = headerWidths[i];\n\t}, headerTrgEls );\n\n\t$(headerSrcEls).css('height', 0);\n\n\t/* Same again with the footer if we have one */\n\tif ( footer )\n\t{\n\t\t_fnApplyToChildren( zeroOut, footerSrcEls );\n\n\t\t_fnApplyToChildren( function(nSizer) {\n\t\t\tfooterContent.push( nSizer.innerHTML );\n\t\t\tfooterWidths.push( _fnStringToCss( $(nSizer).css('width') ) );\n\t\t}, footerSrcEls );\n\n\t\t_fnApplyToChildren( function(nToSize, i) {\n\t\t\tnToSize.style.width = footerWidths[i];\n\t\t}, footerTrgEls );\n\n\t\t$(footerSrcEls).height(0);\n\t}\n\n\n\t/*\n\t * 3. Apply the measurements\n\t */\n\n\t// \"Hide\" the header and footer that we used for the sizing. We need to keep\n\t// the content of the cell so that the width applied to the header and body\n\t// both match, but we want to hide it completely. We want to also fix their\n\t// width to what they currently are\n\t_fnApplyToChildren( function(nSizer, i) {\n\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\">'+headerContent[i]+'</div>';\n\t\tnSizer.childNodes[0].style.height = \"0\";\n\t\tnSizer.childNodes[0].style.overflow = \"hidden\";\n\t\tnSizer.style.width = headerWidths[i];\n\t}, headerSrcEls );\n\n\tif ( footer )\n\t{\n\t\t_fnApplyToChildren( function(nSizer, i) {\n\t\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\">'+footerContent[i]+'</div>';\n\t\t\tnSizer.childNodes[0].style.height = \"0\";\n\t\t\tnSizer.childNodes[0].style.overflow = \"hidden\";\n\t\t\tnSizer.style.width = footerWidths[i];\n\t\t}, footerSrcEls );\n\t}\n\n\t// Sanity check that the table is of a sensible width. If not then we are going to get\n\t// misalignment - try to prevent this by not allowing the table to shrink below its min width\n\tif ( Math.round(table.outerWidth()) < Math.round(sanityWidth) )\n\t{\n\t\t// The min width depends upon if we have a vertical scrollbar visible or not */\n\t\tcorrection = ((divBodyEl.scrollHeight > divBodyEl.offsetHeight ||\n\t\t\tdivBody.css('overflow-y') == \"scroll\")) ?\n\t\t\t\tsanityWidth+barWidth :\n\t\t\t\tsanityWidth;\n\n\t\t// IE6/7 are a law unto themselves...\n\t\tif ( ie67 && (divBodyEl.scrollHeight >\n\t\t\tdivBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\")\n\t\t) {\n\t\t\ttableStyle.width = _fnStringToCss( correction-barWidth );\n\t\t}\n\n\t\t// And give the user a warning that we've stopped the table getting too small\n\t\tif ( scrollX === \"\" || scrollXInner !== \"\" ) {\n\t\t\t_fnLog( settings, 1, 'Possible column misalignment', 6 );\n\t\t}\n\t}\n\telse\n\t{\n\t\tcorrection = '100%';\n\t}\n\n\t// Apply to the container elements\n\tdivBodyStyle.width = _fnStringToCss( correction );\n\tdivHeaderStyle.width = _fnStringToCss( correction );\n\n\tif ( footer ) {\n\t\tsettings.nScrollFoot.style.width = _fnStringToCss( correction );\n\t}\n\n\n\t/*\n\t * 4. Clean up\n\t */\n\tif ( ! scrollY ) {\n\t\t/* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting\n\t\t * the scrollbar height from the visible display, rather than adding it on. We need to\n\t\t * set the height in order to sort this. Don't want to do it in any other browsers.\n\t\t */\n\t\tif ( ie67 ) {\n\t\t\tdivBodyStyle.height = _fnStringToCss( tableEl.offsetHeight+barWidth );\n\t\t}\n\t}\n\n\t/* Finally set the width's of the header and footer tables */\n\tvar iOuterWidth = table.outerWidth();\n\tdivHeaderTable[0].style.width = _fnStringToCss( iOuterWidth );\n\tdivHeaderInnerStyle.width = _fnStringToCss( iOuterWidth );\n\n\t// Figure out if there are scrollbar present - if so then we need a the header and footer to\n\t// provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n\tvar bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n\tvar padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );\n\tdivHeaderInnerStyle[ padding ] = bScrolling ? barWidth+\"px\" : \"0px\";\n\n\tif ( footer ) {\n\t\tdivFooterTable[0].style.width = _fnStringToCss( iOuterWidth );\n\t\tdivFooterInner[0].style.width = _fnStringToCss( iOuterWidth );\n\t\tdivFooterInner[0].style[padding] = bScrolling ? barWidth+\"px\" : \"0px\";\n\t}\n\n\t// Correct DOM ordering for colgroup - comes before the thead\n\ttable.children('colgroup').insertBefore( table.children('thead') );\n\n\t/* Adjust the position of the header in case we loose the y-scrollbar */\n\tdivBody.trigger('scroll');\n\n\t// If sorting or filtering has occurred, jump the scrolling back to the top\n\t// only if we aren't holding the position\n\tif ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {\n\t\tdivBodyEl.scrollTop = 0;\n\t}\n}\n\n\n\n/**\n * Apply a given function to the display child nodes of an element array (typically\n * TD children of TR rows\n *  @param {function} fn Method to apply to the objects\n *  @param array {nodes} an1 List of elements to look through for display children\n *  @param array {nodes} an2 Another list (identical structure to the first) - optional\n *  @memberof DataTable#oApi\n */\nfunction _fnApplyToChildren( fn, an1, an2 )\n{\n\tvar index=0, i=0, iLen=an1.length;\n\tvar nNode1, nNode2;\n\n\twhile ( i < iLen ) {\n\t\tnNode1 = an1[i].firstChild;\n\t\tnNode2 = an2 ? an2[i].firstChild : null;\n\n\t\twhile ( nNode1 ) {\n\t\t\tif ( nNode1.nodeType === 1 ) {\n\t\t\t\tif ( an2 ) {\n\t\t\t\t\tfn( nNode1, nNode2, index );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfn( nNode1, index );\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tnNode1 = nNode1.nextSibling;\n\t\t\tnNode2 = an2 ? nNode2.nextSibling : null;\n\t\t}\n\n\t\ti++;\n\t}\n}\n\n\n\nvar __re_html_remove = /<.*?>/g;\n\n\n/**\n * Calculate the width of columns for the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnCalculateColumnWidths ( oSettings )\n{\n\tvar\n\t\ttable = oSettings.nTable,\n\t\tcolumns = oSettings.aoColumns,\n\t\tscroll = oSettings.oScroll,\n\t\tscrollY = scroll.sY,\n\t\tscrollX = scroll.sX,\n\t\tscrollXInner = scroll.sXInner,\n\t\tcolumnCount = columns.length,\n\t\tvisibleColumns = _fnGetColumns( oSettings, 'bVisible' ),\n\t\theaderCells = $('th', oSettings.nTHead),\n\t\ttableWidthAttr = table.getAttribute('width'), // from DOM element\n\t\ttableContainer = table.parentNode,\n\t\tuserInputs = false,\n\t\ti, column, columnIdx, width, outerWidth,\n\t\tbrowser = oSettings.oBrowser,\n\t\tie67 = browser.bScrollOversize;\n\n\tvar styleWidth = table.style.width;\n\tif ( styleWidth && styleWidth.indexOf('%') !== -1 ) {\n\t\ttableWidthAttr = styleWidth;\n\t}\n\n\t/* Convert any user input sizes into pixel sizes */\n\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\tcolumn = columns[ visibleColumns[i] ];\n\n\t\tif ( column.sWidth !== null ) {\n\t\t\tcolumn.sWidth = _fnConvertToWidth( column.sWidthOrig, tableContainer );\n\n\t\t\tuserInputs = true;\n\t\t}\n\t}\n\n\t/* If the number of columns in the DOM equals the number that we have to\n\t * process in DataTables, then we can use the offsets that are created by\n\t * the web- browser. No custom sizes can be set in order for this to happen,\n\t * nor scrolling used\n\t */\n\tif ( ie67 || ! userInputs && ! scrollX && ! scrollY &&\n\t     columnCount == _fnVisbleColumns( oSettings ) &&\n\t     columnCount == headerCells.length\n\t) {\n\t\tfor ( i=0 ; i<columnCount ; i++ ) {\n\t\t\tvar colIdx = _fnVisibleToColumnIndex( oSettings, i );\n\n\t\t\tif ( colIdx !== null ) {\n\t\t\t\tcolumns[ colIdx ].sWidth = _fnStringToCss( headerCells.eq(i).width() );\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\t// Otherwise construct a single row, worst case, table with the widest\n\t\t// node in the data, assign any user defined widths, then insert it into\n\t\t// the DOM and allow the browser to do all the hard work of calculating\n\t\t// table widths\n\t\tvar tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table\n\t\t\t.css( 'visibility', 'hidden' )\n\t\t\t.removeAttr( 'id' );\n\n\t\t// Clean up the table body\n\t\ttmpTable.find('tbody tr').remove();\n\t\tvar tr = $('<tr/>').appendTo( tmpTable.find('tbody') );\n\n\t\t// Clone the table header and footer - we can't use the header / footer\n\t\t// from the cloned table, since if scrolling is active, the table's\n\t\t// real header and footer are contained in different table tags\n\t\ttmpTable.find('thead, tfoot').remove();\n\t\ttmpTable\n\t\t\t.append( $(oSettings.nTHead).clone() )\n\t\t\t.append( $(oSettings.nTFoot).clone() );\n\n\t\t// Remove any assigned widths from the footer (from scrolling)\n\t\ttmpTable.find('tfoot th, tfoot td').css('width', '');\n\n\t\t// Apply custom sizing to the cloned header\n\t\theaderCells = _fnGetUniqueThs( oSettings, tmpTable.find('thead')[0] );\n\n\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\tcolumn = columns[ visibleColumns[i] ];\n\n\t\t\theaderCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ?\n\t\t\t\t_fnStringToCss( column.sWidthOrig ) :\n\t\t\t\t'';\n\n\t\t\t// For scrollX we need to force the column width otherwise the\n\t\t\t// browser will collapse it. If this width is smaller than the\n\t\t\t// width the column requires, then it will have no effect\n\t\t\tif ( column.sWidthOrig && scrollX ) {\n\t\t\t\t$( headerCells[i] ).append( $('<div/>').css( {\n\t\t\t\t\twidth: column.sWidthOrig,\n\t\t\t\t\tmargin: 0,\n\t\t\t\t\tpadding: 0,\n\t\t\t\t\tborder: 0,\n\t\t\t\t\theight: 1\n\t\t\t\t} ) );\n\t\t\t}\n\t\t}\n\n\t\t// Find the widest cell for each column and put it into the table\n\t\tif ( oSettings.aoData.length ) {\n\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\tcolumnIdx = visibleColumns[i];\n\t\t\t\tcolumn = columns[ columnIdx ];\n\n\t\t\t\t$( _fnGetWidestNode( oSettings, columnIdx ) )\n\t\t\t\t\t.clone( false )\n\t\t\t\t\t.append( column.sContentPadding )\n\t\t\t\t\t.appendTo( tr );\n\t\t\t}\n\t\t}\n\n\t\t// Tidy the temporary table - remove name attributes so there aren't\n\t\t// duplicated in the dom (radio elements for example)\n\t\t$('[name]', tmpTable).removeAttr('name');\n\n\t\t// Table has been built, attach to the document so we can work with it.\n\t\t// A holding element is used, positioned at the top of the container\n\t\t// with minimal height, so it has no effect on if the container scrolls\n\t\t// or not. Otherwise it might trigger scrolling when it actually isn't\n\t\t// needed\n\t\tvar holder = $('<div/>').css( scrollX || scrollY ?\n\t\t\t\t{\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: 0,\n\t\t\t\t\theight: 1,\n\t\t\t\t\tright: 0,\n\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t} :\n\t\t\t\t{}\n\t\t\t)\n\t\t\t.append( tmpTable )\n\t\t\t.appendTo( tableContainer );\n\n\t\t// When scrolling (X or Y) we want to set the width of the table as \n\t\t// appropriate. However, when not scrolling leave the table width as it\n\t\t// is. This results in slightly different, but I think correct behaviour\n\t\tif ( scrollX && scrollXInner ) {\n\t\t\ttmpTable.width( scrollXInner );\n\t\t}\n\t\telse if ( scrollX ) {\n\t\t\ttmpTable.css( 'width', 'auto' );\n\t\t\ttmpTable.removeAttr('width');\n\n\t\t\t// If there is no width attribute or style, then allow the table to\n\t\t\t// collapse\n\t\t\tif ( tmpTable.width() < tableContainer.clientWidth && tableWidthAttr ) {\n\t\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t\t}\n\t\t}\n\t\telse if ( scrollY ) {\n\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t}\n\t\telse if ( tableWidthAttr ) {\n\t\t\ttmpTable.width( tableWidthAttr );\n\t\t}\n\n\t\t// Get the width of each column in the constructed table - we need to\n\t\t// know the inner width (so it can be assigned to the other table's\n\t\t// cells) and the outer width so we can calculate the full width of the\n\t\t// table. This is safe since DataTables requires a unique cell for each\n\t\t// column, but if ever a header can span multiple columns, this will\n\t\t// need to be modified.\n\t\tvar total = 0;\n\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\tvar cell = $(headerCells[i]);\n\t\t\tvar border = cell.outerWidth() - cell.width();\n\n\t\t\t// Use getBounding... where possible (not IE8-) because it can give\n\t\t\t// sub-pixel accuracy, which we then want to round up!\n\t\t\tvar bounding = browser.bBounding ?\n\t\t\t\tMath.ceil( headerCells[i].getBoundingClientRect().width ) :\n\t\t\t\tcell.outerWidth();\n\n\t\t\t// Total is tracked to remove any sub-pixel errors as the outerWidth\n\t\t\t// of the table might not equal the total given here (IE!).\n\t\t\ttotal += bounding;\n\n\t\t\t// Width for each column to use\n\t\t\tcolumns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding - border );\n\t\t}\n\n\t\ttable.style.width = _fnStringToCss( total );\n\n\t\t// Finished with the table - ditch it\n\t\tholder.remove();\n\t}\n\n\t// If there is a width attr, we want to attach an event listener which\n\t// allows the table sizing to automatically adjust when the window is\n\t// resized. Use the width attr rather than CSS, since we can't know if the\n\t// CSS is a relative value or absolute - DOM read is always px.\n\tif ( tableWidthAttr ) {\n\t\ttable.style.width = _fnStringToCss( tableWidthAttr );\n\t}\n\n\tif ( (tableWidthAttr || scrollX) && ! oSettings._reszEvt ) {\n\t\tvar bindResize = function () {\n\t\t\t$(window).on('resize.DT-'+oSettings.sInstance, _fnThrottle( function () {\n\t\t\t\t_fnAdjustColumnSizing( oSettings );\n\t\t\t} ) );\n\t\t};\n\n\t\t// IE6/7 will crash if we bind a resize event handler on page load.\n\t\t// To be removed in 1.11 which drops IE6/7 support\n\t\tif ( ie67 ) {\n\t\t\tsetTimeout( bindResize, 1000 );\n\t\t}\n\t\telse {\n\t\t\tbindResize();\n\t\t}\n\n\t\toSettings._reszEvt = true;\n\t}\n}\n\n\n/**\n * Throttle the calls to a function. Arguments and context are maintained for\n * the throttled function\n *  @param {function} fn Function to be called\n *  @param {int} [freq=200] call frequency in mS\n *  @returns {function} wrapped function\n *  @memberof DataTable#oApi\n */\nvar _fnThrottle = DataTable.util.throttle;\n\n\n/**\n * Convert a CSS unit width to pixels (e.g. 2em)\n *  @param {string} width width to be converted\n *  @param {node} parent parent to get the with for (required for relative widths) - optional\n *  @returns {int} width in pixels\n *  @memberof DataTable#oApi\n */\nfunction _fnConvertToWidth ( width, parent )\n{\n\tif ( ! width ) {\n\t\treturn 0;\n\t}\n\n\tvar n = $('<div/>')\n\t\t.css( 'width', _fnStringToCss( width ) )\n\t\t.appendTo( parent || document.body );\n\n\tvar val = n[0].offsetWidth;\n\tn.remove();\n\n\treturn val;\n}\n\n\n/**\n * Get the widest node\n *  @param {object} settings dataTables settings object\n *  @param {int} colIdx column of interest\n *  @returns {node} widest table node\n *  @memberof DataTable#oApi\n */\nfunction _fnGetWidestNode( settings, colIdx )\n{\n\tvar idx = _fnGetMaxLenString( settings, colIdx );\n\tif ( idx < 0 ) {\n\t\treturn null;\n\t}\n\n\tvar data = settings.aoData[ idx ];\n\treturn ! data.nTr ? // Might not have been created when deferred rendering\n\t\t$('<td/>').html( _fnGetCellData( settings, idx, colIdx, 'display' ) )[0] :\n\t\tdata.anCells[ colIdx ];\n}\n\n\n/**\n * Get the maximum strlen for each data column\n *  @param {object} settings dataTables settings object\n *  @param {int} colIdx column of interest\n *  @returns {string} max string length for each column\n *  @memberof DataTable#oApi\n */\nfunction _fnGetMaxLenString( settings, colIdx )\n{\n\tvar s, max=-1, maxIdx = -1;\n\n\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\ts = _fnGetCellData( settings, i, colIdx, 'display' )+'';\n\t\ts = s.replace( __re_html_remove, '' );\n\t\ts = s.replace( /&nbsp;/g, ' ' );\n\n\t\tif ( s.length > max ) {\n\t\t\tmax = s.length;\n\t\t\tmaxIdx = i;\n\t\t}\n\t}\n\n\treturn maxIdx;\n}\n\n\n/**\n * Append a CSS unit (only if required) to a string\n *  @param {string} value to css-ify\n *  @returns {string} value with css unit\n *  @memberof DataTable#oApi\n */\nfunction _fnStringToCss( s )\n{\n\tif ( s === null ) {\n\t\treturn '0px';\n\t}\n\n\tif ( typeof s == 'number' ) {\n\t\treturn s < 0 ?\n\t\t\t'0px' :\n\t\t\ts+'px';\n\t}\n\n\t// Check it has a unit character already\n\treturn s.match(/\\d$/) ?\n\t\ts+'px' :\n\t\ts;\n}\n\n\n\nfunction _fnSortFlatten ( settings )\n{\n\tvar\n\t\ti, iLen, k, kLen,\n\t\taSort = [],\n\t\taiOrig = [],\n\t\taoColumns = settings.aoColumns,\n\t\taDataSort, iCol, sType, srcCol,\n\t\tfixed = settings.aaSortingFixed,\n\t\tfixedObj = $.isPlainObject( fixed ),\n\t\tnestedSort = [],\n\t\tadd = function ( a ) {\n\t\t\tif ( a.length && ! Array.isArray( a[0] ) ) {\n\t\t\t\t// 1D array\n\t\t\t\tnestedSort.push( a );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// 2D array\n\t\t\t\t$.merge( nestedSort, a );\n\t\t\t}\n\t\t};\n\n\t// Build the sort array, with pre-fix and post-fix options if they have been\n\t// specified\n\tif ( Array.isArray( fixed ) ) {\n\t\tadd( fixed );\n\t}\n\n\tif ( fixedObj && fixed.pre ) {\n\t\tadd( fixed.pre );\n\t}\n\n\tadd( settings.aaSorting );\n\n\tif (fixedObj && fixed.post ) {\n\t\tadd( fixed.post );\n\t}\n\n\tfor ( i=0 ; i<nestedSort.length ; i++ )\n\t{\n\t\tsrcCol = nestedSort[i][0];\n\t\taDataSort = aoColumns[ srcCol ].aDataSort;\n\n\t\tfor ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )\n\t\t{\n\t\t\tiCol = aDataSort[k];\n\t\t\tsType = aoColumns[ iCol ].sType || 'string';\n\n\t\t\tif ( nestedSort[i]._idx === undefined ) {\n\t\t\t\tnestedSort[i]._idx = $.inArray( nestedSort[i][1], aoColumns[iCol].asSorting );\n\t\t\t}\n\n\t\t\taSort.push( {\n\t\t\t\tsrc:       srcCol,\n\t\t\t\tcol:       iCol,\n\t\t\t\tdir:       nestedSort[i][1],\n\t\t\t\tindex:     nestedSort[i]._idx,\n\t\t\t\ttype:      sType,\n\t\t\t\tformatter: DataTable.ext.type.order[ sType+\"-pre\" ]\n\t\t\t} );\n\t\t}\n\t}\n\n\treturn aSort;\n}\n\n/**\n * Change the order of the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n *  @todo This really needs split up!\n */\nfunction _fnSort ( oSettings )\n{\n\tvar\n\t\ti, ien, iLen, j, jLen, k, kLen,\n\t\tsDataType, nTh,\n\t\taiOrig = [],\n\t\toExtSort = DataTable.ext.type.order,\n\t\taoData = oSettings.aoData,\n\t\taoColumns = oSettings.aoColumns,\n\t\taDataSort, data, iCol, sType, oSort,\n\t\tformatters = 0,\n\t\tsortCol,\n\t\tdisplayMaster = oSettings.aiDisplayMaster,\n\t\taSort;\n\n\t// Resolve any column types that are unknown due to addition or invalidation\n\t// @todo Can this be moved into a 'data-ready' handler which is called when\n\t//   data is going to be used in the table?\n\t_fnColumnTypes( oSettings );\n\n\taSort = _fnSortFlatten( oSettings );\n\n\tfor ( i=0, ien=aSort.length ; i<ien ; i++ ) {\n\t\tsortCol = aSort[i];\n\n\t\t// Track if we can use the fast sort algorithm\n\t\tif ( sortCol.formatter ) {\n\t\t\tformatters++;\n\t\t}\n\n\t\t// Load the data needed for the sort, for each cell\n\t\t_fnSortData( oSettings, sortCol.col );\n\t}\n\n\t/* No sorting required if server-side or no sorting array */\n\tif ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )\n\t{\n\t\t// Create a value - key array of the current row positions such that we can use their\n\t\t// current position during the sort, if values match, in order to perform stable sorting\n\t\tfor ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {\n\t\t\taiOrig[ displayMaster[i] ] = i;\n\t\t}\n\n\t\t/* Do the sort - here we want multi-column sorting based on a given data source (column)\n\t\t * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n\t\t * follow on it's own, but this is what we want (example two column sorting):\n\t\t *  fnLocalSorting = function(a,b){\n\t\t *    var iTest;\n\t\t *    iTest = oSort['string-asc']('data11', 'data12');\n\t\t *      if (iTest !== 0)\n\t\t *        return iTest;\n\t\t *    iTest = oSort['numeric-desc']('data21', 'data22');\n\t\t *    if (iTest !== 0)\n\t\t *      return iTest;\n\t\t *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n\t\t *  }\n\t\t * Basically we have a test for each sorting column, if the data in that column is equal,\n\t\t * test the next column. If all columns match, then we use a numeric sort on the row\n\t\t * positions in the original data array to provide a stable sort.\n\t\t *\n\t\t * Note - I know it seems excessive to have two sorting methods, but the first is around\n\t\t * 15% faster, so the second is only maintained for backwards compatibility with sorting\n\t\t * methods which do not have a pre-sort formatting function.\n\t\t */\n\t\tif ( formatters === aSort.length ) {\n\t\t\t// All sort types have formatting functions\n\t\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\t\tvar\n\t\t\t\t\tx, y, k, test, sort,\n\t\t\t\t\tlen=aSort.length,\n\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\tdataB = aoData[b]._aSortData;\n\n\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\t\tsort = aSort[k];\n\n\t\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\t\ty = dataB[ sort.col ];\n\n\t\t\t\t\ttest = x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\treturn sort.dir === 'asc' ? test : -test;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tx = aiOrig[a];\n\t\t\t\ty = aiOrig[b];\n\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t\t} );\n\t\t}\n\t\telse {\n\t\t\t// Depreciated - remove in 1.11 (providing a plug-in option)\n\t\t\t// Not all sort types have formatting methods, so we have to call their sorting\n\t\t\t// methods.\n\t\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\t\tvar\n\t\t\t\t\tx, y, k, l, test, sort, fn,\n\t\t\t\t\tlen=aSort.length,\n\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\tdataB = aoData[b]._aSortData;\n\n\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\t\tsort = aSort[k];\n\n\t\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\t\ty = dataB[ sort.col ];\n\n\t\t\t\t\tfn = oExtSort[ sort.type+\"-\"+sort.dir ] || oExtSort[ \"string-\"+sort.dir ];\n\t\t\t\t\ttest = fn( x, y );\n\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\treturn test;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tx = aiOrig[a];\n\t\t\t\ty = aiOrig[b];\n\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t\t} );\n\t\t}\n\t}\n\n\t/* Tell the draw function that we have sorted the data */\n\toSettings.bSorted = true;\n}\n\n\nfunction _fnSortAria ( settings )\n{\n\tvar label;\n\tvar nextSort;\n\tvar columns = settings.aoColumns;\n\tvar aSort = _fnSortFlatten( settings );\n\tvar oAria = settings.oLanguage.oAria;\n\n\t// ARIA attributes - need to loop all columns, to update all (removing old\n\t// attributes as needed)\n\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t{\n\t\tvar col = columns[i];\n\t\tvar asSorting = col.asSorting;\n\t\tvar sTitle = col.ariaTitle || col.sTitle.replace( /<.*?>/g, \"\" );\n\t\tvar th = col.nTh;\n\n\t\t// IE7 is throwing an error when setting these properties with jQuery's\n\t\t// attr() and removeAttr() methods...\n\t\tth.removeAttribute('aria-sort');\n\n\t\t/* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */\n\t\tif ( col.bSortable ) {\n\t\t\tif ( aSort.length > 0 && aSort[0].col == i ) {\n\t\t\t\tth.setAttribute('aria-sort', aSort[0].dir==\"asc\" ? \"ascending\" : \"descending\" );\n\t\t\t\tnextSort = asSorting[ aSort[0].index+1 ] || asSorting[0];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnextSort = asSorting[0];\n\t\t\t}\n\n\t\t\tlabel = sTitle + ( nextSort === \"asc\" ?\n\t\t\t\toAria.sSortAscending :\n\t\t\t\toAria.sSortDescending\n\t\t\t);\n\t\t}\n\t\telse {\n\t\t\tlabel = sTitle;\n\t\t}\n\n\t\tth.setAttribute('aria-label', label);\n\t}\n}\n\n\n/**\n * Function to run on user sort request\n *  @param {object} settings dataTables settings object\n *  @param {node} attachTo node to attach the handler to\n *  @param {int} colIdx column sorting index\n *  @param {boolean} [append=false] Append the requested sort to the existing\n *    sort if true (i.e. multi-column sort)\n *  @param {function} [callback] callback function\n *  @memberof DataTable#oApi\n */\nfunction _fnSortListener ( settings, colIdx, append, callback )\n{\n\tvar col = settings.aoColumns[ colIdx ];\n\tvar sorting = settings.aaSorting;\n\tvar asSorting = col.asSorting;\n\tvar nextSortIdx;\n\tvar next = function ( a, overflow ) {\n\t\tvar idx = a._idx;\n\t\tif ( idx === undefined ) {\n\t\t\tidx = $.inArray( a[1], asSorting );\n\t\t}\n\n\t\treturn idx+1 < asSorting.length ?\n\t\t\tidx+1 :\n\t\t\toverflow ?\n\t\t\t\tnull :\n\t\t\t\t0;\n\t};\n\n\t// Convert to 2D array if needed\n\tif ( typeof sorting[0] === 'number' ) {\n\t\tsorting = settings.aaSorting = [ sorting ];\n\t}\n\n\t// If appending the sort then we are multi-column sorting\n\tif ( append && settings.oFeatures.bSortMulti ) {\n\t\t// Are we already doing some kind of sort on this column?\n\t\tvar sortIdx = $.inArray( colIdx, _pluck(sorting, '0') );\n\n\t\tif ( sortIdx !== -1 ) {\n\t\t\t// Yes, modify the sort\n\t\t\tnextSortIdx = next( sorting[sortIdx], true );\n\n\t\t\tif ( nextSortIdx === null && sorting.length === 1 ) {\n\t\t\t\tnextSortIdx = 0; // can't remove sorting completely\n\t\t\t}\n\n\t\t\tif ( nextSortIdx === null ) {\n\t\t\t\tsorting.splice( sortIdx, 1 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsorting[sortIdx][1] = asSorting[ nextSortIdx ];\n\t\t\t\tsorting[sortIdx]._idx = nextSortIdx;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// No sort on this column yet\n\t\t\tsorting.push( [ colIdx, asSorting[0], 0 ] );\n\t\t\tsorting[sorting.length-1]._idx = 0;\n\t\t}\n\t}\n\telse if ( sorting.length && sorting[0][0] == colIdx ) {\n\t\t// Single column - already sorting on this column, modify the sort\n\t\tnextSortIdx = next( sorting[0] );\n\n\t\tsorting.length = 1;\n\t\tsorting[0][1] = asSorting[ nextSortIdx ];\n\t\tsorting[0]._idx = nextSortIdx;\n\t}\n\telse {\n\t\t// Single column - sort only on this column\n\t\tsorting.length = 0;\n\t\tsorting.push( [ colIdx, asSorting[0] ] );\n\t\tsorting[0]._idx = 0;\n\t}\n\n\t// Run the sort by calling a full redraw\n\t_fnReDraw( settings );\n\n\t// callback used for async user interaction\n\tif ( typeof callback == 'function' ) {\n\t\tcallback( settings );\n\t}\n}\n\n\n/**\n * Attach a sort handler (click) to a node\n *  @param {object} settings dataTables settings object\n *  @param {node} attachTo node to attach the handler to\n *  @param {int} colIdx column sorting index\n *  @param {function} [callback] callback function\n *  @memberof DataTable#oApi\n */\nfunction _fnSortAttachListener ( settings, attachTo, colIdx, callback )\n{\n\tvar col = settings.aoColumns[ colIdx ];\n\n\t_fnBindAction( attachTo, {}, function (e) {\n\t\t/* If the column is not sortable - don't to anything */\n\t\tif ( col.bSortable === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If processing is enabled use a timeout to allow the processing\n\t\t// display to be shown - otherwise to it synchronously\n\t\tif ( settings.oFeatures.bProcessing ) {\n\t\t\t_fnProcessingDisplay( settings, true );\n\n\t\t\tsetTimeout( function() {\n\t\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\n\n\t\t\t\t// In server-side processing, the draw callback will remove the\n\t\t\t\t// processing display\n\t\t\t\tif ( _fnDataSource( settings ) !== 'ssp' ) {\n\t\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t}\n\t\t\t}, 0 );\n\t\t}\n\t\telse {\n\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\n\t\t}\n\t} );\n}\n\n\n/**\n * Set the sorting classes on table's body, Note: it is safe to call this function\n * when bSort and bSortClasses are false\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnSortingClasses( settings )\n{\n\tvar oldSort = settings.aLastSort;\n\tvar sortClass = settings.oClasses.sSortColumn;\n\tvar sort = _fnSortFlatten( settings );\n\tvar features = settings.oFeatures;\n\tvar i, ien, colIdx;\n\n\tif ( features.bSort && features.bSortClasses ) {\n\t\t// Remove old sorting classes\n\t\tfor ( i=0, ien=oldSort.length ; i<ien ; i++ ) {\n\t\t\tcolIdx = oldSort[i].src;\n\n\t\t\t// Remove column sorting\n\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t.removeClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t}\n\n\t\t// Add new column sorting\n\t\tfor ( i=0, ien=sort.length ; i<ien ; i++ ) {\n\t\t\tcolIdx = sort[i].src;\n\n\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t.addClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t}\n\t}\n\n\tsettings.aLastSort = sort;\n}\n\n\n// Get the data to sort a column, be it from cache, fresh (populating the\n// cache), or from a sort formatter\nfunction _fnSortData( settings, idx )\n{\n\t// Custom sorting function - provided by the sort data type\n\tvar column = settings.aoColumns[ idx ];\n\tvar customSort = DataTable.ext.order[ column.sSortDataType ];\n\tvar customData;\n\n\tif ( customSort ) {\n\t\tcustomData = customSort.call( settings.oInstance, settings, idx,\n\t\t\t_fnColumnIndexToVisible( settings, idx )\n\t\t);\n\t}\n\n\t// Use / populate cache\n\tvar row, cellData;\n\tvar formatter = DataTable.ext.type.order[ column.sType+\"-pre\" ];\n\n\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\trow = settings.aoData[i];\n\n\t\tif ( ! row._aSortData ) {\n\t\t\trow._aSortData = [];\n\t\t}\n\n\t\tif ( ! row._aSortData[idx] || customSort ) {\n\t\t\tcellData = customSort ?\n\t\t\t\tcustomData[i] : // If there was a custom sort function, use data from there\n\t\t\t\t_fnGetCellData( settings, i, idx, 'sort' );\n\n\t\t\trow._aSortData[ idx ] = formatter ?\n\t\t\t\tformatter( cellData ) :\n\t\t\t\tcellData;\n\t\t}\n\t}\n}\n\n\n\n/**\n * Save the state of a table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnSaveState ( settings )\n{\n\tif (settings._bLoadingState) {\n\t\treturn;\n\t}\n\n\t/* Store the interesting variables */\n\tvar state = {\n\t\ttime:    +new Date(),\n\t\tstart:   settings._iDisplayStart,\n\t\tlength:  settings._iDisplayLength,\n\t\torder:   $.extend( true, [], settings.aaSorting ),\n\t\tsearch:  _fnSearchToCamel( settings.oPreviousSearch ),\n\t\tcolumns: $.map( settings.aoColumns, function ( col, i ) {\n\t\t\treturn {\n\t\t\t\tvisible: col.bVisible,\n\t\t\t\tsearch: _fnSearchToCamel( settings.aoPreSearchCols[i] )\n\t\t\t};\n\t\t} )\n\t};\n\n\tsettings.oSavedState = state;\n\t_fnCallbackFire( settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state] );\n\t\n\tif ( settings.oFeatures.bStateSave && !settings.bDestroying )\n\t{\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, state );\n\t}\t\n}\n\n\n/**\n * Attempt to load a saved table state\n *  @param {object} oSettings dataTables settings object\n *  @param {object} oInit DataTables init object so we can override settings\n *  @param {function} callback Callback to execute when the state has been loaded\n *  @memberof DataTable#oApi\n */\nfunction _fnLoadState ( settings, oInit, callback )\n{\n\tif ( ! settings.oFeatures.bStateSave ) {\n\t\tcallback();\n\t\treturn;\n\t}\n\n\tvar loaded = function(state) {\n\t\t_fnImplementState(settings, state, callback);\n\t}\n\n\tvar state = settings.fnStateLoadCallback.call( settings.oInstance, settings, loaded );\n\n\tif ( state !== undefined ) {\n\t\t_fnImplementState( settings, state, callback );\n\t}\n\t// otherwise, wait for the loaded callback to be executed\n\n\treturn true;\n}\n\nfunction _fnImplementState ( settings, s, callback) {\n\tvar i, ien;\n\tvar columns = settings.aoColumns;\n\tsettings._bLoadingState = true;\n\n\t// When StateRestore was introduced the state could now be implemented at any time\n\t// Not just initialisation. To do this an api instance is required in some places\n\tvar api = settings._bInitComplete ? new DataTable.Api(settings) : null;\n\n\tif ( ! s || ! s.time ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Allow custom and plug-in manipulation functions to alter the saved data set and\n\t// cancelling of loading by returning false\n\tvar abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s] );\n\tif ( $.inArray( false, abStateLoad ) !== -1 ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Reject old data\n\tvar duration = settings.iStateDuration;\n\tif ( duration > 0 && s.time < +new Date() - (duration*1000) ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Number of columns have changed - all bets are off, no restore of settings\n\tif ( s.columns && columns.length !== s.columns.length ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Store the saved state so it might be accessed at any time\n\tsettings.oLoadedState = $.extend( true, {}, s );\n\n\t// Page Length\n\tif ( s.length !== undefined ) {\n\t\t// If already initialised just set the value directly so that the select element is also updated\n\t\tif (api) {\n\t\t\tapi.page.len(s.length)\n\t\t}\n\t\telse {\n\t\t\tsettings._iDisplayLength   = s.length;\n\t\t}\n\t}\n\n\t// Restore key features - todo - for 1.11 this needs to be done by\n\t// subscribed events\n\tif ( s.start !== undefined ) {\n\t\tif(api === null) {\n\t\t\tsettings._iDisplayStart    = s.start;\n\t\t\tsettings.iInitDisplayStart = s.start;\n\t\t}\n\t\telse {\n\t\t\t_fnPageChange(settings, s.start/settings._iDisplayLength);\n\t\t}\n\t}\n\n\t// Order\n\tif ( s.order !== undefined ) {\n\t\tsettings.aaSorting = [];\n\t\t$.each( s.order, function ( i, col ) {\n\t\t\tsettings.aaSorting.push( col[0] >= columns.length ?\n\t\t\t\t[ 0, col[1] ] :\n\t\t\t\tcol\n\t\t\t);\n\t\t} );\n\t}\n\n\t// Search\n\tif ( s.search !== undefined ) {\n\t\t$.extend( settings.oPreviousSearch, _fnSearchToHung( s.search ) );\n\t}\n\n\t// Columns\n\tif ( s.columns ) {\n\t\tfor ( i=0, ien=s.columns.length ; i<ien ; i++ ) {\n\t\t\tvar col = s.columns[i];\n\n\t\t\t// Visibility\n\t\t\tif ( col.visible !== undefined ) {\n\t\t\t\t// If the api is defined, the table has been initialised so we need to use it rather than internal settings\n\t\t\t\tif (api) {\n\t\t\t\t\t// Don't redraw the columns on every iteration of this loop, we will do this at the end instead\n\t\t\t\t\tapi.column(i).visible(col.visible, false);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcolumns[i].bVisible = col.visible;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Search\n\t\t\tif ( col.search !== undefined ) {\n\t\t\t\t$.extend( settings.aoPreSearchCols[i], _fnSearchToHung( col.search ) );\n\t\t\t}\n\t\t}\n\t\t\n\t\t// If the api is defined then we need to adjust the columns once the visibility has been changed\n\t\tif (api) {\n\t\t\tapi.columns.adjust();\n\t\t}\n\t}\n\n\tsettings._bLoadingState = false;\n\t_fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, s] );\n\tcallback();\n};\n\n\n/**\n * Return the settings object for a particular table\n *  @param {node} table table we are using as a dataTable\n *  @returns {object} Settings object - or null if not found\n *  @memberof DataTable#oApi\n */\nfunction _fnSettingsFromNode ( table )\n{\n\tvar settings = DataTable.settings;\n\tvar idx = $.inArray( table, _pluck( settings, 'nTable' ) );\n\n\treturn idx !== -1 ?\n\t\tsettings[ idx ] :\n\t\tnull;\n}\n\n\n/**\n * Log an error message\n *  @param {object} settings dataTables settings object\n *  @param {int} level log error messages, or display them to the user\n *  @param {string} msg error message\n *  @param {int} tn Technical note id to get more information about the error.\n *  @memberof DataTable#oApi\n */\nfunction _fnLog( settings, level, msg, tn )\n{\n\tmsg = 'DataTables warning: '+\n\t\t(settings ? 'table id='+settings.sTableId+' - ' : '')+msg;\n\n\tif ( tn ) {\n\t\tmsg += '. For more information about this error, please see '+\n\t\t'http://datatables.net/tn/'+tn;\n\t}\n\n\tif ( ! level  ) {\n\t\t// Backwards compatibility pre 1.10\n\t\tvar ext = DataTable.ext;\n\t\tvar type = ext.sErrMode || ext.errMode;\n\n\t\tif ( settings ) {\n\t\t\t_fnCallbackFire( settings, null, 'error', [ settings, tn, msg ] );\n\t\t}\n\n\t\tif ( type == 'alert' ) {\n\t\t\talert( msg );\n\t\t}\n\t\telse if ( type == 'throw' ) {\n\t\t\tthrow new Error(msg);\n\t\t}\n\t\telse if ( typeof type == 'function' ) {\n\t\t\ttype( settings, tn, msg );\n\t\t}\n\t}\n\telse if ( window.console && console.log ) {\n\t\tconsole.log( msg );\n\t}\n}\n\n\n/**\n * See if a property is defined on one object, if so assign it to the other object\n *  @param {object} ret target object\n *  @param {object} src source object\n *  @param {string} name property\n *  @param {string} [mappedName] name to map too - optional, name used if not given\n *  @memberof DataTable#oApi\n */\nfunction _fnMap( ret, src, name, mappedName )\n{\n\tif ( Array.isArray( name ) ) {\n\t\t$.each( name, function (i, val) {\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\t_fnMap( ret, src, val[0], val[1] );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnMap( ret, src, val );\n\t\t\t}\n\t\t} );\n\n\t\treturn;\n\t}\n\n\tif ( mappedName === undefined ) {\n\t\tmappedName = name;\n\t}\n\n\tif ( src[name] !== undefined ) {\n\t\tret[mappedName] = src[name];\n\t}\n}\n\n\n/**\n * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n * shallow copy arrays. The reason we need to do this, is that we don't want to\n * deep copy array init values (such as aaSorting) since the dev wouldn't be\n * able to override them, but we do want to deep copy arrays.\n *  @param {object} out Object to extend\n *  @param {object} extender Object from which the properties will be applied to\n *      out\n *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n *      independent copy with the exception of the `data` or `aaData` parameters\n *      if they are present. This is so you can pass in a collection to\n *      DataTables and have that used as your data source without breaking the\n *      references\n *  @returns {object} out Reference, just for convenience - out === the return.\n *  @memberof DataTable#oApi\n *  @todo This doesn't take account of arrays inside the deep copied objects.\n */\nfunction _fnExtend( out, extender, breakRefs )\n{\n\tvar val;\n\n\tfor ( var prop in extender ) {\n\t\tif ( extender.hasOwnProperty(prop) ) {\n\t\t\tval = extender[prop];\n\n\t\t\tif ( $.isPlainObject( val ) ) {\n\t\t\t\tif ( ! $.isPlainObject( out[prop] ) ) {\n\t\t\t\t\tout[prop] = {};\n\t\t\t\t}\n\t\t\t\t$.extend( true, out[prop], val );\n\t\t\t}\n\t\t\telse if ( breakRefs && prop !== 'data' && prop !== 'aaData' && Array.isArray(val) ) {\n\t\t\t\tout[prop] = val.slice();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tout[prop] = val;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out;\n}\n\n\n/**\n * Bind an event handers to allow a click or return key to activate the callback.\n * This is good for accessibility since a return on the keyboard will have the\n * same effect as a click, if the element has focus.\n *  @param {element} n Element to bind the action to\n *  @param {object} oData Data object to pass to the triggered function\n *  @param {function} fn Callback function for when the event is triggered\n *  @memberof DataTable#oApi\n */\nfunction _fnBindAction( n, oData, fn )\n{\n\t$(n)\n\t\t.on( 'click.DT', oData, function (e) {\n\t\t\t\t$(n).trigger('blur'); // Remove focus outline for mouse users\n\t\t\t\tfn(e);\n\t\t\t} )\n\t\t.on( 'keypress.DT', oData, function (e){\n\t\t\t\tif ( e.which === 13 ) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tfn(e);\n\t\t\t\t}\n\t\t\t} )\n\t\t.on( 'selectstart.DT', function () {\n\t\t\t\t/* Take the brutal approach to cancelling text selection */\n\t\t\t\treturn false;\n\t\t\t} );\n}\n\n\n/**\n * Register a callback function. Easily allows a callback function to be added to\n * an array store of callback functions that can then all be called together.\n *  @param {object} oSettings dataTables settings object\n *  @param {string} sStore Name of the array storage for the callbacks in oSettings\n *  @param {function} fn Function to be called back\n *  @param {string} sName Identifying name for the callback (i.e. a label)\n *  @memberof DataTable#oApi\n */\nfunction _fnCallbackReg( oSettings, sStore, fn, sName )\n{\n\tif ( fn )\n\t{\n\t\toSettings[sStore].push( {\n\t\t\t\"fn\": fn,\n\t\t\t\"sName\": sName\n\t\t} );\n\t}\n}\n\n\n/**\n * Fire callback functions and trigger events. Note that the loop over the\n * callback array store is done backwards! Further note that you do not want to\n * fire off triggers in time sensitive applications (for example cell creation)\n * as its slow.\n *  @param {object} settings dataTables settings object\n *  @param {string} callbackArr Name of the array storage for the callbacks in\n *      oSettings\n *  @param {string} eventName Name of the jQuery custom event to trigger. If\n *      null no trigger is fired\n *  @param {array} args Array of arguments to pass to the callback function /\n *      trigger\n *  @memberof DataTable#oApi\n */\nfunction _fnCallbackFire( settings, callbackArr, eventName, args )\n{\n\tvar ret = [];\n\n\tif ( callbackArr ) {\n\t\tret = $.map( settings[callbackArr].slice().reverse(), function (val, i) {\n\t\t\treturn val.fn.apply( settings.oInstance, args );\n\t\t} );\n\t}\n\n\tif ( eventName !== null ) {\n\t\tvar e = $.Event( eventName+'.dt' );\n\t\tvar table = $(settings.nTable);\n\n\t\ttable.trigger( e, args );\n\n\t\t// If not yet attached to the document, trigger the event\n\t\t// on the body directly to sort of simulate the bubble\n\t\tif (table.parents('body').length === 0) {\n\t\t\t$('body').trigger( e, args );\n\t\t}\n\n\t\tret.push( e.result );\n\t}\n\n\treturn ret;\n}\n\n\nfunction _fnLengthOverflow ( settings )\n{\n\tvar\n\t\tstart = settings._iDisplayStart,\n\t\tend = settings.fnDisplayEnd(),\n\t\tlen = settings._iDisplayLength;\n\n\t/* If we have space to show extra rows (backing up from the end point - then do so */\n\tif ( start >= end )\n\t{\n\t\tstart = end - len;\n\t}\n\n\t// Keep the start record on the current page\n\tstart -= (start % len);\n\n\tif ( len === -1 || start < 0 )\n\t{\n\t\tstart = 0;\n\t}\n\n\tsettings._iDisplayStart = start;\n}\n\n\nfunction _fnRenderer( settings, type )\n{\n\tvar renderer = settings.renderer;\n\tvar host = DataTable.ext.renderer[type];\n\n\tif ( $.isPlainObject( renderer ) && renderer[type] ) {\n\t\t// Specific renderer for this type. If available use it, otherwise use\n\t\t// the default.\n\t\treturn host[renderer[type]] || host._;\n\t}\n\telse if ( typeof renderer === 'string' ) {\n\t\t// Common renderer - if there is one available for this type use it,\n\t\t// otherwise use the default\n\t\treturn host[renderer] || host._;\n\t}\n\n\t// Use the default\n\treturn host._;\n}\n\n\n/**\n * Detect the data source being used for the table. Used to simplify the code\n * a little (ajax) and to make it compress a little smaller.\n *\n *  @param {object} settings dataTables settings object\n *  @returns {string} Data source\n *  @memberof DataTable#oApi\n */\nfunction _fnDataSource ( settings )\n{\n\tif ( settings.oFeatures.bServerSide ) {\n\t\treturn 'ssp';\n\t}\n\telse if ( settings.ajax || settings.sAjaxSource ) {\n\t\treturn 'ajax';\n\t}\n\treturn 'dom';\n}\n\n\n\n\n/**\n * Computed structure of the DataTables API, defined by the options passed to\n * `DataTable.Api.register()` when building the API.\n *\n * The structure is built in order to speed creation and extension of the Api\n * objects since the extensions are effectively pre-parsed.\n *\n * The array is an array of objects with the following structure, where this\n * base array represents the Api prototype base:\n *\n *     [\n *       {\n *         name:      'data'                -- string   - Property name\n *         val:       function () {},       -- function - Api method (or undefined if just an object\n *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n *       },\n *       {\n *         name:     'row'\n *         val:       {},\n *         methodExt: [ ... ],\n *         propExt:   [\n *           {\n *             name:      'data'\n *             val:       function () {},\n *             methodExt: [ ... ],\n *             propExt:   [ ... ]\n *           },\n *           ...\n *         ]\n *       }\n *     ]\n *\n * @type {Array}\n * @ignore\n */\nvar __apiStruct = [];\n\n\n/**\n * `Array.prototype` reference.\n *\n * @type object\n * @ignore\n */\nvar __arrayProto = Array.prototype;\n\n\n/**\n * Abstraction for `context` parameter of the `Api` constructor to allow it to\n * take several different forms for ease of use.\n *\n * Each of the input parameter types will be converted to a DataTables settings\n * object where possible.\n *\n * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n *   of:\n *\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\n *     with be found and used.\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\n *   * `object` - DataTables settings object\n *   * `DataTables.Api` - API instance\n * @return {array|null} Matching DataTables settings objects. `null` or\n *   `undefined` is returned if no matching DataTable is found.\n * @ignore\n */\nvar _toSettings = function ( mixed )\n{\n\tvar idx, jq;\n\tvar settings = DataTable.settings;\n\tvar tables = $.map( settings, function (el, i) {\n\t\treturn el.nTable;\n\t} );\n\n\tif ( ! mixed ) {\n\t\treturn [];\n\t}\n\telse if ( mixed.nTable && mixed.oApi ) {\n\t\t// DataTables settings object\n\t\treturn [ mixed ];\n\t}\n\telse if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {\n\t\t// Table node\n\t\tidx = $.inArray( mixed, tables );\n\t\treturn idx !== -1 ? [ settings[idx] ] : null;\n\t}\n\telse if ( mixed && typeof mixed.settings === 'function' ) {\n\t\treturn mixed.settings().toArray();\n\t}\n\telse if ( typeof mixed === 'string' ) {\n\t\t// jQuery selector\n\t\tjq = $(mixed);\n\t}\n\telse if ( mixed instanceof $ ) {\n\t\t// jQuery object (also DataTables instance)\n\t\tjq = mixed;\n\t}\n\n\tif ( jq ) {\n\t\treturn jq.map( function(i) {\n\t\t\tidx = $.inArray( this, tables );\n\t\t\treturn idx !== -1 ? settings[idx] : null;\n\t\t} ).toArray();\n\t}\n};\n\n\n/**\n * DataTables API class - used to control and interface with  one or more\n * DataTables enhanced tables.\n *\n * The API class is heavily based on jQuery, presenting a chainable interface\n * that you can use to interact with tables. Each instance of the API class has\n * a \"context\" - i.e. the tables that it will operate on. This could be a single\n * table, all tables on a page or a sub-set thereof.\n *\n * Additionally the API is designed to allow you to easily work with the data in\n * the tables, retrieving and manipulating it as required. This is done by\n * presenting the API class as an array like interface. The contents of the\n * array depend upon the actions requested by each method (for example\n * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n * return an array of objects or arrays depending upon your table's\n * configuration). The API object has a number of array like methods (`push`,\n * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n * `unique` etc) to assist your working with the data held in a table.\n *\n * Most methods (those which return an Api instance) are chainable, which means\n * the return from a method call also has all of the methods available that the\n * top level object had. For example, these two calls are equivalent:\n *\n *     // Not chained\n *     api.row.add( {...} );\n *     api.draw();\n *\n *     // Chained\n *     api.row.add( {...} ).draw();\n *\n * @class DataTable.Api\n * @param {array|object|string|jQuery} context DataTable identifier. This is\n *   used to define which DataTables enhanced tables this API will operate on.\n *   Can be one of:\n *\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\n *     with be found and used.\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\n *   * `object` - DataTables settings object\n * @param {array} [data] Data to initialise the Api instance with.\n *\n * @example\n *   // Direct initialisation during DataTables construction\n *   var api = $('#example').DataTable();\n *\n * @example\n *   // Initialisation using a DataTables jQuery object\n *   var api = $('#example').dataTable().api();\n *\n * @example\n *   // Initialisation as a constructor\n *   var api = new $.fn.DataTable.Api( 'table.dataTable' );\n */\n_Api = function ( context, data )\n{\n\tif ( ! (this instanceof _Api) ) {\n\t\treturn new _Api( context, data );\n\t}\n\n\tvar settings = [];\n\tvar ctxSettings = function ( o ) {\n\t\tvar a = _toSettings( o );\n\t\tif ( a ) {\n\t\t\tsettings.push.apply( settings, a );\n\t\t}\n\t};\n\n\tif ( Array.isArray( context ) ) {\n\t\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\tctxSettings( context[i] );\n\t\t}\n\t}\n\telse {\n\t\tctxSettings( context );\n\t}\n\n\t// Remove duplicates\n\tthis.context = _unique( settings );\n\n\t// Initial data\n\tif ( data ) {\n\t\t$.merge( this, data );\n\t}\n\n\t// selector\n\tthis.selector = {\n\t\trows: null,\n\t\tcols: null,\n\t\topts: null\n\t};\n\n\t_Api.extend( this, this, __apiStruct );\n};\n\nDataTable.Api = _Api;\n\n// Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n// isPlainObject.\n$.extend( _Api.prototype, {\n\tany: function ()\n\t{\n\t\treturn this.count() !== 0;\n\t},\n\n\n\tconcat:  __arrayProto.concat,\n\n\n\tcontext: [], // array of table settings objects\n\n\n\tcount: function ()\n\t{\n\t\treturn this.flatten().length;\n\t},\n\n\n\teach: function ( fn )\n\t{\n\t\tfor ( var i=0, ien=this.length ; i<ien; i++ ) {\n\t\t\tfn.call( this, this[i], i, this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\n\teq: function ( idx )\n\t{\n\t\tvar ctx = this.context;\n\n\t\treturn ctx.length > idx ?\n\t\t\tnew _Api( ctx[idx], this[idx] ) :\n\t\t\tnull;\n\t},\n\n\n\tfilter: function ( fn )\n\t{\n\t\tvar a = [];\n\n\t\tif ( __arrayProto.filter ) {\n\t\t\ta = __arrayProto.filter.call( this, fn, this );\n\t\t}\n\t\telse {\n\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\n\t\t\t\tif ( fn.call( this, this[i], i, this ) ) {\n\t\t\t\t\ta.push( this[i] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn new _Api( this.context, a );\n\t},\n\n\n\tflatten: function ()\n\t{\n\t\tvar a = [];\n\t\treturn new _Api( this.context, a.concat.apply( a, this.toArray() ) );\n\t},\n\n\n\tjoin:    __arrayProto.join,\n\n\n\tindexOf: __arrayProto.indexOf || function (obj, start)\n\t{\n\t\tfor ( var i=(start || 0), ien=this.length ; i<ien ; i++ ) {\n\t\t\tif ( this[i] === obj ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\titerator: function ( flatten, type, fn, alwaysNew ) {\n\t\tvar\n\t\t\ta = [], ret,\n\t\t\ti, ien, j, jen,\n\t\t\tcontext = this.context,\n\t\t\trows, items, item,\n\t\t\tselector = this.selector;\n\n\t\t// Argument shifting\n\t\tif ( typeof flatten === 'string' ) {\n\t\t\talwaysNew = fn;\n\t\t\tfn = type;\n\t\t\ttype = flatten;\n\t\t\tflatten = false;\n\t\t}\n\n\t\tfor ( i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\tvar apiInst = new _Api( context[i] );\n\n\t\t\tif ( type === 'table' ) {\n\t\t\t\tret = fn.call( apiInst, context[i], i );\n\n\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\ta.push( ret );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( type === 'columns' || type === 'rows' ) {\n\t\t\t\t// this has same length as context - one entry for each table\n\t\t\t\tret = fn.call( apiInst, context[i], this[i], i );\n\n\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\ta.push( ret );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {\n\t\t\t\t// columns and rows share the same structure.\n\t\t\t\t// 'this' is an array of column indexes for each context\n\t\t\t\titems = this[i];\n\n\t\t\t\tif ( type === 'column-rows' ) {\n\t\t\t\t\trows = _selector_row_indexes( context[i], selector.opts );\n\t\t\t\t}\n\n\t\t\t\tfor ( j=0, jen=items.length ; j<jen ; j++ ) {\n\t\t\t\t\titem = items[j];\n\n\t\t\t\t\tif ( type === 'cell' ) {\n\t\t\t\t\t\tret = fn.call( apiInst, context[i], item.row, item.column, i, j );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tret = fn.call( apiInst, context[i], item, i, j, rows );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( a.length || alwaysNew ) {\n\t\t\tvar api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );\n\t\t\tvar apiSelector = api.selector;\n\t\t\tapiSelector.rows = selector.rows;\n\t\t\tapiSelector.cols = selector.cols;\n\t\t\tapiSelector.opts = selector.opts;\n\t\t\treturn api;\n\t\t}\n\t\treturn this;\n\t},\n\n\n\tlastIndexOf: __arrayProto.lastIndexOf || function (obj, start)\n\t{\n\t\t// Bit cheeky...\n\t\treturn this.indexOf.apply( this.toArray.reverse(), arguments );\n\t},\n\n\n\tlength:  0,\n\n\n\tmap: function ( fn )\n\t{\n\t\tvar a = [];\n\n\t\tif ( __arrayProto.map ) {\n\t\t\ta = __arrayProto.map.call( this, fn, this );\n\t\t}\n\t\telse {\n\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\n\t\t\t\ta.push( fn.call( this, this[i], i ) );\n\t\t\t}\n\t\t}\n\n\t\treturn new _Api( this.context, a );\n\t},\n\n\n\tpluck: function ( prop )\n\t{\n\t\tvar fn = DataTable.util.get(prop);\n\n\t\treturn this.map( function ( el ) {\n\t\t\treturn fn(el);\n\t\t} );\n\t},\n\n\tpop:     __arrayProto.pop,\n\n\n\tpush:    __arrayProto.push,\n\n\n\t// Does not return an API instance\n\treduce: __arrayProto.reduce || function ( fn, init )\n\t{\n\t\treturn _fnReduce( this, fn, init, 0, this.length, 1 );\n\t},\n\n\n\treduceRight: __arrayProto.reduceRight || function ( fn, init )\n\t{\n\t\treturn _fnReduce( this, fn, init, this.length-1, -1, -1 );\n\t},\n\n\n\treverse: __arrayProto.reverse,\n\n\n\t// Object with rows, columns and opts\n\tselector: null,\n\n\n\tshift:   __arrayProto.shift,\n\n\n\tslice: function () {\n\t\treturn new _Api( this.context, this );\n\t},\n\n\n\tsort:    __arrayProto.sort, // ? name - order?\n\n\n\tsplice:  __arrayProto.splice,\n\n\n\ttoArray: function ()\n\t{\n\t\treturn __arrayProto.slice.call( this );\n\t},\n\n\n\tto$: function ()\n\t{\n\t\treturn $( this );\n\t},\n\n\n\ttoJQuery: function ()\n\t{\n\t\treturn $( this );\n\t},\n\n\n\tunique: function ()\n\t{\n\t\treturn new _Api( this.context, _unique(this) );\n\t},\n\n\n\tunshift: __arrayProto.unshift\n} );\n\n\n_Api.extend = function ( scope, obj, ext )\n{\n\t// Only extend API instances and static properties of the API\n\tif ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {\n\t\treturn;\n\t}\n\n\tvar\n\t\ti, ien,\n\t\tstruct,\n\t\tmethodScoping = function ( scope, fn, struc ) {\n\t\t\treturn function () {\n\t\t\t\tvar ret = fn.apply( scope, arguments );\n\n\t\t\t\t// Method extension\n\t\t\t\t_Api.extend( ret, ret, struc.methodExt );\n\t\t\t\treturn ret;\n\t\t\t};\n\t\t};\n\n\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\tstruct = ext[i];\n\n\t\t// Value\n\t\tobj[ struct.name ] = struct.type === 'function' ?\n\t\t\tmethodScoping( scope, struct.val, struct ) :\n\t\t\tstruct.type === 'object' ?\n\t\t\t\t{} :\n\t\t\t\tstruct.val;\n\n\t\tobj[ struct.name ].__dt_wrapper = true;\n\n\t\t// Property extension\n\t\t_Api.extend( scope, obj[ struct.name ], struct.propExt );\n\t}\n};\n\n\n// @todo - Is there need for an augment function?\n// _Api.augment = function ( inst, name )\n// {\n// \t// Find src object in the structure from the name\n// \tvar parts = name.split('.');\n\n// \t_Api.extend( inst, obj );\n// };\n\n\n//     [\n//       {\n//         name:      'data'                -- string   - Property name\n//         val:       function () {},       -- function - Api method (or undefined if just an object\n//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n//       },\n//       {\n//         name:     'row'\n//         val:       {},\n//         methodExt: [ ... ],\n//         propExt:   [\n//           {\n//             name:      'data'\n//             val:       function () {},\n//             methodExt: [ ... ],\n//             propExt:   [ ... ]\n//           },\n//           ...\n//         ]\n//       }\n//     ]\n\n_Api.register = _api_register = function ( name, val )\n{\n\tif ( Array.isArray( name ) ) {\n\t\tfor ( var j=0, jen=name.length ; j<jen ; j++ ) {\n\t\t\t_Api.register( name[j], val );\n\t\t}\n\t\treturn;\n\t}\n\n\tvar\n\t\ti, ien,\n\t\their = name.split('.'),\n\t\tstruct = __apiStruct,\n\t\tkey, method;\n\n\tvar find = function ( src, name ) {\n\t\tfor ( var i=0, ien=src.length ; i<ien ; i++ ) {\n\t\t\tif ( src[i].name === name ) {\n\t\t\t\treturn src[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\n\tfor ( i=0, ien=heir.length ; i<ien ; i++ ) {\n\t\tmethod = heir[i].indexOf('()') !== -1;\n\t\tkey = method ?\n\t\t\their[i].replace('()', '') :\n\t\t\their[i];\n\n\t\tvar src = find( struct, key );\n\t\tif ( ! src ) {\n\t\t\tsrc = {\n\t\t\t\tname:      key,\n\t\t\t\tval:       {},\n\t\t\t\tmethodExt: [],\n\t\t\t\tpropExt:   [],\n\t\t\t\ttype:      'object'\n\t\t\t};\n\t\t\tstruct.push( src );\n\t\t}\n\n\t\tif ( i === ien-1 ) {\n\t\t\tsrc.val = val;\n\t\t\tsrc.type = typeof val === 'function' ?\n\t\t\t\t'function' :\n\t\t\t\t$.isPlainObject( val ) ?\n\t\t\t\t\t'object' :\n\t\t\t\t\t'other';\n\t\t}\n\t\telse {\n\t\t\tstruct = method ?\n\t\t\t\tsrc.methodExt :\n\t\t\t\tsrc.propExt;\n\t\t}\n\t}\n};\n\n_Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {\n\t_Api.register( pluralName, val );\n\n\t_Api.register( singularName, function () {\n\t\tvar ret = val.apply( this, arguments );\n\n\t\tif ( ret === this ) {\n\t\t\t// Returned item is the API instance that was passed in, return it\n\t\t\treturn this;\n\t\t}\n\t\telse if ( ret instanceof _Api ) {\n\t\t\t// New API instance returned, want the value from the first item\n\t\t\t// in the returned array for the singular result.\n\t\t\treturn ret.length ?\n\t\t\t\tArray.isArray( ret[0] ) ?\n\t\t\t\t\tnew _Api( ret.context, ret[0] ) : // Array results are 'enhanced'\n\t\t\t\t\tret[0] :\n\t\t\t\tundefined;\n\t\t}\n\n\t\t// Non-API return - just fire it back\n\t\treturn ret;\n\t} );\n};\n\n\n/**\n * Selector for HTML tables. Apply the given selector to the give array of\n * DataTables settings objects.\n *\n * @param {string|integer} [selector] jQuery selector string or integer\n * @param  {array} Array of DataTables settings objects to be filtered\n * @return {array}\n * @ignore\n */\nvar __table_selector = function ( selector, a )\n{\n\tif ( Array.isArray(selector) ) {\n\t\treturn $.map( selector, function (item) {\n\t\t\treturn __table_selector(item, a);\n\t\t} );\n\t}\n\n\t// Integer is used to pick out a table by index\n\tif ( typeof selector === 'number' ) {\n\t\treturn [ a[ selector ] ];\n\t}\n\n\t// Perform a jQuery selector on the table nodes\n\tvar nodes = $.map( a, function (el, i) {\n\t\treturn el.nTable;\n\t} );\n\n\treturn $(nodes)\n\t\t.filter( selector )\n\t\t.map( function (i) {\n\t\t\t// Need to translate back from the table node to the settings\n\t\t\tvar idx = $.inArray( this, nodes );\n\t\t\treturn a[ idx ];\n\t\t} )\n\t\t.toArray();\n};\n\n\n\n/**\n * Context selector for the API's context (i.e. the tables the API instance\n * refers to.\n *\n * @name    DataTable.Api#tables\n * @param {string|integer} [selector] Selector to pick which tables the iterator\n *   should operate on. If not given, all tables in the current context are\n *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n *   select multiple tables or as an integer to select a single table.\n * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n */\n_api_register( 'tables()', function ( selector ) {\n\t// A new instance is created if there was a selector specified\n\treturn selector !== undefined && selector !== null ?\n\t\tnew _Api( __table_selector( selector, this.context ) ) :\n\t\tthis;\n} );\n\n\n_api_register( 'table()', function ( selector ) {\n\tvar tables = this.tables( selector );\n\tvar ctx = tables.context;\n\n\t// Truncate to the first matched table\n\treturn ctx.length ?\n\t\tnew _Api( ctx[0] ) :\n\t\ttables;\n} );\n\n\n_api_registerPlural( 'tables().nodes()', 'table().node()' , function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\treturn ctx.nTable;\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'tables().body()', 'table().body()' , function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\treturn ctx.nTBody;\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'tables().header()', 'table().header()' , function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\treturn ctx.nTHead;\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'tables().footer()', 'table().footer()' , function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\treturn ctx.nTFoot;\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'tables().containers()', 'table().container()' , function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\treturn ctx.nTableWrapper;\n\t}, 1 );\n} );\n\n\n\n/**\n * Redraw the tables in the current context.\n */\n_api_register( 'draw()', function ( paging ) {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( paging === 'page' ) {\n\t\t\t_fnDraw( settings );\n\t\t}\n\t\telse {\n\t\t\tif ( typeof paging === 'string' ) {\n\t\t\t\tpaging = paging === 'full-hold' ?\n\t\t\t\t\tfalse :\n\t\t\t\t\ttrue;\n\t\t\t}\n\n\t\t\t_fnReDraw( settings, paging===false );\n\t\t}\n\t} );\n} );\n\n\n\n/**\n * Get the current page index.\n *\n * @return {integer} Current page index (zero based)\n *//**\n * Set the current page.\n *\n * Note that if you attempt to show a page which does not exist, DataTables will\n * not throw an error, but rather reset the paging.\n *\n * @param {integer|string} action The paging action to take. This can be one of:\n *  * `integer` - The page index to jump to\n *  * `string` - An action to take:\n *    * `first` - Jump to first page.\n *    * `next` - Jump to the next page\n *    * `previous` - Jump to previous page\n *    * `last` - Jump to the last page.\n * @returns {DataTables.Api} this\n */\n_api_register( 'page()', function ( action ) {\n\tif ( action === undefined ) {\n\t\treturn this.page.info().page; // not an expensive call\n\t}\n\n\t// else, have an action to take on all tables\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnPageChange( settings, action );\n\t} );\n} );\n\n\n/**\n * Paging information for the first table in the current context.\n *\n * If you require paging information for another table, use the `table()` method\n * with a suitable selector.\n *\n * @return {object} Object with the following properties set:\n *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n *  * `pages` - Total number of pages\n *  * `start` - Display index for the first record shown on the current page\n *  * `end` - Display index for the last record shown on the current page\n *  * `length` - Display length (number of records). Note that generally `start\n *    + length = end`, but this is not always true, for example if there are\n *    only 2 records to show on the final page, with a length of 10.\n *  * `recordsTotal` - Full data set length\n *  * `recordsDisplay` - Data set length once the current filtering criterion\n *    are applied.\n */\n_api_register( 'page.info()', function ( action ) {\n\tif ( this.context.length === 0 ) {\n\t\treturn undefined;\n\t}\n\n\tvar\n\t\tsettings   = this.context[0],\n\t\tstart      = settings._iDisplayStart,\n\t\tlen        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\tall        = len === -1;\n\n\treturn {\n\t\t\"page\":           all ? 0 : Math.floor( start / len ),\n\t\t\"pages\":          all ? 1 : Math.ceil( visRecords / len ),\n\t\t\"start\":          start,\n\t\t\"end\":            settings.fnDisplayEnd(),\n\t\t\"length\":         len,\n\t\t\"recordsTotal\":   settings.fnRecordsTotal(),\n\t\t\"recordsDisplay\": visRecords,\n\t\t\"serverSide\":     _fnDataSource( settings ) === 'ssp'\n\t};\n} );\n\n\n/**\n * Get the current page length.\n *\n * @return {integer} Current page length. Note `-1` indicates that all records\n *   are to be shown.\n *//**\n * Set the current page length.\n *\n * @param {integer} Page length to set. Use `-1` to show all records.\n * @returns {DataTables.Api} this\n */\n_api_register( 'page.len()', function ( len ) {\n\t// Note that we can't call this function 'length()' because `length`\n\t// is a Javascript property of functions which defines how many arguments\n\t// the function expects.\n\tif ( len === undefined ) {\n\t\treturn this.context.length !== 0 ?\n\t\t\tthis.context[0]._iDisplayLength :\n\t\t\tundefined;\n\t}\n\n\t// else, set the page length\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnLengthChange( settings, len );\n\t} );\n} );\n\n\n\nvar __reload = function ( settings, holdPosition, callback ) {\n\t// Use the draw event to trigger a callback\n\tif ( callback ) {\n\t\tvar api = new _Api( settings );\n\n\t\tapi.one( 'draw', function () {\n\t\t\tcallback( api.ajax.json() );\n\t\t} );\n\t}\n\n\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t_fnReDraw( settings, holdPosition );\n\t}\n\telse {\n\t\t_fnProcessingDisplay( settings, true );\n\n\t\t// Cancel an existing request\n\t\tvar xhr = settings.jqXHR;\n\t\tif ( xhr && xhr.readyState !== 4 ) {\n\t\t\txhr.abort();\n\t\t}\n\n\t\t// Trigger xhr\n\t\t_fnBuildAjax( settings, [], function( json ) {\n\t\t\t_fnClearTable( settings );\n\n\t\t\tvar data = _fnAjaxDataSrc( settings, json );\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t_fnAddData( settings, data[i] );\n\t\t\t}\n\n\t\t\t_fnReDraw( settings, holdPosition );\n\t\t\t_fnProcessingDisplay( settings, false );\n\t\t} );\n\t}\n};\n\n\n/**\n * Get the JSON response from the last Ajax request that DataTables made to the\n * server. Note that this returns the JSON from the first table in the current\n * context.\n *\n * @return {object} JSON received from the server.\n */\n_api_register( 'ajax.json()', function () {\n\tvar ctx = this.context;\n\n\tif ( ctx.length > 0 ) {\n\t\treturn ctx[0].json;\n\t}\n\n\t// else return undefined;\n} );\n\n\n/**\n * Get the data submitted in the last Ajax request\n */\n_api_register( 'ajax.params()', function () {\n\tvar ctx = this.context;\n\n\tif ( ctx.length > 0 ) {\n\t\treturn ctx[0].oAjaxData;\n\t}\n\n\t// else return undefined;\n} );\n\n\n/**\n * Reload tables from the Ajax data source. Note that this function will\n * automatically re-draw the table when the remote data has been loaded.\n *\n * @param {boolean} [reset=true] Reset (default) or hold the current paging\n *   position. A full re-sort and re-filter is performed when this method is\n *   called, which is why the pagination reset is the default action.\n * @returns {DataTables.Api} this\n */\n_api_register( 'ajax.reload()', function ( callback, resetPaging ) {\n\treturn this.iterator( 'table', function (settings) {\n\t\t__reload( settings, resetPaging===false, callback );\n\t} );\n} );\n\n\n/**\n * Get the current Ajax URL. Note that this returns the URL from the first\n * table in the current context.\n *\n * @return {string} Current Ajax source URL\n *//**\n * Set the Ajax URL. Note that this will set the URL for all tables in the\n * current context.\n *\n * @param {string} url URL to set.\n * @returns {DataTables.Api} this\n */\n_api_register( 'ajax.url()', function ( url ) {\n\tvar ctx = this.context;\n\n\tif ( url === undefined ) {\n\t\t// get\n\t\tif ( ctx.length === 0 ) {\n\t\t\treturn undefined;\n\t\t}\n\t\tctx = ctx[0];\n\n\t\treturn ctx.ajax ?\n\t\t\t$.isPlainObject( ctx.ajax ) ?\n\t\t\t\tctx.ajax.url :\n\t\t\t\tctx.ajax :\n\t\t\tctx.sAjaxSource;\n\t}\n\n\t// set\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( $.isPlainObject( settings.ajax ) ) {\n\t\t\tsettings.ajax.url = url;\n\t\t}\n\t\telse {\n\t\t\tsettings.ajax = url;\n\t\t}\n\t\t// No need to consider sAjaxSource here since DataTables gives priority\n\t\t// to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any\n\t\t// value of `sAjaxSource` redundant.\n\t} );\n} );\n\n\n/**\n * Load data from the newly set Ajax URL. Note that this method is only\n * available when `ajax.url()` is used to set a URL. Additionally, this method\n * has the same effect as calling `ajax.reload()` but is provided for\n * convenience when setting a new URL. Like `ajax.reload()` it will\n * automatically redraw the table once the remote data has been loaded.\n *\n * @returns {DataTables.Api} this\n */\n_api_register( 'ajax.url().load()', function ( callback, resetPaging ) {\n\t// Same as a reload, but makes sense to present it for easy access after a\n\t// url change\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\t__reload( ctx, resetPaging===false, callback );\n\t} );\n} );\n\n\n\n\nvar _selector_run = function ( type, selector, selectFn, settings, opts )\n{\n\tvar\n\t\tout = [], res,\n\t\ta, i, ien, j, jen,\n\t\tselectorType = typeof selector;\n\n\t// Can't just check for isArray here, as an API or jQuery instance might be\n\t// given with their array like look\n\tif ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {\n\t\tselector = [ selector ];\n\t}\n\n\tfor ( i=0, ien=selector.length ; i<ien ; i++ ) {\n\t\t// Only split on simple strings - complex expressions will be jQuery selectors\n\t\ta = selector[i] && selector[i].split && ! selector[i].match(/[\\[\\(:]/) ?\n\t\t\tselector[i].split(',') :\n\t\t\t[ selector[i] ];\n\n\t\tfor ( j=0, jen=a.length ; j<jen ; j++ ) {\n\t\t\tres = selectFn( typeof a[j] === 'string' ? (a[j]).trim() : a[j] );\n\n\t\t\tif ( res && res.length ) {\n\t\t\t\tout = out.concat( res );\n\t\t\t}\n\t\t}\n\t}\n\n\t// selector extensions\n\tvar ext = _ext.selector[ type ];\n\tif ( ext.length ) {\n\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\t\tout = ext[i]( settings, opts, out );\n\t\t}\n\t}\n\n\treturn _unique( out );\n};\n\n\nvar _selector_opts = function ( opts )\n{\n\tif ( ! opts ) {\n\t\topts = {};\n\t}\n\n\t// Backwards compatibility for 1.9- which used the terminology filter rather\n\t// than search\n\tif ( opts.filter && opts.search === undefined ) {\n\t\topts.search = opts.filter;\n\t}\n\n\treturn $.extend( {\n\t\tsearch: 'none',\n\t\torder: 'current',\n\t\tpage: 'all'\n\t}, opts );\n};\n\n\nvar _selector_first = function ( inst )\n{\n\t// Reduce the API instance to the first item found\n\tfor ( var i=0, ien=inst.length ; i<ien ; i++ ) {\n\t\tif ( inst[i].length > 0 ) {\n\t\t\t// Assign the first element to the first item in the instance\n\t\t\t// and truncate the instance and context\n\t\t\tinst[0] = inst[i];\n\t\t\tinst[0].length = 1;\n\t\t\tinst.length = 1;\n\t\t\tinst.context = [ inst.context[i] ];\n\n\t\t\treturn inst;\n\t\t}\n\t}\n\n\t// Not found - return an empty instance\n\tinst.length = 0;\n\treturn inst;\n};\n\n\nvar _selector_row_indexes = function ( settings, opts )\n{\n\tvar\n\t\ti, ien, tmp, a=[],\n\t\tdisplayFiltered = settings.aiDisplay,\n\t\tdisplayMaster = settings.aiDisplayMaster;\n\n\tvar\n\t\tsearch = opts.search,  // none, applied, removed\n\t\torder  = opts.order,   // applied, current, index (original - compatibility with 1.9)\n\t\tpage   = opts.page;    // all, current\n\n\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t// In server-side processing mode, most options are irrelevant since\n\t\t// rows not shown don't exist and the index order is the applied order\n\t\t// Removed is a special case - for consistency just return an empty\n\t\t// array\n\t\treturn search === 'removed' ?\n\t\t\t[] :\n\t\t\t_range( 0, displayMaster.length );\n\t}\n\telse if ( page == 'current' ) {\n\t\t// Current page implies that order=current and filter=applied, since it is\n\t\t// fairly senseless otherwise, regardless of what order and search actually\n\t\t// are\n\t\tfor ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {\n\t\t\ta.push( displayFiltered[i] );\n\t\t}\n\t}\n\telse if ( order == 'current' || order == 'applied' ) {\n\t\tif ( search == 'none') {\n\t\t\ta = displayMaster.slice();\n\t\t}\n\t\telse if ( search == 'applied' ) {\n\t\t\ta = displayFiltered.slice();\n\t\t}\n\t\telse if ( search == 'removed' ) {\n\t\t\t// O(n+m) solution by creating a hash map\n\t\t\tvar displayFilteredMap = {};\n\n\t\t\tfor ( var i=0, ien=displayFiltered.length ; i<ien ; i++ ) {\n\t\t\t\tdisplayFilteredMap[displayFiltered[i]] = null;\n\t\t\t}\n\n\t\t\ta = $.map( displayMaster, function (el) {\n\t\t\t\treturn ! displayFilteredMap.hasOwnProperty(el) ?\n\t\t\t\t\tel :\n\t\t\t\t\tnull;\n\t\t\t} );\n\t\t}\n\t}\n\telse if ( order == 'index' || order == 'original' ) {\n\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\tif ( search == 'none' ) {\n\t\t\t\ta.push( i );\n\t\t\t}\n\t\t\telse { // applied | removed\n\t\t\t\ttmp = $.inArray( i, displayFiltered );\n\n\t\t\t\tif ((tmp === -1 && search == 'removed') ||\n\t\t\t\t\t(tmp >= 0   && search == 'applied') )\n\t\t\t\t{\n\t\t\t\t\ta.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a;\n};\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Rows\n *\n * {}          - no selector - use all available rows\n * {integer}   - row aoData index\n * {node}      - TR node\n * {string}    - jQuery selector to apply to the TR elements\n * {array}     - jQuery array of nodes, or simply an array of TR nodes\n *\n */\nvar __row_selector = function ( settings, selector, opts )\n{\n\tvar rows;\n\tvar run = function ( sel ) {\n\t\tvar selInt = _intVal( sel );\n\t\tvar i, ien;\n\t\tvar aoData = settings.aoData;\n\n\t\t// Short cut - selector is a number and no options provided (default is\n\t\t// all records, so no need to check if the index is in there, since it\n\t\t// must be - dev error if the index doesn't exist).\n\t\tif ( selInt !== null && ! opts ) {\n\t\t\treturn [ selInt ];\n\t\t}\n\n\t\tif ( ! rows ) {\n\t\t\trows = _selector_row_indexes( settings, opts );\n\t\t}\n\n\t\tif ( selInt !== null && $.inArray( selInt, rows ) !== -1 ) {\n\t\t\t// Selector - integer\n\t\t\treturn [ selInt ];\n\t\t}\n\t\telse if ( sel === null || sel === undefined || sel === '' ) {\n\t\t\t// Selector - none\n\t\t\treturn rows;\n\t\t}\n\n\t\t// Selector - function\n\t\tif ( typeof sel === 'function' ) {\n\t\t\treturn $.map( rows, function (idx) {\n\t\t\t\tvar row = aoData[ idx ];\n\t\t\t\treturn sel( idx, row._aData, row.nTr ) ? idx : null;\n\t\t\t} );\n\t\t}\n\n\t\t// Selector - node\n\t\tif ( sel.nodeName ) {\n\t\t\tvar rowIdx = sel._DT_RowIndex;  // Property added by DT for fast lookup\n\t\t\tvar cellIdx = sel._DT_CellIndex;\n\n\t\t\tif ( rowIdx !== undefined ) {\n\t\t\t\t// Make sure that the row is actually still present in the table\n\t\t\t\treturn aoData[ rowIdx ] && aoData[ rowIdx ].nTr === sel ?\n\t\t\t\t\t[ rowIdx ] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\t\telse if ( cellIdx ) {\n\t\t\t\treturn aoData[ cellIdx.row ] && aoData[ cellIdx.row ].nTr === sel.parentNode ?\n\t\t\t\t\t[ cellIdx.row ] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar host = $(sel).closest('*[data-dt-row]');\n\t\t\t\treturn host.length ?\n\t\t\t\t\t[ host.data('dt-row') ] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\t}\n\n\t\t// ID selector. Want to always be able to select rows by id, regardless\n\t\t// of if the tr element has been created or not, so can't rely upon\n\t\t// jQuery here - hence a custom implementation. This does not match\n\t\t// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n\t\t// but to select it using a CSS selector engine (like Sizzle or\n\t\t// querySelect) it would need to need to be escaped for some characters.\n\t\t// DataTables simplifies this for row selectors since you can select\n\t\t// only a row. A # indicates an id any anything that follows is the id -\n\t\t// unescaped.\n\t\tif ( typeof sel === 'string' && sel.charAt(0) === '#' ) {\n\t\t\t// get row index from id\n\t\t\tvar rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];\n\t\t\tif ( rowObj !== undefined ) {\n\t\t\t\treturn [ rowObj.idx ];\n\t\t\t}\n\n\t\t\t// need to fall through to jQuery in case there is DOM id that\n\t\t\t// matches\n\t\t}\n\t\t\n\t\t// Get nodes in the order from the `rows` array with null values removed\n\t\tvar nodes = _removeEmpty(\n\t\t\t_pluck_order( settings.aoData, rows, 'nTr' )\n\t\t);\n\n\t\t// Selector - jQuery selector string, array of nodes or jQuery object/\n\t\t// As jQuery's .filter() allows jQuery objects to be passed in filter,\n\t\t// it also allows arrays, so this will cope with all three options\n\t\treturn $(nodes)\n\t\t\t.filter( sel )\n\t\t\t.map( function () {\n\t\t\t\treturn this._DT_RowIndex;\n\t\t\t} )\n\t\t\t.toArray();\n\t};\n\n\treturn _selector_run( 'row', selector, run, settings, opts );\n};\n\n\n_api_register( 'rows()', function ( selector, opts ) {\n\t// argument shifting\n\tif ( selector === undefined ) {\n\t\tselector = '';\n\t}\n\telse if ( $.isPlainObject( selector ) ) {\n\t\topts = selector;\n\t\tselector = '';\n\t}\n\n\topts = _selector_opts( opts );\n\n\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\treturn __row_selector( settings, selector, opts );\n\t}, 1 );\n\n\t// Want argument shifting here and in __row_selector?\n\tinst.selector.rows = selector;\n\tinst.selector.opts = opts;\n\n\treturn inst;\n} );\n\n_api_register( 'rows().nodes()', function () {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\treturn settings.aoData[ row ].nTr || undefined;\n\t}, 1 );\n} );\n\n_api_register( 'rows().data()', function () {\n\treturn this.iterator( true, 'rows', function ( settings, rows ) {\n\t\treturn _pluck_order( settings.aoData, rows, '_aData' );\n\t}, 1 );\n} );\n\n_api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\tvar r = settings.aoData[ row ];\n\t\treturn type === 'search' ? r._aFilterData : r._aSortData;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t_fnInvalidate( settings, row, src );\n\t} );\n} );\n\n_api_registerPlural( 'rows().indexes()', 'row().index()', function () {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\treturn row;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {\n\tvar a = [];\n\tvar context = this.context;\n\n\t// `iterator` will drop undefined values, but in this case we want them\n\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\tfor ( var j=0, jen=this[i].length ; j<jen ; j++ ) {\n\t\t\tvar id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );\n\t\t\ta.push( (hash === true ? '#' : '' )+ id );\n\t\t}\n\t}\n\n\treturn new _Api( context, a );\n} );\n\n_api_registerPlural( 'rows().remove()', 'row().remove()', function () {\n\tvar that = this;\n\n\tthis.iterator( 'row', function ( settings, row, thatIdx ) {\n\t\tvar data = settings.aoData;\n\t\tvar rowData = data[ row ];\n\t\tvar i, ien, j, jen;\n\t\tvar loopRow, loopCells;\n\n\t\tdata.splice( row, 1 );\n\n\t\t// Update the cached indexes\n\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\tloopRow = data[i];\n\t\t\tloopCells = loopRow.anCells;\n\n\t\t\t// Rows\n\t\t\tif ( loopRow.nTr !== null ) {\n\t\t\t\tloopRow.nTr._DT_RowIndex = i;\n\t\t\t}\n\n\t\t\t// Cells\n\t\t\tif ( loopCells !== null ) {\n\t\t\t\tfor ( j=0, jen=loopCells.length ; j<jen ; j++ ) {\n\t\t\t\t\tloopCells[j]._DT_CellIndex.row = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Delete from the display arrays\n\t\t_fnDeleteIndex( settings.aiDisplayMaster, row );\n\t\t_fnDeleteIndex( settings.aiDisplay, row );\n\t\t_fnDeleteIndex( that[ thatIdx ], row, false ); // maintain local indexes\n\n\t\t// For server-side processing tables - subtract the deleted row from the count\n\t\tif ( settings._iRecordsDisplay > 0 ) {\n\t\t\tsettings._iRecordsDisplay--;\n\t\t}\n\n\t\t// Check for an 'overflow' they case for displaying the table\n\t\t_fnLengthOverflow( settings );\n\n\t\t// Remove the row's ID reference if there is one\n\t\tvar id = settings.rowIdFn( rowData._aData );\n\t\tif ( id !== undefined ) {\n\t\t\tdelete settings.aIds[ id ];\n\t\t}\n\t} );\n\n\tthis.iterator( 'table', function ( settings ) {\n\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\tsettings.aoData[i].idx = i;\n\t\t}\n\t} );\n\n\treturn this;\n} );\n\n\n_api_register( 'rows.add()', function ( rows ) {\n\tvar newRows = this.iterator( 'table', function ( settings ) {\n\t\t\tvar row, i, ien;\n\t\t\tvar out = [];\n\n\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\trow = rows[i];\n\n\t\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\t\t\tout.push( _fnAddTr( settings, row )[0] );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout.push( _fnAddData( settings, row ) );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn out;\n\t\t}, 1 );\n\n\t// Return an Api.rows() extended instance, so rows().nodes() etc can be used\n\tvar modRows = this.rows( -1 );\n\tmodRows.pop();\n\t$.merge( modRows, newRows );\n\n\treturn modRows;\n} );\n\n\n\n\n\n/**\n *\n */\n_api_register( 'row()', function ( selector, opts ) {\n\treturn _selector_first( this.rows( selector, opts ) );\n} );\n\n\n_api_register( 'row().data()', function ( data ) {\n\tvar ctx = this.context;\n\n\tif ( data === undefined ) {\n\t\t// Get\n\t\treturn ctx.length && this.length ?\n\t\t\tctx[0].aoData[ this[0] ]._aData :\n\t\t\tundefined;\n\t}\n\n\t// Set\n\tvar row = ctx[0].aoData[ this[0] ];\n\trow._aData = data;\n\n\t// If the DOM has an id, and the data source is an array\n\tif ( Array.isArray( data ) && row.nTr && row.nTr.id ) {\n\t\t_fnSetObjectDataFn( ctx[0].rowId )( data, row.nTr.id );\n\t}\n\n\t// Automatically invalidate\n\t_fnInvalidate( ctx[0], this[0], 'data' );\n\n\treturn this;\n} );\n\n\n_api_register( 'row().node()', function () {\n\tvar ctx = this.context;\n\n\treturn ctx.length && this.length ?\n\t\tctx[0].aoData[ this[0] ].nTr || null :\n\t\tnull;\n} );\n\n\n_api_register( 'row.add()', function ( row ) {\n\t// Allow a jQuery object to be passed in - only a single row is added from\n\t// it though - the first element in the set\n\tif ( row instanceof $ && row.length ) {\n\t\trow = row[0];\n\t}\n\n\tvar rows = this.iterator( 'table', function ( settings ) {\n\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\treturn _fnAddTr( settings, row )[0];\n\t\t}\n\t\treturn _fnAddData( settings, row );\n\t} );\n\n\t// Return an Api.rows() extended instance, with the newly added row selected\n\treturn this.row( rows[0] );\n} );\n\n\n$(document).on('plugin-init.dt', function (e, context) {\n\tvar api = new _Api( context );\n\tvar namespace = 'on-plugin-init';\n\tvar stateSaveParamsEvent = 'stateSaveParams.' + namespace;\n\tvar destroyEvent = 'destroy. ' + namespace;\n\n\tapi.on( stateSaveParamsEvent, function ( e, settings, d ) {\n\t\t// This could be more compact with the API, but it is a lot faster as a simple\n\t\t// internal loop\n\t\tvar idFn = settings.rowIdFn;\n\t\tvar data = settings.aoData;\n\t\tvar ids = [];\n\n\t\tfor (var i=0 ; i<data.length ; i++) {\n\t\t\tif (data[i]._detailsShow) {\n\t\t\t\tids.push( '#' + idFn(data[i]._aData) );\n\t\t\t}\n\t\t}\n\n\t\td.childRows = ids;\n\t});\n\n\tapi.on( destroyEvent, function () {\n\t\tapi.off(stateSaveParamsEvent + ' ' + destroyEvent);\n\t});\n\n\tvar loaded = api.state.loaded();\n\n\tif ( loaded && loaded.childRows ) {\n\t\tapi\n\t\t\t.rows( $.map(loaded.childRows, function (id){\n\t\t\t\treturn id.replace(/:/g, '\\\\:')\n\t\t\t}) )\n\t\t\t.every( function () {\n\t\t\t\t_fnCallbackFire( context, null, 'requestChild', [ this ] )\n\t\t\t});\n\t}\n});\n\nvar __details_add = function ( ctx, row, data, klass )\n{\n\t// Convert to array of TR elements\n\tvar rows = [];\n\tvar addRow = function ( r, k ) {\n\t\t// Recursion to allow for arrays of jQuery objects\n\t\tif ( Array.isArray( r ) || r instanceof $ ) {\n\t\t\tfor ( var i=0, ien=r.length ; i<ien ; i++ ) {\n\t\t\t\taddRow( r[i], k );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// If we get a TR element, then just add it directly - up to the dev\n\t\t// to add the correct number of columns etc\n\t\tif ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {\n\t\t\trows.push( r );\n\t\t}\n\t\telse {\n\t\t\t// Otherwise create a row with a wrapper\n\t\t\tvar created = $('<tr><td></td></tr>').addClass( k );\n\t\t\t$('td', created)\n\t\t\t\t.addClass( k )\n\t\t\t\t.html( r )\n\t\t\t\t[0].colSpan = _fnVisbleColumns( ctx );\n\n\t\t\trows.push( created[0] );\n\t\t}\n\t};\n\n\taddRow( data, klass );\n\n\tif ( row._details ) {\n\t\trow._details.detach();\n\t}\n\n\trow._details = $(rows);\n\n\t// If the children were already shown, that state should be retained\n\tif ( row._detailsShow ) {\n\t\trow._details.insertAfter( row.nTr );\n\t}\n};\n\n\n// Make state saving of child row details async to allow them to be batch processed\nvar __details_state = DataTable.util.throttle(\n\tfunction (ctx) {\n\t\t_fnSaveState( ctx[0] )\n\t},\n\t500\n);\n\n\nvar __details_remove = function ( api, idx )\n{\n\tvar ctx = api.context;\n\n\tif ( ctx.length ) {\n\t\tvar row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];\n\n\t\tif ( row && row._details ) {\n\t\t\trow._details.remove();\n\n\t\t\trow._detailsShow = undefined;\n\t\t\trow._details = undefined;\n\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\n\t\t\t__details_state( ctx );\n\t\t}\n\t}\n};\n\n\nvar __details_display = function ( api, show ) {\n\tvar ctx = api.context;\n\n\tif ( ctx.length && api.length ) {\n\t\tvar row = ctx[0].aoData[ api[0] ];\n\n\t\tif ( row._details ) {\n\t\t\trow._detailsShow = show;\n\n\t\t\tif ( show ) {\n\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t$( row.nTr ).addClass( 'dt-hasChild' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\trow._details.detach();\n\t\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\n\t\t\t}\n\n\t\t\t_fnCallbackFire( ctx[0], null, 'childRow', [ show, api.row( api[0] ) ] )\n\n\t\t\t__details_events( ctx[0] );\n\t\t\t__details_state( ctx );\n\t\t}\n\t}\n};\n\n\nvar __details_events = function ( settings )\n{\n\tvar api = new _Api( settings );\n\tvar namespace = '.dt.DT_details';\n\tvar drawEvent = 'draw'+namespace;\n\tvar colvisEvent = 'column-sizing'+namespace;\n\tvar destroyEvent = 'destroy'+namespace;\n\tvar data = settings.aoData;\n\n\tapi.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );\n\n\tif ( _pluck( data, '_details' ).length > 0 ) {\n\t\t// On each draw, insert the required elements into the document\n\t\tapi.on( drawEvent, function ( e, ctx ) {\n\t\t\tif ( settings !== ctx ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tapi.rows( {page:'current'} ).eq(0).each( function (idx) {\n\t\t\t\t// Internal data grab\n\t\t\t\tvar row = data[ idx ];\n\n\t\t\t\tif ( row._detailsShow ) {\n\t\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\t// Column visibility change - update the colspan\n\t\tapi.on( colvisEvent, function ( e, ctx, idx, vis ) {\n\t\t\tif ( settings !== ctx ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Update the colspan for the details rows (note, only if it already has\n\t\t\t// a colspan)\n\t\t\tvar row, visible = _fnVisbleColumns( ctx );\n\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\trow = data[i];\n\n\t\t\t\tif ( row._details ) {\n\t\t\t\t\trow._details.children('td[colspan]').attr('colspan', visible );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t// Table destroyed - nuke any child rows\n\t\tapi.on( destroyEvent, function ( e, ctx ) {\n\t\t\tif ( settings !== ctx ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\tif ( data[i]._details ) {\n\t\t\t\t\t__details_remove( api, i );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n};\n\n// Strings for the method names to help minification\nvar _emp = '';\nvar _child_obj = _emp+'row().child';\nvar _child_mth = _child_obj+'()';\n\n// data can be:\n//  tr\n//  string\n//  jQuery or array of any of the above\n_api_register( _child_mth, function ( data, klass ) {\n\tvar ctx = this.context;\n\n\tif ( data === undefined ) {\n\t\t// get\n\t\treturn ctx.length && this.length ?\n\t\t\tctx[0].aoData[ this[0] ]._details :\n\t\t\tundefined;\n\t}\n\telse if ( data === true ) {\n\t\t// show\n\t\tthis.child.show();\n\t}\n\telse if ( data === false ) {\n\t\t// remove\n\t\t__details_remove( this );\n\t}\n\telse if ( ctx.length && this.length ) {\n\t\t// set\n\t\t__details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );\n\t}\n\n\treturn this;\n} );\n\n\n_api_register( [\n\t_child_obj+'.show()',\n\t_child_mth+'.show()' // only when `child()` was called with parameters (without\n], function ( show ) {   // it returns an object and this method is not executed)\n\t__details_display( this, true );\n\treturn this;\n} );\n\n\n_api_register( [\n\t_child_obj+'.hide()',\n\t_child_mth+'.hide()' // only when `child()` was called with parameters (without\n], function () {         // it returns an object and this method is not executed)\n\t__details_display( this, false );\n\treturn this;\n} );\n\n\n_api_register( [\n\t_child_obj+'.remove()',\n\t_child_mth+'.remove()' // only when `child()` was called with parameters (without\n], function () {           // it returns an object and this method is not executed)\n\t__details_remove( this );\n\treturn this;\n} );\n\n\n_api_register( _child_obj+'.isShown()', function () {\n\tvar ctx = this.context;\n\n\tif ( ctx.length && this.length ) {\n\t\t// _detailsShown as false or undefined will fall through to return false\n\t\treturn ctx[0].aoData[ this[0] ]._detailsShow || false;\n\t}\n\treturn false;\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Columns\n *\n * {integer}           - column index (>=0 count from left, <0 count from right)\n * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n * \"{string}:name\"     - column name\n * \"{string}\"          - jQuery selector on column header nodes\n *\n */\n\n// can be an array of these items, comma separated list, or an array of comma\n// separated lists\n\nvar __re_column_selector = /^([^:]+):(name|visIdx|visible)$/;\n\n\n// r1 and r2 are redundant - but it means that the parameters match for the\n// iterator callback in columns().data()\nvar __columnData = function ( settings, column, r1, r2, rows ) {\n\tvar a = [];\n\tfor ( var row=0, ien=rows.length ; row<ien ; row++ ) {\n\t\ta.push( _fnGetCellData( settings, rows[row], column ) );\n\t}\n\treturn a;\n};\n\n\nvar __column_selector = function ( settings, selector, opts )\n{\n\tvar\n\t\tcolumns = settings.aoColumns,\n\t\tnames = _pluck( columns, 'sName' ),\n\t\tnodes = _pluck( columns, 'nTh' );\n\n\tvar run = function ( s ) {\n\t\tvar selInt = _intVal( s );\n\n\t\t// Selector - all\n\t\tif ( s === '' ) {\n\t\t\treturn _range( columns.length );\n\t\t}\n\n\t\t// Selector - index\n\t\tif ( selInt !== null ) {\n\t\t\treturn [ selInt >= 0 ?\n\t\t\t\tselInt : // Count from left\n\t\t\t\tcolumns.length + selInt // Count from right (+ because its a negative value)\n\t\t\t];\n\t\t}\n\n\t\t// Selector = function\n\t\tif ( typeof s === 'function' ) {\n\t\t\tvar rows = _selector_row_indexes( settings, opts );\n\n\t\t\treturn $.map( columns, function (col, idx) {\n\t\t\t\treturn s(\n\t\t\t\t\t\tidx,\n\t\t\t\t\t\t__columnData( settings, idx, 0, 0, rows ),\n\t\t\t\t\t\tnodes[ idx ]\n\t\t\t\t\t) ? idx : null;\n\t\t\t} );\n\t\t}\n\n\t\t// jQuery or string selector\n\t\tvar match = typeof s === 'string' ?\n\t\t\ts.match( __re_column_selector ) :\n\t\t\t'';\n\n\t\tif ( match ) {\n\t\t\tswitch( match[2] ) {\n\t\t\t\tcase 'visIdx':\n\t\t\t\tcase 'visible':\n\t\t\t\t\tvar idx = parseInt( match[1], 10 );\n\t\t\t\t\t// Visible index given, convert to column index\n\t\t\t\t\tif ( idx < 0 ) {\n\t\t\t\t\t\t// Counting from the right\n\t\t\t\t\t\tvar visColumns = $.map( columns, function (col,i) {\n\t\t\t\t\t\t\treturn col.bVisible ? i : null;\n\t\t\t\t\t\t} );\n\t\t\t\t\t\treturn [ visColumns[ visColumns.length + idx ] ];\n\t\t\t\t\t}\n\t\t\t\t\t// Counting from the left\n\t\t\t\t\treturn [ _fnVisibleToColumnIndex( settings, idx ) ];\n\n\t\t\t\tcase 'name':\n\t\t\t\t\t// match by name. `names` is column index complete and in order\n\t\t\t\t\treturn $.map( names, function (name, i) {\n\t\t\t\t\t\treturn name === match[1] ? i : null;\n\t\t\t\t\t} );\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\n\t\t// Cell in the table body\n\t\tif ( s.nodeName && s._DT_CellIndex ) {\n\t\t\treturn [ s._DT_CellIndex.column ];\n\t\t}\n\n\t\t// jQuery selector on the TH elements for the columns\n\t\tvar jqResult = $( nodes )\n\t\t\t.filter( s )\n\t\t\t.map( function () {\n\t\t\t\treturn $.inArray( this, nodes ); // `nodes` is column index complete and in order\n\t\t\t} )\n\t\t\t.toArray();\n\n\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\treturn jqResult;\n\t\t}\n\n\t\t// Otherwise a node which might have a `dt-column` data attribute, or be\n\t\t// a child or such an element\n\t\tvar host = $(s).closest('*[data-dt-column]');\n\t\treturn host.length ?\n\t\t\t[ host.data('dt-column') ] :\n\t\t\t[];\n\t};\n\n\treturn _selector_run( 'column', selector, run, settings, opts );\n};\n\n\nvar __setColumnVis = function ( settings, column, vis ) {\n\tvar\n\t\tcols = settings.aoColumns,\n\t\tcol  = cols[ column ],\n\t\tdata = settings.aoData,\n\t\trow, cells, i, ien, tr;\n\n\t// Get\n\tif ( vis === undefined ) {\n\t\treturn col.bVisible;\n\t}\n\n\t// Set\n\t// No change\n\tif ( col.bVisible === vis ) {\n\t\treturn;\n\t}\n\n\tif ( vis ) {\n\t\t// Insert column\n\t\t// Need to decide if we should use appendChild or insertBefore\n\t\tvar insertBefore = $.inArray( true, _pluck(cols, 'bVisible'), column+1 );\n\n\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\ttr = data[i].nTr;\n\t\t\tcells = data[i].anCells;\n\n\t\t\tif ( tr ) {\n\t\t\t\t// insertBefore can act like appendChild if 2nd arg is null\n\t\t\t\ttr.insertBefore( cells[ column ], cells[ insertBefore ] || null );\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\t// Remove column\n\t\t$( _pluck( settings.aoData, 'anCells', column ) ).detach();\n\t}\n\n\t// Common actions\n\tcol.bVisible = vis;\n};\n\n\n_api_register( 'columns()', function ( selector, opts ) {\n\t// argument shifting\n\tif ( selector === undefined ) {\n\t\tselector = '';\n\t}\n\telse if ( $.isPlainObject( selector ) ) {\n\t\topts = selector;\n\t\tselector = '';\n\t}\n\n\topts = _selector_opts( opts );\n\n\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\treturn __column_selector( settings, selector, opts );\n\t}, 1 );\n\n\t// Want argument shifting here and in _row_selector?\n\tinst.selector.cols = selector;\n\tinst.selector.opts = opts;\n\n\treturn inst;\n} );\n\n_api_registerPlural( 'columns().header()', 'column().header()', function ( selector, opts ) {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn settings.aoColumns[column].nTh;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().footer()', 'column().footer()', function ( selector, opts ) {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn settings.aoColumns[column].nTf;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().data()', 'column().data()', function () {\n\treturn this.iterator( 'column-rows', __columnData, 1 );\n} );\n\n_api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn settings.aoColumns[column].mData;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\treturn _pluck_order( settings.aoData, rows,\n\t\t\ttype === 'search' ? '_aFilterData' : '_aSortData', column\n\t\t);\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\treturn _pluck_order( settings.aoData, rows, 'anCells', column ) ;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {\n\tvar that = this;\n\tvar ret = this.iterator( 'column', function ( settings, column ) {\n\t\tif ( vis === undefined ) {\n\t\t\treturn settings.aoColumns[ column ].bVisible;\n\t\t} // else\n\t\t__setColumnVis( settings, column, vis );\n\t} );\n\n\t// Group the column visibility changes\n\tif ( vis !== undefined ) {\n\t\tthis.iterator( 'table', function ( settings ) {\n\t\t\t// Redraw the header after changes\n\t\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t\t_fnDrawHead( settings, settings.aoFooter );\n\t\n\t\t\t// Update colspan for no records display. Child rows and extensions will use their own\n\t\t\t// listeners to do this - only need to update the empty table item here\n\t\t\tif ( ! settings.aiDisplay.length ) {\n\t\t\t\t$(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));\n\t\t\t}\n\t\n\t\t\t_fnSaveState( settings );\n\n\t\t\t// Second loop once the first is done for events\n\t\t\tthat.iterator( 'column', function ( settings, column ) {\n\t\t\t\t_fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, calc] );\n\t\t\t} );\n\n\t\t\tif ( calc === undefined || calc ) {\n\t\t\t\tthat.columns.adjust();\n\t\t\t}\n\t\t});\n\t}\n\n\treturn ret;\n} );\n\n_api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn type === 'visible' ?\n\t\t\t_fnColumnIndexToVisible( settings, column ) :\n\t\t\tcolumn;\n\t}, 1 );\n} );\n\n_api_register( 'columns.adjust()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnAdjustColumnSizing( settings );\n\t}, 1 );\n} );\n\n_api_register( 'column.index()', function ( type, idx ) {\n\tif ( this.context.length !== 0 ) {\n\t\tvar ctx = this.context[0];\n\n\t\tif ( type === 'fromVisible' || type === 'toData' ) {\n\t\t\treturn _fnVisibleToColumnIndex( ctx, idx );\n\t\t}\n\t\telse if ( type === 'fromData' || type === 'toVisible' ) {\n\t\t\treturn _fnColumnIndexToVisible( ctx, idx );\n\t\t}\n\t}\n} );\n\n_api_register( 'column()', function ( selector, opts ) {\n\treturn _selector_first( this.columns( selector, opts ) );\n} );\n\nvar __cell_selector = function ( settings, selector, opts )\n{\n\tvar data = settings.aoData;\n\tvar rows = _selector_row_indexes( settings, opts );\n\tvar cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );\n\tvar allCells = $(_flatten( [], cells ));\n\tvar row;\n\tvar columns = settings.aoColumns.length;\n\tvar a, i, ien, j, o, host;\n\n\tvar run = function ( s ) {\n\t\tvar fnSelector = typeof s === 'function';\n\n\t\tif ( s === null || s === undefined || fnSelector ) {\n\t\t\t// All cells and function selectors\n\t\t\ta = [];\n\n\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\trow = rows[i];\n\n\t\t\t\tfor ( j=0 ; j<columns ; j++ ) {\n\t\t\t\t\to = {\n\t\t\t\t\t\trow: row,\n\t\t\t\t\t\tcolumn: j\n\t\t\t\t\t};\n\n\t\t\t\t\tif ( fnSelector ) {\n\t\t\t\t\t\t// Selector - function\n\t\t\t\t\t\thost = data[ row ];\n\n\t\t\t\t\t\tif ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {\n\t\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Selector - all\n\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\t// Selector - index\n\t\tif ( $.isPlainObject( s ) ) {\n\t\t\t// Valid cell index and its in the array of selectable rows\n\t\t\treturn s.column !== undefined && s.row !== undefined && $.inArray( s.row, rows ) !== -1 ?\n\t\t\t\t[s] :\n\t\t\t\t[];\n\t\t}\n\n\t\t// Selector - jQuery filtered cells\n\t\tvar jqResult = allCells\n\t\t\t.filter( s )\n\t\t\t.map( function (i, el) {\n\t\t\t\treturn { // use a new object, in case someone changes the values\n\t\t\t\t\trow:    el._DT_CellIndex.row,\n\t\t\t\t\tcolumn: el._DT_CellIndex.column\n \t\t\t\t};\n\t\t\t} )\n\t\t\t.toArray();\n\n\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\treturn jqResult;\n\t\t}\n\n\t\t// Otherwise the selector is a node, and there is one last option - the\n\t\t// element might be a child of an element which has dt-row and dt-column\n\t\t// data attributes\n\t\thost = $(s).closest('*[data-dt-row]');\n\t\treturn host.length ?\n\t\t\t[ {\n\t\t\t\trow: host.data('dt-row'),\n\t\t\t\tcolumn: host.data('dt-column')\n\t\t\t} ] :\n\t\t\t[];\n\t};\n\n\treturn _selector_run( 'cell', selector, run, settings, opts );\n};\n\n\n\n\n_api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {\n\t// Argument shifting\n\tif ( $.isPlainObject( rowSelector ) ) {\n\t\t// Indexes\n\t\tif ( rowSelector.row === undefined ) {\n\t\t\t// Selector options in first parameter\n\t\t\topts = rowSelector;\n\t\t\trowSelector = null;\n\t\t}\n\t\telse {\n\t\t\t// Cell index objects in first parameter\n\t\t\topts = columnSelector;\n\t\t\tcolumnSelector = null;\n\t\t}\n\t}\n\tif ( $.isPlainObject( columnSelector ) ) {\n\t\topts = columnSelector;\n\t\tcolumnSelector = null;\n\t}\n\n\t// Cell selector\n\tif ( columnSelector === null || columnSelector === undefined ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\treturn __cell_selector( settings, rowSelector, _selector_opts( opts ) );\n\t\t} );\n\t}\n\n\t// The default built in options need to apply to row and columns\n\tvar internalOpts = opts ? {\n\t\tpage: opts.page,\n\t\torder: opts.order,\n\t\tsearch: opts.search\n\t} : {};\n\n\t// Row + column selector\n\tvar columns = this.columns( columnSelector, internalOpts );\n\tvar rows = this.rows( rowSelector, internalOpts );\n\tvar i, ien, j, jen;\n\n\tvar cellsNoOpts = this.iterator( 'table', function ( settings, idx ) {\n\t\tvar a = [];\n\n\t\tfor ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {\n\t\t\tfor ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {\n\t\t\t\ta.push( {\n\t\t\t\t\trow:    rows[idx][i],\n\t\t\t\t\tcolumn: columns[idx][j]\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\treturn a;\n\t}, 1 );\n\n\t// There is currently only one extension which uses a cell selector extension\n\t// It is a _major_ performance drag to run this if it isn't needed, so this is\n\t// an extension specific check at the moment\n\tvar cells = opts && opts.selected ?\n\t\tthis.cells( cellsNoOpts, opts ) :\n\t\tcellsNoOpts;\n\n\t$.extend( cells.selector, {\n\t\tcols: columnSelector,\n\t\trows: rowSelector,\n\t\topts: opts\n\t} );\n\n\treturn cells;\n} );\n\n\n_api_registerPlural( 'cells().nodes()', 'cell().node()', function () {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\tvar data = settings.aoData[ row ];\n\n\t\treturn data && data.anCells ?\n\t\t\tdata.anCells[ column ] :\n\t\t\tundefined;\n\t}, 1 );\n} );\n\n\n_api_register( 'cells().data()', function () {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn _fnGetCellData( settings, row, column );\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {\n\ttype = type === 'search' ? '_aFilterData' : '_aSortData';\n\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn settings.aoData[ row ][ type ][ column ];\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn _fnGetCellData( settings, row, column, type );\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().indexes()', 'cell().index()', function () {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn {\n\t\t\trow: row,\n\t\t\tcolumn: column,\n\t\t\tcolumnVisible: _fnColumnIndexToVisible( settings, column )\n\t\t};\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t_fnInvalidate( settings, row, src, column );\n\t} );\n} );\n\n\n\n_api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {\n\treturn _selector_first( this.cells( rowSelector, columnSelector, opts ) );\n} );\n\n\n_api_register( 'cell().data()', function ( data ) {\n\tvar ctx = this.context;\n\tvar cell = this[0];\n\n\tif ( data === undefined ) {\n\t\t// Get\n\t\treturn ctx.length && cell.length ?\n\t\t\t_fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :\n\t\t\tundefined;\n\t}\n\n\t// Set\n\t_fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );\n\t_fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );\n\n\treturn this;\n} );\n\n\n\n/**\n * Get current ordering (sorting) that has been applied to the table.\n *\n * @returns {array} 2D array containing the sorting information for the first\n *   table in the current context. Each element in the parent array represents\n *   a column being sorted upon (i.e. multi-sorting with two columns would have\n *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n *   the column index that the sorting condition applies to, the second is the\n *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n *   index of the sorting order from the `column.sorting` initialisation array.\n *//**\n * Set the ordering for the table.\n *\n * @param {integer} order Column index to sort upon.\n * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n * @returns {DataTables.Api} this\n *//**\n * Set the ordering for the table.\n *\n * @param {array} order 1D array of sorting information to be applied.\n * @param {array} [...] Optional additional sorting conditions\n * @returns {DataTables.Api} this\n *//**\n * Set the ordering for the table.\n *\n * @param {array} order 2D array of sorting information to be applied.\n * @returns {DataTables.Api} this\n */\n_api_register( 'order()', function ( order, dir ) {\n\tvar ctx = this.context;\n\n\tif ( order === undefined ) {\n\t\t// get\n\t\treturn ctx.length !== 0 ?\n\t\t\tctx[0].aaSorting :\n\t\t\tundefined;\n\t}\n\n\t// set\n\tif ( typeof order === 'number' ) {\n\t\t// Simple column / direction passed in\n\t\torder = [ [ order, dir ] ];\n\t}\n\telse if ( order.length && ! Array.isArray( order[0] ) ) {\n\t\t// Arguments passed in (list of 1D arrays)\n\t\torder = Array.prototype.slice.call( arguments );\n\t}\n\t// otherwise a 2D array was passed in\n\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tsettings.aaSorting = order.slice();\n\t} );\n} );\n\n\n/**\n * Attach a sort listener to an element for a given column\n *\n * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n *   listener to. This can take the form of a single DOM node, a jQuery\n *   collection of nodes or a jQuery selector which will identify the node(s).\n * @param {integer} column the column that a click on this node will sort on\n * @param {function} [callback] callback function when sort is run\n * @returns {DataTables.Api} this\n */\n_api_register( 'order.listener()', function ( node, column, callback ) {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnSortAttachListener( settings, node, column, callback );\n\t} );\n} );\n\n\n_api_register( 'order.fixed()', function ( set ) {\n\tif ( ! set ) {\n\t\tvar ctx = this.context;\n\t\tvar fixed = ctx.length ?\n\t\t\tctx[0].aaSortingFixed :\n\t\t\tundefined;\n\n\t\treturn Array.isArray( fixed ) ?\n\t\t\t{ pre: fixed } :\n\t\t\tfixed;\n\t}\n\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tsettings.aaSortingFixed = $.extend( true, {}, set );\n\t} );\n} );\n\n\n// Order by the selected column(s)\n_api_register( [\n\t'columns().order()',\n\t'column().order()'\n], function ( dir ) {\n\tvar that = this;\n\n\treturn this.iterator( 'table', function ( settings, i ) {\n\t\tvar sort = [];\n\n\t\t$.each( that[i], function (j, col) {\n\t\t\tsort.push( [ col, dir ] );\n\t\t} );\n\n\t\tsettings.aaSorting = sort;\n\t} );\n} );\n\n\n\n_api_register( 'search()', function ( input, regex, smart, caseInsen ) {\n\tvar ctx = this.context;\n\n\tif ( input === undefined ) {\n\t\t// get\n\t\treturn ctx.length !== 0 ?\n\t\t\tctx[0].oPreviousSearch.sSearch :\n\t\t\tundefined;\n\t}\n\n\t// set\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\treturn;\n\t\t}\n\n\t\t_fnFilterComplete( settings, $.extend( {}, settings.oPreviousSearch, {\n\t\t\t\"sSearch\": input+\"\",\n\t\t\t\"bRegex\":  regex === null ? false : regex,\n\t\t\t\"bSmart\":  smart === null ? true  : smart,\n\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t} ), 1 );\n\t} );\n} );\n\n\n_api_registerPlural(\n\t'columns().search()',\n\t'column().search()',\n\tfunction ( input, regex, smart, caseInsen ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\tvar preSearch = settings.aoPreSearchCols;\n\n\t\t\tif ( input === undefined ) {\n\t\t\t\t// get\n\t\t\t\treturn preSearch[ column ].sSearch;\n\t\t\t}\n\n\t\t\t// set\n\t\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$.extend( preSearch[ column ], {\n\t\t\t\t\"sSearch\": input+\"\",\n\t\t\t\t\"bRegex\":  regex === null ? false : regex,\n\t\t\t\t\"bSmart\":  smart === null ? true  : smart,\n\t\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t\t} );\n\n\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch, 1 );\n\t\t} );\n\t}\n);\n\n/*\n * State API methods\n */\n\n_api_register( 'state()', function () {\n\treturn this.context.length ?\n\t\tthis.context[0].oSavedState :\n\t\tnull;\n} );\n\n\n_api_register( 'state.clear()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t// Save an empty object\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, {} );\n\t} );\n} );\n\n\n_api_register( 'state.loaded()', function () {\n\treturn this.context.length ?\n\t\tthis.context[0].oLoadedState :\n\t\tnull;\n} );\n\n\n_api_register( 'state.save()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnSaveState( settings );\n\t} );\n} );\n\n\n\n/**\n * Set the jQuery or window object to be used by DataTables\n *\n * @param {*} module Library / container object\n * @param {string} type Library or container type `lib` or `win`.\n */\nDataTable.use = function (module, type) {\n\tif (type === 'lib' || module.fn) {\n\t\t$ = module;\n\t}\n\telse if (type == 'win' || module.document) {\n\t\twindow = module;\n\t\tdocument = module.document;\n\t}\n}\n\n/**\n * CommonJS factory function pass through. This will check if the arguments\n * given are a window object or a jQuery object. If so they are set\n * accordingly.\n * @param {*} root Window\n * @param {*} jq jQUery\n * @returns {boolean} Indicator\n */\nDataTable.factory = function (root, jq) {\n\tvar is = false;\n\n\t// Test if the first parameter is a window object\n\tif (root && root.document) {\n\t\twindow = root;\n\t\tdocument = root.document;\n\t}\n\n\t// Test if the second parameter is a jQuery object\n\tif (jq && jq.fn && jq.fn.jquery) {\n\t\t$ = jq;\n\t\tis = true;\n\t}\n\n\treturn is;\n}\n\n/**\n * Provide a common method for plug-ins to check the version of DataTables being\n * used, in order to ensure compatibility.\n *\n *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n *  @returns {boolean} true if this version of DataTables is greater or equal to\n *    the required version, or false if this version of DataTales is not\n *    suitable\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n */\nDataTable.versionCheck = DataTable.fnVersionCheck = function( version )\n{\n\tvar aThis = DataTable.version.split('.');\n\tvar aThat = version.split('.');\n\tvar iThis, iThat;\n\n\tfor ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {\n\t\tiThis = parseInt( aThis[i], 10 ) || 0;\n\t\tiThat = parseInt( aThat[i], 10 ) || 0;\n\n\t\t// Parts are the same, keep comparing\n\t\tif (iThis === iThat) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Parts are different, return immediately\n\t\treturn iThis > iThat;\n\t}\n\n\treturn true;\n};\n\n\n/**\n * Check if a `<table>` node is a DataTable table already or not.\n *\n *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n *      selector for the table to test. Note that if more than more than one\n *      table is passed on, only the first will be checked\n *  @returns {boolean} true the table given is a DataTable, or false otherwise\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n *      $('#example').dataTable();\n *    }\n */\nDataTable.isDataTable = DataTable.fnIsDataTable = function ( table )\n{\n\tvar t = $(table).get(0);\n\tvar is = false;\n\n\tif ( table instanceof DataTable.Api ) {\n\t\treturn true;\n\t}\n\n\t$.each( DataTable.settings, function (i, o) {\n\t\tvar head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\n\t\tvar foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\n\n\t\tif ( o.nTable === t || head === t || foot === t ) {\n\t\t\tis = true;\n\t\t}\n\t} );\n\n\treturn is;\n};\n\n\n/**\n * Get all DataTable tables that have been initialised - optionally you can\n * select to get only currently visible tables.\n *\n *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n *    or visible tables only.\n *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n *    DataTables\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    $.each( $.fn.dataTable.tables(true), function () {\n *      $(table).DataTable().columns.adjust();\n *    } );\n */\nDataTable.tables = DataTable.fnTables = function ( visible )\n{\n\tvar api = false;\n\n\tif ( $.isPlainObject( visible ) ) {\n\t\tapi = visible.api;\n\t\tvisible = visible.visible;\n\t}\n\n\tvar a = $.map( DataTable.settings, function (o) {\n\t\tif ( !visible || (visible && $(o.nTable).is(':visible')) ) {\n\t\t\treturn o.nTable;\n\t\t}\n\t} );\n\n\treturn api ?\n\t\tnew _Api( a ) :\n\t\ta;\n};\n\n\n/**\n * Convert from camel case parameters to Hungarian notation. This is made public\n * for the extensions to provide the same ability as DataTables core to accept\n * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n * parameters.\n *\n *  @param {object} src The model object which holds all parameters that can be\n *    mapped.\n *  @param {object} user The object to convert from camel case to Hungarian.\n *  @param {boolean} force When set to `true`, properties which already have a\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\n *    won't be.\n */\nDataTable.camelToHungarian = _fnCamelToHungarian;\n\n\n\n/**\n *\n */\n_api_register( '$()', function ( selector, opts ) {\n\tvar\n\t\trows   = this.rows( opts ).nodes(), // Get all rows\n\t\tjqRows = $(rows);\n\n\treturn $( [].concat(\n\t\tjqRows.filter( selector ).toArray(),\n\t\tjqRows.find( selector ).toArray()\n\t) );\n} );\n\n\n// jQuery functions to operate on the tables\n$.each( [ 'on', 'one', 'off' ], function (i, key) {\n\t_api_register( key+'()', function ( /* event, handler */ ) {\n\t\tvar args = Array.prototype.slice.call(arguments);\n\n\t\t// Add the `dt` namespace automatically if it isn't already present\n\t\targs[0] = $.map( args[0].split( /\\s/ ), function ( e ) {\n\t\t\treturn ! e.match(/\\.dt\\b/) ?\n\t\t\t\te+'.dt' :\n\t\t\t\te;\n\t\t\t} ).join( ' ' );\n\n\t\tvar inst = $( this.tables().nodes() );\n\t\tinst[key].apply( inst, args );\n\t\treturn this;\n\t} );\n} );\n\n\n_api_register( 'clear()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnClearTable( settings );\n\t} );\n} );\n\n\n_api_register( 'settings()', function () {\n\treturn new _Api( this.context, this.context );\n} );\n\n\n_api_register( 'init()', function () {\n\tvar ctx = this.context;\n\treturn ctx.length ? ctx[0].oInit : null;\n} );\n\n\n_api_register( 'data()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\treturn _pluck( settings.aoData, '_aData' );\n\t} ).flatten();\n} );\n\n\n_api_register( 'destroy()', function ( remove ) {\n\tremove = remove || false;\n\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tvar classes   = settings.oClasses;\n\t\tvar table     = settings.nTable;\n\t\tvar tbody     = settings.nTBody;\n\t\tvar thead     = settings.nTHead;\n\t\tvar tfoot     = settings.nTFoot;\n\t\tvar jqTable   = $(table);\n\t\tvar jqTbody   = $(tbody);\n\t\tvar jqWrapper = $(settings.nTableWrapper);\n\t\tvar rows      = $.map( settings.aoData, function (r) { return r.nTr; } );\n\t\tvar i, ien;\n\n\t\t// Flag to note that the table is currently being destroyed - no action\n\t\t// should be taken\n\t\tsettings.bDestroying = true;\n\n\t\t// Fire off the destroy callbacks for plug-ins etc\n\t\t_fnCallbackFire( settings, \"aoDestroyCallback\", \"destroy\", [settings] );\n\n\t\t// If not being removed from the document, make all columns visible\n\t\tif ( ! remove ) {\n\t\t\tnew _Api( settings ).columns().visible( true );\n\t\t}\n\n\t\t// Blitz all `DT` namespaced events (these are internal events, the\n\t\t// lowercase, `dt` events are user subscribed and they are responsible\n\t\t// for removing them\n\t\tjqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\n\t\t$(window).off('.DT-'+settings.sInstance);\n\n\t\t// When scrolling we had to break the table up - restore it\n\t\tif ( table != thead.parentNode ) {\n\t\t\tjqTable.children('thead').detach();\n\t\t\tjqTable.append( thead );\n\t\t}\n\n\t\tif ( tfoot && table != tfoot.parentNode ) {\n\t\t\tjqTable.children('tfoot').detach();\n\t\t\tjqTable.append( tfoot );\n\t\t}\n\n\t\tsettings.aaSorting = [];\n\t\tsettings.aaSortingFixed = [];\n\t\t_fnSortingClasses( settings );\n\n\t\t$( rows ).removeClass( settings.asStripeClasses.join(' ') );\n\n\t\t$('th, td', thead).removeClass( classes.sSortable+' '+\n\t\t\tclasses.sSortableAsc+' '+classes.sSortableDesc+' '+classes.sSortableNone\n\t\t);\n\n\t\t// Add the TR elements back into the table in their original order\n\t\tjqTbody.children().detach();\n\t\tjqTbody.append( rows );\n\n\t\tvar orig = settings.nTableWrapper.parentNode;\n\n\t\t// Remove the DataTables generated nodes, events and classes\n\t\tvar removedMethod = remove ? 'remove' : 'detach';\n\t\tjqTable[ removedMethod ]();\n\t\tjqWrapper[ removedMethod ]();\n\n\t\t// If we need to reattach the table to the document\n\t\tif ( ! remove && orig ) {\n\t\t\t// insertBefore acts like appendChild if !arg[1]\n\t\t\torig.insertBefore( table, settings.nTableReinsertBefore );\n\n\t\t\t// Restore the width of the original table - was read from the style property,\n\t\t\t// so we can restore directly to that\n\t\t\tjqTable\n\t\t\t\t.css( 'width', settings.sDestroyWidth )\n\t\t\t\t.removeClass( classes.sTable );\n\n\t\t\t// If the were originally stripe classes - then we add them back here.\n\t\t\t// Note this is not fool proof (for example if not all rows had stripe\n\t\t\t// classes - but it's a good effort without getting carried away\n\t\t\tien = settings.asDestroyStripes.length;\n\n\t\t\tif ( ien ) {\n\t\t\t\tjqTbody.children().each( function (i) {\n\t\t\t\t\t$(this).addClass( settings.asDestroyStripes[i % ien] );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\t/* Remove the settings object from the settings array */\n\t\tvar idx = $.inArray( settings, DataTable.settings );\n\t\tif ( idx !== -1 ) {\n\t\t\tDataTable.settings.splice( idx, 1 );\n\t\t}\n\t} );\n} );\n\n\n// Add the `every()` method for rows, columns and cells in a compact form\n$.each( [ 'column', 'row', 'cell' ], function ( i, type ) {\n\t_api_register( type+'s().every()', function ( fn ) {\n\t\tvar opts = this.selector.opts;\n\t\tvar api = this;\n\n\t\treturn this.iterator( type, function ( settings, arg1, arg2, arg3, arg4 ) {\n\t\t\t// Rows and columns:\n\t\t\t//  arg1 - index\n\t\t\t//  arg2 - table counter\n\t\t\t//  arg3 - loop counter\n\t\t\t//  arg4 - undefined\n\t\t\t// Cells:\n\t\t\t//  arg1 - row index\n\t\t\t//  arg2 - column index\n\t\t\t//  arg3 - table counter\n\t\t\t//  arg4 - loop counter\n\t\t\tfn.call(\n\t\t\t\tapi[ type ](\n\t\t\t\t\targ1,\n\t\t\t\t\ttype==='cell' ? arg2 : opts,\n\t\t\t\t\ttype==='cell' ? opts : undefined\n\t\t\t\t),\n\t\t\t\targ1, arg2, arg3, arg4\n\t\t\t);\n\t\t} );\n\t} );\n} );\n\n\n// i18n method for extensions to be able to use the language object from the\n// DataTable\n_api_register( 'i18n()', function ( token, def, plural ) {\n\tvar ctx = this.context[0];\n\tvar resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );\n\n\tif ( resolved === undefined ) {\n\t\tresolved = def;\n\t}\n\n\tif ( plural !== undefined && $.isPlainObject( resolved ) ) {\n\t\tresolved = resolved[ plural ] !== undefined ?\n\t\t\tresolved[ plural ] :\n\t\t\tresolved._;\n\t}\n\n\treturn resolved.replace( '%d', plural ); // nb: plural might be undefined,\n} );\n/**\n * Version string for plug-ins to check compatibility. Allowed format is\n * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n * only for non-release builds. See http://semver.org/ for more information.\n *  @member\n *  @type string\n *  @default Version number\n */\nDataTable.version = \"1.13.4\";\n\n/**\n * Private data store, containing all of the settings objects that are\n * created for the tables on a given page.\n *\n * Note that the `DataTable.settings` object is aliased to\n * `jQuery.fn.dataTableExt` through which it may be accessed and\n * manipulated, or `jQuery.fn.dataTable.settings`.\n *  @member\n *  @type array\n *  @default []\n *  @private\n */\nDataTable.settings = [];\n\n/**\n * Object models container, for the various models that DataTables has\n * available to it. These models define the objects that are used to hold\n * the active state and configuration of the table.\n *  @namespace\n */\nDataTable.models = {};\n\n\n\n/**\n * Template object for the way in which DataTables holds information about\n * search information for the global filter and individual column filters.\n *  @namespace\n */\nDataTable.models.oSearch = {\n\t/**\n\t * Flag to indicate if the filtering should be case insensitive or not\n\t *  @type boolean\n\t *  @default true\n\t */\n\t\"bCaseInsensitive\": true,\n\n\t/**\n\t * Applied search term\n\t *  @type string\n\t *  @default <i>Empty string</i>\n\t */\n\t\"sSearch\": \"\",\n\n\t/**\n\t * Flag to indicate if the search term should be interpreted as a\n\t * regular expression (true) or not (false) and therefore and special\n\t * regex characters escaped.\n\t *  @type boolean\n\t *  @default false\n\t */\n\t\"bRegex\": false,\n\n\t/**\n\t * Flag to indicate if DataTables is to use its smart filtering or not.\n\t *  @type boolean\n\t *  @default true\n\t */\n\t\"bSmart\": true,\n\n\t/**\n\t * Flag to indicate if DataTables should only trigger a search when\n\t * the return key is pressed.\n\t *  @type boolean\n\t *  @default false\n\t */\n\t\"return\": false\n};\n\n\n\n\n/**\n * Template object for the way in which DataTables holds information about\n * each individual row. This is the object format used for the settings\n * aoData array.\n *  @namespace\n */\nDataTable.models.oRow = {\n\t/**\n\t * TR element for the row\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTr\": null,\n\n\t/**\n\t * Array of TD elements for each row. This is null until the row has been\n\t * created.\n\t *  @type array nodes\n\t *  @default []\n\t */\n\t\"anCells\": null,\n\n\t/**\n\t * Data object from the original data source for the row. This is either\n\t * an array if using the traditional form of DataTables, or an object if\n\t * using mData options. The exact type will depend on the passed in\n\t * data from the data source, or will be an array if using DOM a data\n\t * source.\n\t *  @type array|object\n\t *  @default []\n\t */\n\t\"_aData\": [],\n\n\t/**\n\t * Sorting data cache - this array is ostensibly the same length as the\n\t * number of columns (although each index is generated only as it is\n\t * needed), and holds the data that is used for sorting each column in the\n\t * row. We do this cache generation at the start of the sort in order that\n\t * the formatting of the sort data need be done only once for each cell\n\t * per sort. This array should not be read from or written to by anything\n\t * other than the master sorting methods.\n\t *  @type array\n\t *  @default null\n\t *  @private\n\t */\n\t\"_aSortData\": null,\n\n\t/**\n\t * Per cell filtering data cache. As per the sort data cache, used to\n\t * increase the performance of the filtering in DataTables\n\t *  @type array\n\t *  @default null\n\t *  @private\n\t */\n\t\"_aFilterData\": null,\n\n\t/**\n\t * Filtering data cache. This is the same as the cell filtering cache, but\n\t * in this case a string rather than an array. This is easily computed with\n\t * a join on `_aFilterData`, but is provided as a cache so the join isn't\n\t * needed on every search (memory traded for performance)\n\t *  @type array\n\t *  @default null\n\t *  @private\n\t */\n\t\"_sFilterRow\": null,\n\n\t/**\n\t * Cache of the class name that DataTables has applied to the row, so we\n\t * can quickly look at this variable rather than needing to do a DOM check\n\t * on className for the nTr property.\n\t *  @type string\n\t *  @default <i>Empty string</i>\n\t *  @private\n\t */\n\t\"_sRowStripe\": \"\",\n\n\t/**\n\t * Denote if the original data source was from the DOM, or the data source\n\t * object. This is used for invalidating data, so DataTables can\n\t * automatically read data from the original source, unless uninstructed\n\t * otherwise.\n\t *  @type string\n\t *  @default null\n\t *  @private\n\t */\n\t\"src\": null,\n\n\t/**\n\t * Index in the aoData array. This saves an indexOf lookup when we have the\n\t * object, but want to know the index\n\t *  @type integer\n\t *  @default -1\n\t *  @private\n\t */\n\t\"idx\": -1\n};\n\n\n/**\n * Template object for the column information object in DataTables. This object\n * is held in the settings aoColumns array and contains all the information that\n * DataTables needs about each individual column.\n *\n * Note that this object is related to {@link DataTable.defaults.column}\n * but this one is the internal data store for DataTables's cache of columns.\n * It should NOT be manipulated outside of DataTables. Any configuration should\n * be done through the initialisation options.\n *  @namespace\n */\nDataTable.models.oColumn = {\n\t/**\n\t * Column index. This could be worked out on-the-fly with $.inArray, but it\n\t * is faster to just hold it as a variable\n\t *  @type integer\n\t *  @default null\n\t */\n\t\"idx\": null,\n\n\t/**\n\t * A list of the columns that sorting should occur on when this column\n\t * is sorted. That this property is an array allows multi-column sorting\n\t * to be defined for a column (for example first name / last name columns\n\t * would benefit from this). The values are integers pointing to the\n\t * columns to be sorted on (typically it will be a single integer pointing\n\t * at itself, but that doesn't need to be the case).\n\t *  @type array\n\t */\n\t\"aDataSort\": null,\n\n\t/**\n\t * Define the sorting directions that are applied to the column, in sequence\n\t * as the column is repeatedly sorted upon - i.e. the first value is used\n\t * as the sorting direction when the column if first sorted (clicked on).\n\t * Sort it again (click again) and it will move on to the next index.\n\t * Repeat until loop.\n\t *  @type array\n\t */\n\t\"asSorting\": null,\n\n\t/**\n\t * Flag to indicate if the column is searchable, and thus should be included\n\t * in the filtering or not.\n\t *  @type boolean\n\t */\n\t\"bSearchable\": null,\n\n\t/**\n\t * Flag to indicate if the column is sortable or not.\n\t *  @type boolean\n\t */\n\t\"bSortable\": null,\n\n\t/**\n\t * Flag to indicate if the column is currently visible in the table or not\n\t *  @type boolean\n\t */\n\t\"bVisible\": null,\n\n\t/**\n\t * Store for manual type assignment using the `column.type` option. This\n\t * is held in store so we can manipulate the column's `sType` property.\n\t *  @type string\n\t *  @default null\n\t *  @private\n\t */\n\t\"_sManualType\": null,\n\n\t/**\n\t * Flag to indicate if HTML5 data attributes should be used as the data\n\t * source for filtering or sorting. True is either are.\n\t *  @type boolean\n\t *  @default false\n\t *  @private\n\t */\n\t\"_bAttrSrc\": false,\n\n\t/**\n\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t * allowing you to modify the DOM element (add background colour for example) when the\n\t * element is available.\n\t *  @type function\n\t *  @param {element} nTd The TD node that has been created\n\t *  @param {*} sData The Data for the cell\n\t *  @param {array|object} oData The data for the whole row\n\t *  @param {int} iRow The row index for the aoData data store\n\t *  @default null\n\t */\n\t\"fnCreatedCell\": null,\n\n\t/**\n\t * Function to get data from a cell in a column. You should <b>never</b>\n\t * access data directly through _aData internally in DataTables - always use\n\t * the method attached to this property. It allows mData to function as\n\t * required. This function is automatically assigned by the column\n\t * initialisation method\n\t *  @type function\n\t *  @param {array|object} oData The data array/object for the array\n\t *    (i.e. aoData[]._aData)\n\t *  @param {string} sSpecific The specific data type you want to get -\n\t *    'display', 'type' 'filter' 'sort'\n\t *  @returns {*} The data for the cell from the given row's data\n\t *  @default null\n\t */\n\t\"fnGetData\": null,\n\n\t/**\n\t * Function to set data for a cell in the column. You should <b>never</b>\n\t * set the data directly to _aData internally in DataTables - always use\n\t * this method. It allows mData to function as required. This function\n\t * is automatically assigned by the column initialisation method\n\t *  @type function\n\t *  @param {array|object} oData The data array/object for the array\n\t *    (i.e. aoData[]._aData)\n\t *  @param {*} sValue Value to set\n\t *  @default null\n\t */\n\t\"fnSetData\": null,\n\n\t/**\n\t * Property to read the value for the cells in the column from the data\n\t * source array / object. If null, then the default content is used, if a\n\t * function is given then the return from the function is used.\n\t *  @type function|int|string|null\n\t *  @default null\n\t */\n\t\"mData\": null,\n\n\t/**\n\t * Partner property to mData which is used (only when defined) to get\n\t * the data - i.e. it is basically the same as mData, but without the\n\t * 'set' option, and also the data fed to it is the result from mData.\n\t * This is the rendering method to match the data method of mData.\n\t *  @type function|int|string|null\n\t *  @default null\n\t */\n\t\"mRender\": null,\n\n\t/**\n\t * Unique header TH/TD element for this column - this is what the sorting\n\t * listener is attached to (if sorting is enabled.)\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTh\": null,\n\n\t/**\n\t * Unique footer TH/TD element for this column (if there is one). Not used\n\t * in DataTables as such, but can be used for plug-ins to reference the\n\t * footer for each column.\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTf\": null,\n\n\t/**\n\t * The class to apply to all TD elements in the table's TBODY for the column\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sClass\": null,\n\n\t/**\n\t * When DataTables calculates the column widths to assign to each column,\n\t * it finds the longest string in each column and then constructs a\n\t * temporary table and reads the widths from that. The problem with this\n\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t * string - thus the calculation can go wrong (doing it properly and putting\n\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t * a \"work around\" we provide this option. It will append its value to the\n\t * text that is found to be the longest string for the column - i.e. padding.\n\t *  @type string\n\t */\n\t\"sContentPadding\": null,\n\n\t/**\n\t * Allows a default value to be given for a column's data, and will be used\n\t * whenever a null data source is encountered (this can be because mData\n\t * is set to null, or because the data source itself is null).\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sDefaultContent\": null,\n\n\t/**\n\t * Name for the column, allowing reference to the column by name as well as\n\t * by index (needs a lookup to work by name).\n\t *  @type string\n\t */\n\t\"sName\": null,\n\n\t/**\n\t * Custom sorting data type - defines which of the available plug-ins in\n\t * afnSortData the custom sorting will use - if any is defined.\n\t *  @type string\n\t *  @default std\n\t */\n\t\"sSortDataType\": 'std',\n\n\t/**\n\t * Class to be applied to the header element when sorting on this column\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sSortingClass\": null,\n\n\t/**\n\t * Class to be applied to the header element when sorting on this column -\n\t * when jQuery UI theming is used.\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sSortingClassJUI\": null,\n\n\t/**\n\t * Title of the column - what is seen in the TH element (nTh).\n\t *  @type string\n\t */\n\t\"sTitle\": null,\n\n\t/**\n\t * Column sorting and filtering type\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sType\": null,\n\n\t/**\n\t * Width of the column\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sWidth\": null,\n\n\t/**\n\t * Width of the column when it was first \"encountered\"\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sWidthOrig\": null\n};\n\n\n/*\n * Developer note: The properties of the object below are given in Hungarian\n * notation, that was used as the interface for DataTables prior to v1.10, however\n * from v1.10 onwards the primary interface is camel case. In order to avoid\n * breaking backwards compatibility utterly with this change, the Hungarian\n * version is still, internally the primary interface, but is is not documented\n * - hence the @name tags in each doc comment. This allows a Javascript function\n * to create a map from Hungarian notation to camel case (going the other direction\n * would require each property to be listed, which would add around 3K to the size\n * of DataTables, while this method is about a 0.5K hit).\n *\n * Ultimately this does pave the way for Hungarian notation to be dropped\n * completely, but that is a massive amount of work and will break current\n * installs (therefore is on-hold until v2).\n */\n\n/**\n * Initialisation options that can be given to DataTables at initialisation\n * time.\n *  @namespace\n */\nDataTable.defaults = {\n\t/**\n\t * An array of data to use for the table, passed in at initialisation which\n\t * will be used in preference to any data which is already in the DOM. This is\n\t * particularly useful for constructing tables purely in Javascript, for\n\t * example with a custom Ajax call.\n\t *  @type array\n\t *  @default null\n\t *\n\t *  @dtopt Option\n\t *  @name DataTable.defaults.data\n\t *\n\t *  @example\n\t *    // Using a 2D array data source\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"data\": [\n\t *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],\n\t *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],\n\t *        ],\n\t *        \"columns\": [\n\t *          { \"title\": \"Engine\" },\n\t *          { \"title\": \"Browser\" },\n\t *          { \"title\": \"Platform\" },\n\t *          { \"title\": \"Version\" },\n\t *          { \"title\": \"Grade\" }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using an array of objects as a data source (`data`)\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"data\": [\n\t *          {\n\t *            \"engine\":   \"Trident\",\n\t *            \"browser\":  \"Internet Explorer 4.0\",\n\t *            \"platform\": \"Win 95+\",\n\t *            \"version\":  4,\n\t *            \"grade\":    \"X\"\n\t *          },\n\t *          {\n\t *            \"engine\":   \"Trident\",\n\t *            \"browser\":  \"Internet Explorer 5.0\",\n\t *            \"platform\": \"Win 95+\",\n\t *            \"version\":  5,\n\t *            \"grade\":    \"C\"\n\t *          }\n\t *        ],\n\t *        \"columns\": [\n\t *          { \"title\": \"Engine\",   \"data\": \"engine\" },\n\t *          { \"title\": \"Browser\",  \"data\": \"browser\" },\n\t *          { \"title\": \"Platform\", \"data\": \"platform\" },\n\t *          { \"title\": \"Version\",  \"data\": \"version\" },\n\t *          { \"title\": \"Grade\",    \"data\": \"grade\" }\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"aaData\": null,\n\n\n\t/**\n\t * If ordering is enabled, then DataTables will perform a first pass sort on\n\t * initialisation. You can define which column(s) the sort is performed\n\t * upon, and the sorting direction, with this variable. The `sorting` array\n\t * should contain an array for each column to be sorted initially containing\n\t * the column's index and a direction string ('asc' or 'desc').\n\t *  @type array\n\t *  @default [[0,'asc']]\n\t *\n\t *  @dtopt Option\n\t *  @name DataTable.defaults.order\n\t *\n\t *  @example\n\t *    // Sort by 3rd column first, and then 4th column\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"order\": [[2,'asc'], [3,'desc']]\n\t *      } );\n\t *    } );\n\t *\n\t *    // No initial sorting\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"order\": []\n\t *      } );\n\t *    } );\n\t */\n\t\"aaSorting\": [[0,'asc']],\n\n\n\t/**\n\t * This parameter is basically identical to the `sorting` parameter, but\n\t * cannot be overridden by user interaction with the table. What this means\n\t * is that you could have a column (visible or hidden) which the sorting\n\t * will always be forced on first - any sorting after that (from the user)\n\t * will then be performed as required. This can be useful for grouping rows\n\t * together.\n\t *  @type array\n\t *  @default null\n\t *\n\t *  @dtopt Option\n\t *  @name DataTable.defaults.orderFixed\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"orderFixed\": [[0,'asc']]\n\t *      } );\n\t *    } )\n\t */\n\t\"aaSortingFixed\": [],\n\n\n\t/**\n\t * DataTables can be instructed to load data to display in the table from a\n\t * Ajax source. This option defines how that Ajax call is made and where to.\n\t *\n\t * The `ajax` property has three different modes of operation, depending on\n\t * how it is defined. These are:\n\t *\n\t * * `string` - Set the URL from where the data should be loaded from.\n\t * * `object` - Define properties for `jQuery.ajax`.\n\t * * `function` - Custom data get function\n\t *\n\t * `string`\n\t * --------\n\t *\n\t * As a string, the `ajax` property simply defines the URL from which\n\t * DataTables will load data.\n\t *\n\t * `object`\n\t * --------\n\t *\n\t * As an object, the parameters in the object are passed to\n\t * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control\n\t * of the Ajax request. DataTables has a number of default parameters which\n\t * you can override using this option. Please refer to the jQuery\n\t * documentation for a full description of the options available, although\n\t * the following parameters provide additional options in DataTables or\n\t * require special consideration:\n\t *\n\t * * `data` - As with jQuery, `data` can be provided as an object, but it\n\t *   can also be used as a function to manipulate the data DataTables sends\n\t *   to the server. The function takes a single parameter, an object of\n\t *   parameters with the values that DataTables has readied for sending. An\n\t *   object may be returned which will be merged into the DataTables\n\t *   defaults, or you can add the items to the object that was passed in and\n\t *   not return anything from the function. This supersedes `fnServerParams`\n\t *   from DataTables 1.9-.\n\t *\n\t * * `dataSrc` - By default DataTables will look for the property `data` (or\n\t *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n\t *   from an Ajax source or for server-side processing - this parameter\n\t *   allows that property to be changed. You can use Javascript dotted\n\t *   object notation to get a data source for multiple levels of nesting, or\n\t *   it my be used as a function. As a function it takes a single parameter,\n\t *   the JSON returned from the server, which can be manipulated as\n\t *   required, with the returned value being that used by DataTables as the\n\t *   data source for the table. This supersedes `sAjaxDataProp` from\n\t *   DataTables 1.9-.\n\t *\n\t * * `success` - Should not be overridden it is used internally in\n\t *   DataTables. To manipulate / transform the data returned by the server\n\t *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n\t *\n\t * `function`\n\t * ----------\n\t *\n\t * As a function, making the Ajax call is left up to yourself allowing\n\t * complete control of the Ajax request. Indeed, if desired, a method other\n\t * than Ajax could be used to obtain the required data, such as Web storage\n\t * or an AIR database.\n\t *\n\t * The function is given four parameters and no return is required. The\n\t * parameters are:\n\t *\n\t * 1. _object_ - Data to send to the server\n\t * 2. _function_ - Callback function that must be executed when the required\n\t *    data has been obtained. That data should be passed into the callback\n\t *    as the only parameter\n\t * 3. _object_ - DataTables settings object for the table\n\t *\n\t * Note that this supersedes `fnServerData` from DataTables 1.9-.\n\t *\n\t *  @type string|object|function\n\t *  @default null\n\t *\n\t *  @dtopt Option\n\t *  @name DataTable.defaults.ajax\n\t *  @since 1.10.0\n\t *\n\t * @example\n\t *   // Get JSON data from a file via Ajax.\n\t *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).\n\t *   $('#example').dataTable( {\n\t *     \"ajax\": \"data.json\"\n\t *   } );\n\t *\n\t * @example\n\t *   // Get JSON data from a file via Ajax, using `dataSrc` to change\n\t *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)\n\t *   $('#example').dataTable( {\n\t *     \"ajax\": {\n\t *       \"url\": \"data.json\",\n\t *       \"dataSrc\": \"tableData\"\n\t *     }\n\t *   } );\n\t *\n\t * @example\n\t *   // Get JSON data from a file via Ajax, using `dataSrc` to read data\n\t *   // from a plain array rather than an array in an object\n\t *   $('#example').dataTable( {\n\t *     \"ajax\": {\n\t *       \"url\": \"data.json\",\n\t *       \"dataSrc\": \"\"\n\t *     }\n\t *   } );\n\t *\n\t * @example\n\t *   // Manipulate the data returned from the server - add a link to data\n\t *   // (note this can, should, be done using `render` for the column - this\n\t *   // is just a simple example of how the data can be manipulated).\n\t *   $('#example').dataTable( {\n\t *     \"ajax\": {\n\t *       \"url\": \"data.json\",\n\t *       \"dataSrc\": function ( json ) {\n\t *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {\n\t *           json[i][0] = '<a href=\"/message/'+json[i][0]+'>View message</a>';\n\t *         }\n\t *         return json;\n\t *       }\n\t *     }\n\t *   } );\n\t *\n\t * @example\n\t *   // Add data to the request\n\t *   $('#example').dataTable( {\n\t *     \"ajax\": {\n\t *       \"url\": \"data.json\",\n\t *       \"data\": function ( d ) {\n\t *         return {\n\t *           \"extra_search\": $('#extra').val()\n\t *         };\n\t *       }\n\t *     }\n\t *   } );\n\t *\n\t * @example\n\t *   // Send request as POST\n\t *   $('#example').dataTable( {\n\t *     \"ajax\": {\n\t *       \"url\": \"data.json\",\n\t *       \"type\": \"POST\"\n\t *     }\n\t *   } );\n\t *\n\t * @example\n\t *   // Get the data from localStorage (could interface with a form for\n\t *   // adding, editing and removing rows).\n\t *   $('#example').dataTable( {\n\t *     \"ajax\": function (data, callback, settings) {\n\t *       callback(\n\t *         JSON.parse( localStorage.getItem('dataTablesData') )\n\t *       );\n\t *     }\n\t *   } );\n\t */\n\t\"ajax\": null,\n\n\n\t/**\n\t * This parameter allows you to readily specify the entries in the length drop\n\t * down menu that DataTables shows when pagination is enabled. It can be\n\t * either a 1D array of options which will be used for both the displayed\n\t * option and the value, or a 2D array which will use the array in the first\n\t * position as the value, and the array in the second position as the\n\t * displayed options (useful for language strings such as 'All').\n\t *\n\t * Note that the `pageLength` property will be automatically set to the\n\t * first value given in this array, unless `pageLength` is also provided.\n\t *  @type array\n\t *  @default [ 10, 25, 50, 100 ]\n\t *\n\t *  @dtopt Option\n\t *  @name DataTable.defaults.lengthMenu\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"lengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\n\t *      } );\n\t *    } );\n\t */\n\t\"aLengthMenu\": [ 10, 25, 50, 100 ],\n\n\n\t/**\n\t * The `columns` option in the initialisation parameter allows you to define\n\t * details about the way individual columns behave. For a full list of\n\t * column options that can be set, please see\n\t * {@link DataTable.defaults.column}. Note that if you use `columns` to\n\t * define your columns, you must have an entry in the array for every single\n\t * column that you have in your table (these can be null if you don't which\n\t * to specify any options).\n\t *  @member\n\t *\n\t *  @name DataTable.defaults.column\n\t */\n\t\"aoColumns\": null,\n\n\t/**\n\t * Very similar to `columns`, `columnDefs` allows you to target a specific\n\t * column, multiple columns, or all columns, using the `targets` property of\n\t * each object in the array. This allows great flexibility when creating\n\t * tables, as the `columnDefs` arrays can be of any length, targeting the\n\t * columns you specifically want. `columnDefs` may use any of the column\n\t * options available: {@link DataTable.defaults.column}, but it _must_\n\t * have `targets` defined in each object in the array. Values in the `targets`\n\t * array may be:\n\t *   <ul>\n\t *     <li>a string - class name will be matched on the TH for the column</li>\n\t *     <li>0 or a positive integer - column index counting from the left</li>\n\t *     <li>a negative integer - column index counting from the right</li>\n\t *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n\t *   </ul>\n\t *  @member\n\t *\n\t *  @name DataTable.defaults.columnDefs\n\t */\n\t\"aoColumnDefs\": null,\n\n\n\t/**\n\t * Basically the same as `search`, this parameter defines the individual column\n\t * filtering state at initialisation time. The array must be of the same size\n\t * as the number of columns, and each element be an object with the parameters\n\t * `search` and `escapeRegex` (the latter is optional). 'null' is also\n\t * accepted and the default will be used.\n\t *  @type array\n\t *  @default []\n\t *\n\t *  @dtopt Option\n\t *  @name DataTable.defaults.searchCols\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"searchCols\": [\n\t *          null,\n\t *          { \"search\": \"My filter\" },\n\t *          null,\n\t *          { \"search\": \"^[0-9]\", \"escapeRegex\": false }\n\t *        ]\n\t *      } );\n\t *    } )\n\t */\n\t\"aoSearchCols\": [],\n\n\n\t/**\n\t * An array of CSS classes that should be applied to displayed rows. This\n\t * array may be of any length, and DataTables will apply each class\n\t * sequentially, looping when required.\n\t *  @type array\n\t *  @default null <i>Will take the values determined by the `oClasses.stripe*`\n\t *    options</i>\n\t *\n\t *  @dtopt Option\n\t *  @name DataTable.defaults.stripeClasses\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stripeClasses\": [ 'strip1', 'strip2', 'strip3' ]\n\t *      } );\n\t *    } )\n\t */\n\t\"asStripeClasses\": null,\n\n\n\t/**\n\t * Enable or disable automatic column width calculation. This can be disabled\n\t * as an optimisation (it takes some time to calculate the widths) if the\n\t * tables widths are passed in using `columns`.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.autoWidth\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"autoWidth\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bAutoWidth\": true,\n\n\n\t/**\n\t * Deferred rendering can provide DataTables with a huge speed boost when you\n\t * are using an Ajax or JS data source for the table. This option, when set to\n\t * true, will cause DataTables to defer the creation of the table elements for\n\t * each row until they are needed for a draw - saving a significant amount of\n\t * time.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.deferRender\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"ajax\": \"sources/arrays.txt\",\n\t *        \"deferRender\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"bDeferRender\": false,\n\n\n\t/**\n\t * Replace a DataTable which matches the given selector and replace it with\n\t * one which has the properties of the new initialisation object passed. If no\n\t * table matches the selector, then the new DataTable will be constructed as\n\t * per normal.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.destroy\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"srollY\": \"200px\",\n\t *        \"paginate\": false\n\t *      } );\n\t *\n\t *      // Some time later....\n\t *      $('#example').dataTable( {\n\t *        \"filter\": false,\n\t *        \"destroy\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"bDestroy\": false,\n\n\n\t/**\n\t * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n\t * that it allows the end user to input multiple words (space separated) and\n\t * will match a row containing those words, even if not in the order that was\n\t * specified (this allow matching across multiple columns). Note that if you\n\t * wish to use filtering in DataTables this must remain 'true' - to remove the\n\t * default filtering input box and retain filtering abilities, please use\n\t * {@link DataTable.defaults.dom}.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.searching\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"searching\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bFilter\": true,\n\n\n\t/**\n\t * Enable or disable the table information display. This shows information\n\t * about the data that is currently visible on the page, including information\n\t * about filtered data if that action is being performed.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.info\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"info\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bInfo\": true,\n\n\n\t/**\n\t * Allows the end user to select the size of a formatted page from a select\n\t * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.lengthChange\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"lengthChange\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bLengthChange\": true,\n\n\n\t/**\n\t * Enable or disable pagination.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.paging\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"paging\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bPaginate\": true,\n\n\n\t/**\n\t * Enable or disable the display of a 'processing' indicator when the table is\n\t * being processed (e.g. a sort). This is particularly useful for tables with\n\t * large amounts of data where it can take a noticeable amount of time to sort\n\t * the entries.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.processing\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"processing\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"bProcessing\": false,\n\n\n\t/**\n\t * Retrieve the DataTables object for the given selector. Note that if the\n\t * table has already been initialised, this parameter will cause DataTables\n\t * to simply return the object that has already been set up - it will not take\n\t * account of any changes you might have made to the initialisation object\n\t * passed to DataTables (setting this parameter to true is an acknowledgement\n\t * that you understand this). `destroy` can be used to reinitialise a table if\n\t * you need.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.retrieve\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      initTable();\n\t *      tableActions();\n\t *    } );\n\t *\n\t *    function initTable ()\n\t *    {\n\t *      return $('#example').dataTable( {\n\t *        \"scrollY\": \"200px\",\n\t *        \"paginate\": false,\n\t *        \"retrieve\": true\n\t *      } );\n\t *    }\n\t *\n\t *    function tableActions ()\n\t *    {\n\t *      var table = initTable();\n\t *      // perform API operations with oTable\n\t *    }\n\t */\n\t\"bRetrieve\": false,\n\n\n\t/**\n\t * When vertical (y) scrolling is enabled, DataTables will force the height of\n\t * the table's viewport to the given height at all times (useful for layout).\n\t * However, this can look odd when filtering data down to a small data set,\n\t * and the footer is left \"floating\" further down. This parameter (when\n\t * enabled) will cause DataTables to collapse the table's viewport down when\n\t * the result set will fit within the given Y height.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.scrollCollapse\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"scrollY\": \"200\",\n\t *        \"scrollCollapse\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"bScrollCollapse\": false,\n\n\n\t/**\n\t * Configure DataTables to use server-side processing. Note that the\n\t * `ajax` parameter must also be given in order to give DataTables a\n\t * source to obtain the required data for each draw.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Features\n\t *  @dtopt Server-side\n\t *  @name DataTable.defaults.serverSide\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"serverSide\": true,\n\t *        \"ajax\": \"xhr.php\"\n\t *      } );\n\t *    } );\n\t */\n\t\"bServerSide\": false,\n\n\n\t/**\n\t * Enable or disable sorting of columns. Sorting of individual columns can be\n\t * disabled by the `sortable` option for each column.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.ordering\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"ordering\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bSort\": true,\n\n\n\t/**\n\t * Enable or display DataTables' ability to sort multiple columns at the\n\t * same time (activated by shift-click by the user).\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.orderMulti\n\t *\n\t *  @example\n\t *    // Disable multiple column sorting ability\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"orderMulti\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bSortMulti\": true,\n\n\n\t/**\n\t * Allows control over whether DataTables should use the top (true) unique\n\t * cell that is found for a single column, or the bottom (false - default).\n\t * This is useful when using complex headers.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.orderCellsTop\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"orderCellsTop\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"bSortCellsTop\": false,\n\n\n\t/**\n\t * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n\t * `sorting\\_3` to the columns which are currently being sorted on. This is\n\t * presented as a feature switch as it can increase processing time (while\n\t * classes are removed and added) so for large data sets you might want to\n\t * turn this off.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.orderClasses\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"orderClasses\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bSortClasses\": true,\n\n\n\t/**\n\t * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n\t * used to save table display information such as pagination information,\n\t * display length, filtering and sorting. As such when the end user reloads\n\t * the page the display display will match what thy had previously set up.\n\t *\n\t * Due to the use of `localStorage` the default state saving is not supported\n\t * in IE6 or 7. If state saving is required in those browsers, use\n\t * `stateSaveCallback` to provide a storage solution such as cookies.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.stateSave\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"stateSave\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"bStateSave\": false,\n\n\n\t/**\n\t * This function is called when a TR element is created (and all TD child\n\t * elements have been inserted), or registered if using a DOM source, allowing\n\t * manipulation of the TR element (adding classes etc).\n\t *  @type function\n\t *  @param {node} row \"TR\" element for the current row\n\t *  @param {array} data Raw data array for this row\n\t *  @param {int} dataIndex The index of this row in the internal aoData array\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.createdRow\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"createdRow\": function( row, data, dataIndex ) {\n\t *          // Bold the grade for all 'A' grade browsers\n\t *          if ( data[4] == \"A\" )\n\t *          {\n\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t *          }\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnCreatedRow\": null,\n\n\n\t/**\n\t * This function is called on every 'draw' event, and allows you to\n\t * dynamically modify any aspect you want about the created DOM.\n\t *  @type function\n\t *  @param {object} settings DataTables settings object\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.drawCallback\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"drawCallback\": function( settings ) {\n\t *          alert( 'DataTables has redrawn the table' );\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnDrawCallback\": null,\n\n\n\t/**\n\t * Identical to fnHeaderCallback() but for the table footer this function\n\t * allows you to modify the table footer on every 'draw' event.\n\t *  @type function\n\t *  @param {node} foot \"TR\" element for the footer\n\t *  @param {array} data Full table data (as derived from the original HTML)\n\t *  @param {int} start Index for the current display starting point in the\n\t *    display array\n\t *  @param {int} end Index for the current display ending point in the\n\t *    display array\n\t *  @param {array int} display Index array to translate the visual position\n\t *    to the full data array\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.footerCallback\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"footerCallback\": function( tfoot, data, start, end, display ) {\n\t *          tfoot.getElementsByTagName('th')[0].innerHTML = \"Starting index is \"+start;\n\t *        }\n\t *      } );\n\t *    } )\n\t */\n\t\"fnFooterCallback\": null,\n\n\n\t/**\n\t * When rendering large numbers in the information element for the table\n\t * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n\t * to have a comma separator for the 'thousands' units (e.g. 1 million is\n\t * rendered as \"1,000,000\") to help readability for the end user. This\n\t * function will override the default method DataTables uses.\n\t *  @type function\n\t *  @member\n\t *  @param {int} toFormat number to be formatted\n\t *  @returns {string} formatted string for DataTables to show the number\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.formatNumber\n\t *\n\t *  @example\n\t *    // Format a number using a single quote for the separator (note that\n\t *    // this can also be done with the language.thousands option)\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"formatNumber\": function ( toFormat ) {\n\t *          return toFormat.toString().replace(\n\t *            /\\B(?=(\\d{3})+(?!\\d))/g, \"'\"\n\t *          );\n\t *        };\n\t *      } );\n\t *    } );\n\t */\n\t\"fnFormatNumber\": function ( toFormat ) {\n\t\treturn toFormat.toString().replace(\n\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g,\n\t\t\tthis.oLanguage.sThousands\n\t\t);\n\t},\n\n\n\t/**\n\t * This function is called on every 'draw' event, and allows you to\n\t * dynamically modify the header row. This can be used to calculate and\n\t * display useful information about the table.\n\t *  @type function\n\t *  @param {node} head \"TR\" element for the header\n\t *  @param {array} data Full table data (as derived from the original HTML)\n\t *  @param {int} start Index for the current display starting point in the\n\t *    display array\n\t *  @param {int} end Index for the current display ending point in the\n\t *    display array\n\t *  @param {array int} display Index array to translate the visual position\n\t *    to the full data array\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.headerCallback\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"fheaderCallback\": function( head, data, start, end, display ) {\n\t *          head.getElementsByTagName('th')[0].innerHTML = \"Displaying \"+(end-start)+\" records\";\n\t *        }\n\t *      } );\n\t *    } )\n\t */\n\t\"fnHeaderCallback\": null,\n\n\n\t/**\n\t * The information element can be used to convey information about the current\n\t * state of the table. Although the internationalisation options presented by\n\t * DataTables are quite capable of dealing with most customisations, there may\n\t * be times where you wish to customise the string further. This callback\n\t * allows you to do exactly that.\n\t *  @type function\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {int} start Starting position in data for the draw\n\t *  @param {int} end End position in data for the draw\n\t *  @param {int} max Total number of rows in the table (regardless of\n\t *    filtering)\n\t *  @param {int} total Total number of rows in the data set, after filtering\n\t *  @param {string} pre The string that DataTables has formatted using it's\n\t *    own rules\n\t *  @returns {string} The string to be displayed in the information element.\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.infoCallback\n\t *\n\t *  @example\n\t *    $('#example').dataTable( {\n\t *      \"infoCallback\": function( settings, start, end, max, total, pre ) {\n\t *        return start +\" to \"+ end;\n\t *      }\n\t *    } );\n\t */\n\t\"fnInfoCallback\": null,\n\n\n\t/**\n\t * Called when the table has been initialised. Normally DataTables will\n\t * initialise sequentially and there will be no need for this function,\n\t * however, this does not hold true when using external language information\n\t * since that is obtained using an async XHR call.\n\t *  @type function\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} json The JSON object request from the server - only\n\t *    present if client-side Ajax sourced data is used\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.initComplete\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"initComplete\": function(settings, json) {\n\t *          alert( 'DataTables has finished its initialisation.' );\n\t *        }\n\t *      } );\n\t *    } )\n\t */\n\t\"fnInitComplete\": null,\n\n\n\t/**\n\t * Called at the very start of each table draw and can be used to cancel the\n\t * draw by returning false, any other return (including undefined) results in\n\t * the full draw occurring).\n\t *  @type function\n\t *  @param {object} settings DataTables settings object\n\t *  @returns {boolean} False will cancel the draw, anything else (including no\n\t *    return) will allow it to complete.\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.preDrawCallback\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"preDrawCallback\": function( settings ) {\n\t *          if ( $('#test').val() == 1 ) {\n\t *            return false;\n\t *          }\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnPreDrawCallback\": null,\n\n\n\t/**\n\t * This function allows you to 'post process' each row after it have been\n\t * generated for each table draw, but before it is rendered on screen. This\n\t * function might be used for setting the row class name etc.\n\t *  @type function\n\t *  @param {node} row \"TR\" element for the current row\n\t *  @param {array} data Raw data array for this row\n\t *  @param {int} displayIndex The display index for the current table draw\n\t *  @param {int} displayIndexFull The index of the data in the full list of\n\t *    rows (after filtering)\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.rowCallback\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"rowCallback\": function( row, data, displayIndex, displayIndexFull ) {\n\t *          // Bold the grade for all 'A' grade browsers\n\t *          if ( data[4] == \"A\" ) {\n\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t *          }\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnRowCallback\": null,\n\n\n\t/**\n\t * __Deprecated__ The functionality provided by this parameter has now been\n\t * superseded by that provided through `ajax`, which should be used instead.\n\t *\n\t * This parameter allows you to override the default function which obtains\n\t * the data from the server so something more suitable for your application.\n\t * For example you could use POST data, or pull information from a Gears or\n\t * AIR database.\n\t *  @type function\n\t *  @member\n\t *  @param {string} source HTTP source to obtain the data from (`ajax`)\n\t *  @param {array} data A key/value pair object containing the data to send\n\t *    to the server\n\t *  @param {function} callback to be called on completion of the data get\n\t *    process that will draw the data on the page.\n\t *  @param {object} settings DataTables settings object\n\t *\n\t *  @dtopt Callbacks\n\t *  @dtopt Server-side\n\t *  @name DataTable.defaults.serverData\n\t *\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t */\n\t\"fnServerData\": null,\n\n\n\t/**\n\t * __Deprecated__ The functionality provided by this parameter has now been\n\t * superseded by that provided through `ajax`, which should be used instead.\n\t *\n\t *  It is often useful to send extra data to the server when making an Ajax\n\t * request - for example custom filtering information, and this callback\n\t * function makes it trivial to send extra information to the server. The\n\t * passed in parameter is the data set that has been constructed by\n\t * DataTables, and you can add to this or modify it as you require.\n\t *  @type function\n\t *  @param {array} data Data array (array of objects which are name/value\n\t *    pairs) that has been constructed by DataTables and will be sent to the\n\t *    server. In the case of Ajax sourced data with server-side processing\n\t *    this will be an empty array, for server-side processing there will be a\n\t *    significant number of parameters!\n\t *  @returns {undefined} Ensure that you modify the data array passed in,\n\t *    as this is passed by reference.\n\t *\n\t *  @dtopt Callbacks\n\t *  @dtopt Server-side\n\t *  @name DataTable.defaults.serverParams\n\t *\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t */\n\t\"fnServerParams\": null,\n\n\n\t/**\n\t * Load the table state. With this function you can define from where, and how, the\n\t * state of a table is loaded. By default DataTables will load from `localStorage`\n\t * but you might wish to use a server-side database or cookies.\n\t *  @type function\n\t *  @member\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} callback Callback that can be executed when done. It\n\t *    should be passed the loaded state object.\n\t *  @return {object} The DataTables state object to be loaded\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.stateLoadCallback\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stateSave\": true,\n\t *        \"stateLoadCallback\": function (settings, callback) {\n\t *          $.ajax( {\n\t *            \"url\": \"/state_load\",\n\t *            \"dataType\": \"json\",\n\t *            \"success\": function (json) {\n\t *              callback( json );\n\t *            }\n\t *          } );\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnStateLoadCallback\": function ( settings ) {\n\t\ttry {\n\t\t\treturn JSON.parse(\n\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(\n\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname\n\t\t\t\t)\n\t\t\t);\n\t\t} catch (e) {\n\t\t\treturn {};\n\t\t}\n\t},\n\n\n\t/**\n\t * Callback which allows modification of the saved state prior to loading that state.\n\t * This callback is called when the table is loading state from the stored data, but\n\t * prior to the settings object being modified by the saved state. Note that for\n\t * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n\t * a plug-in.\n\t *  @type function\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} data The state object that is to be loaded\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.stateLoadParams\n\t *\n\t *  @example\n\t *    // Remove a saved filter, so filtering is never loaded\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stateSave\": true,\n\t *        \"stateLoadParams\": function (settings, data) {\n\t *          data.oSearch.sSearch = \"\";\n\t *        }\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Disallow state loading by returning false\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stateSave\": true,\n\t *        \"stateLoadParams\": function (settings, data) {\n\t *          return false;\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnStateLoadParams\": null,\n\n\n\t/**\n\t * Callback that is called when the state has been loaded from the state saving method\n\t * and the DataTables settings object has been modified as a result of the loaded state.\n\t *  @type function\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} data The state object that was loaded\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.stateLoaded\n\t *\n\t *  @example\n\t *    // Show an alert with the filtering value that was saved\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stateSave\": true,\n\t *        \"stateLoaded\": function (settings, data) {\n\t *          alert( 'Saved filter was: '+data.oSearch.sSearch );\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnStateLoaded\": null,\n\n\n\t/**\n\t * Save the table state. This function allows you to define where and how the state\n\t * information for the table is stored By default DataTables will use `localStorage`\n\t * but you might wish to use a server-side database or cookies.\n\t *  @type function\n\t *  @member\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} data The state object to be saved\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.stateSaveCallback\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stateSave\": true,\n\t *        \"stateSaveCallback\": function (settings, data) {\n\t *          // Send an Ajax request to the server with the state object\n\t *          $.ajax( {\n\t *            \"url\": \"/state_save\",\n\t *            \"data\": data,\n\t *            \"dataType\": \"json\",\n\t *            \"method\": \"POST\"\n\t *            \"success\": function () {}\n\t *          } );\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnStateSaveCallback\": function ( settings, data ) {\n\t\ttry {\n\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(\n\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname,\n\t\t\t\tJSON.stringify( data )\n\t\t\t);\n\t\t} catch (e) {}\n\t},\n\n\n\t/**\n\t * Callback which allows modification of the state to be saved. Called when the table\n\t * has changed state a new state save is required. This method allows modification of\n\t * the state saving object prior to actually doing the save, including addition or\n\t * other state properties or modification. Note that for plug-in authors, you should\n\t * use the `stateSaveParams` event to save parameters for a plug-in.\n\t *  @type function\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} data The state object to be saved\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.stateSaveParams\n\t *\n\t *  @example\n\t *    // Remove a saved filter, so filtering is never saved\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stateSave\": true,\n\t *        \"stateSaveParams\": function (settings, data) {\n\t *          data.oSearch.sSearch = \"\";\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnStateSaveParams\": null,\n\n\n\t/**\n\t * Duration for which the saved state information is considered valid. After this period\n\t * has elapsed the state will be returned to the default.\n\t * Value is given in seconds.\n\t *  @type int\n\t *  @default 7200 <i>(2 hours)</i>\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.stateDuration\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stateDuration\": 60*60*24; // 1 day\n\t *      } );\n\t *    } )\n\t */\n\t\"iStateDuration\": 7200,\n\n\n\t/**\n\t * When enabled DataTables will not make a request to the server for the first\n\t * page draw - rather it will use the data already on the page (no sorting etc\n\t * will be applied to it), thus saving on an XHR at load time. `deferLoading`\n\t * is used to indicate that deferred loading is required, but it is also used\n\t * to tell DataTables how many records there are in the full table (allowing\n\t * the information element and pagination to be displayed correctly). In the case\n\t * where a filtering is applied to the table on initial load, this can be\n\t * indicated by giving the parameter as an array, where the first element is\n\t * the number of records available after filtering and the second element is the\n\t * number of records without filtering (allowing the table information element\n\t * to be shown correctly).\n\t *  @type int | array\n\t *  @default null\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.deferLoading\n\t *\n\t *  @example\n\t *    // 57 records available in the table, no filtering applied\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"serverSide\": true,\n\t *        \"ajax\": \"scripts/server_processing.php\",\n\t *        \"deferLoading\": 57\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // 57 records after filtering, 100 without filtering (an initial filter applied)\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"serverSide\": true,\n\t *        \"ajax\": \"scripts/server_processing.php\",\n\t *        \"deferLoading\": [ 57, 100 ],\n\t *        \"search\": {\n\t *          \"search\": \"my_filter\"\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"iDeferLoading\": null,\n\n\n\t/**\n\t * Number of rows to display on a single page when using pagination. If\n\t * feature enabled (`lengthChange`) then the end user will be able to override\n\t * this to a custom setting using a pop-up menu.\n\t *  @type int\n\t *  @default 10\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.pageLength\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"pageLength\": 50\n\t *      } );\n\t *    } )\n\t */\n\t\"iDisplayLength\": 10,\n\n\n\t/**\n\t * Define the starting point for data display when using DataTables with\n\t * pagination. Note that this parameter is the number of records, rather than\n\t * the page number, so if you have 10 records per page and want to start on\n\t * the third page, it should be \"20\".\n\t *  @type int\n\t *  @default 0\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.displayStart\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"displayStart\": 20\n\t *      } );\n\t *    } )\n\t */\n\t\"iDisplayStart\": 0,\n\n\n\t/**\n\t * By default DataTables allows keyboard navigation of the table (sorting, paging,\n\t * and filtering) by adding a `tabindex` attribute to the required elements. This\n\t * allows you to tab through the controls and press the enter key to activate them.\n\t * The tabindex is default 0, meaning that the tab follows the flow of the document.\n\t * You can overrule this using this parameter if you wish. Use a value of -1 to\n\t * disable built-in keyboard navigation.\n\t *  @type int\n\t *  @default 0\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.tabIndex\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"tabIndex\": 1\n\t *      } );\n\t *    } );\n\t */\n\t\"iTabIndex\": 0,\n\n\n\t/**\n\t * Classes that DataTables assigns to the various components and features\n\t * that it adds to the HTML table. This allows classes to be configured\n\t * during initialisation in addition to through the static\n\t * {@link DataTable.ext.oStdClasses} object).\n\t *  @namespace\n\t *  @name DataTable.defaults.classes\n\t */\n\t\"oClasses\": {},\n\n\n\t/**\n\t * All strings that DataTables uses in the user interface that it creates\n\t * are defined in this object, allowing you to modified them individually or\n\t * completely replace them all as required.\n\t *  @namespace\n\t *  @name DataTable.defaults.language\n\t */\n\t\"oLanguage\": {\n\t\t/**\n\t\t * Strings that are used for WAI-ARIA labels and controls only (these are not\n\t\t * actually visible on the page, but will be read by screenreaders, and thus\n\t\t * must be internationalised as well).\n\t\t *  @namespace\n\t\t *  @name DataTable.defaults.language.aria\n\t\t */\n\t\t\"oAria\": {\n\t\t\t/**\n\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t * sorted ascending by activing the column (click or return when focused).\n\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t *  @type string\n\t\t\t *  @default : activate to sort column ascending\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.aria.sortAscending\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"aria\": {\n\t\t\t *            \"sortAscending\": \" - click/return to sort ascending\"\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sSortAscending\": \": activate to sort column ascending\",\n\n\t\t\t/**\n\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t * sorted descending by activing the column (click or return when focused).\n\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t *  @type string\n\t\t\t *  @default : activate to sort column ascending\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.aria.sortDescending\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"aria\": {\n\t\t\t *            \"sortDescending\": \" - click/return to sort descending\"\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sSortDescending\": \": activate to sort column descending\"\n\t\t},\n\n\t\t/**\n\t\t * Pagination string used by DataTables for the built-in pagination\n\t\t * control types.\n\t\t *  @namespace\n\t\t *  @name DataTable.defaults.language.paginate\n\t\t */\n\t\t\"oPaginate\": {\n\t\t\t/**\n\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t * button to take the user to the first page.\n\t\t\t *  @type string\n\t\t\t *  @default First\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.paginate.first\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"paginate\": {\n\t\t\t *            \"first\": \"First page\"\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sFirst\": \"First\",\n\n\n\t\t\t/**\n\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t * button to take the user to the last page.\n\t\t\t *  @type string\n\t\t\t *  @default Last\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.paginate.last\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"paginate\": {\n\t\t\t *            \"last\": \"Last page\"\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sLast\": \"Last\",\n\n\n\t\t\t/**\n\t\t\t * Text to use for the 'next' pagination button (to take the user to the\n\t\t\t * next page).\n\t\t\t *  @type string\n\t\t\t *  @default Next\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.paginate.next\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"paginate\": {\n\t\t\t *            \"next\": \"Next page\"\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sNext\": \"Next\",\n\n\n\t\t\t/**\n\t\t\t * Text to use for the 'previous' pagination button (to take the user to\n\t\t\t * the previous page).\n\t\t\t *  @type string\n\t\t\t *  @default Previous\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.paginate.previous\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"paginate\": {\n\t\t\t *            \"previous\": \"Previous page\"\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sPrevious\": \"Previous\"\n\t\t},\n\n\t\t/**\n\t\t * This string is shown in preference to `zeroRecords` when the table is\n\t\t * empty of data (regardless of filtering). Note that this is an optional\n\t\t * parameter - if it is not given, the value of `zeroRecords` will be used\n\t\t * instead (either the default or given value).\n\t\t *  @type string\n\t\t *  @default No data available in table\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.emptyTable\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"emptyTable\": \"No data available in table\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sEmptyTable\": \"No data available in table\",\n\n\n\t\t/**\n\t\t * This string gives information to the end user about the information\n\t\t * that is current on display on the page. The following tokens can be\n\t\t * used in the string and will be dynamically replaced as the table\n\t\t * display updates. This tokens can be placed anywhere in the string, or\n\t\t * removed as needed by the language requires:\n\t\t *\n\t\t * * `\\_START\\_` - Display index of the first record on the current page\n\t\t * * `\\_END\\_` - Display index of the last record on the current page\n\t\t * * `\\_TOTAL\\_` - Number of records in the table after filtering\n\t\t * * `\\_MAX\\_` - Number of records in the table without filtering\n\t\t * * `\\_PAGE\\_` - Current page number\n\t\t * * `\\_PAGES\\_` - Total number of pages of data in the table\n\t\t *\n\t\t *  @type string\n\t\t *  @default Showing _START_ to _END_ of _TOTAL_ entries\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.info\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"info\": \"Showing page _PAGE_ of _PAGES_\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ entries\",\n\n\n\t\t/**\n\t\t * Display information string for when the table is empty. Typically the\n\t\t * format of this string should match `info`.\n\t\t *  @type string\n\t\t *  @default Showing 0 to 0 of 0 entries\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.infoEmpty\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"infoEmpty\": \"No entries to show\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sInfoEmpty\": \"Showing 0 to 0 of 0 entries\",\n\n\n\t\t/**\n\t\t * When a user filters the information in a table, this string is appended\n\t\t * to the information (`info`) to give an idea of how strong the filtering\n\t\t * is. The variable _MAX_ is dynamically updated.\n\t\t *  @type string\n\t\t *  @default (filtered from _MAX_ total entries)\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.infoFiltered\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"infoFiltered\": \" - filtering from _MAX_ records\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sInfoFiltered\": \"(filtered from _MAX_ total entries)\",\n\n\n\t\t/**\n\t\t * If can be useful to append extra information to the info string at times,\n\t\t * and this variable does exactly that. This information will be appended to\n\t\t * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n\t\t * being used) at all times.\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.infoPostFix\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"infoPostFix\": \"All records shown are derived from real information.\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sInfoPostFix\": \"\",\n\n\n\t\t/**\n\t\t * This decimal place operator is a little different from the other\n\t\t * language options since DataTables doesn't output floating point\n\t\t * numbers, so it won't ever use this for display of a number. Rather,\n\t\t * what this parameter does is modify the sort methods of the table so\n\t\t * that numbers which are in a format which has a character other than\n\t\t * a period (`.`) as a decimal place will be sorted numerically.\n\t\t *\n\t\t * Note that numbers with different decimal places cannot be shown in\n\t\t * the same table and still be sortable, the table must be consistent.\n\t\t * However, multiple different tables on the page can use different\n\t\t * decimal place characters.\n\t\t *  @type string\n\t\t *  @default \n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.decimal\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"decimal\": \",\"\n\t\t *          \"thousands\": \".\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sDecimal\": \"\",\n\n\n\t\t/**\n\t\t * DataTables has a build in number formatter (`formatNumber`) which is\n\t\t * used to format large numbers that are used in the table information.\n\t\t * By default a comma is used, but this can be trivially changed to any\n\t\t * character you wish with this parameter.\n\t\t *  @type string\n\t\t *  @default ,\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.thousands\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"thousands\": \"'\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sThousands\": \",\",\n\n\n\t\t/**\n\t\t * Detail the action that will be taken when the drop down menu for the\n\t\t * pagination length option is changed. The '_MENU_' variable is replaced\n\t\t * with a default select list of 10, 25, 50 and 100, and can be replaced\n\t\t * with a custom select box if required.\n\t\t *  @type string\n\t\t *  @default Show _MENU_ entries\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.lengthMenu\n\t\t *\n\t\t *  @example\n\t\t *    // Language change only\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"lengthMenu\": \"Display _MENU_ records\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Language and options change\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"lengthMenu\": 'Display <select>'+\n\t\t *            '<option value=\"10\">10</option>'+\n\t\t *            '<option value=\"20\">20</option>'+\n\t\t *            '<option value=\"30\">30</option>'+\n\t\t *            '<option value=\"40\">40</option>'+\n\t\t *            '<option value=\"50\">50</option>'+\n\t\t *            '<option value=\"-1\">All</option>'+\n\t\t *            '</select> records'\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sLengthMenu\": \"Show _MENU_ entries\",\n\n\n\t\t/**\n\t\t * When using Ajax sourced data and during the first draw when DataTables is\n\t\t * gathering the data, this message is shown in an empty row in the table to\n\t\t * indicate to the end user the the data is being loaded. Note that this\n\t\t * parameter is not used when loading data by server-side processing, just\n\t\t * Ajax sourced data with client-side processing.\n\t\t *  @type string\n\t\t *  @default Loading...\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.loadingRecords\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"loadingRecords\": \"Please wait - loading...\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sLoadingRecords\": \"Loading...\",\n\n\n\t\t/**\n\t\t * Text which is displayed when the table is processing a user action\n\t\t * (usually a sort command or similar).\n\t\t *  @type string\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.processing\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"processing\": \"DataTables is currently busy\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sProcessing\": \"\",\n\n\n\t\t/**\n\t\t * Details the actions that will be taken when the user types into the\n\t\t * filtering input text box. The variable \"_INPUT_\", if used in the string,\n\t\t * is replaced with the HTML text box for the filtering input allowing\n\t\t * control over where it appears in the string. If \"_INPUT_\" is not given\n\t\t * then the input box is appended to the string automatically.\n\t\t *  @type string\n\t\t *  @default Search:\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.search\n\t\t *\n\t\t *  @example\n\t\t *    // Input text box will be appended at the end automatically\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"search\": \"Filter records:\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Specify where the filter should appear\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"search\": \"Apply filter _INPUT_ to table\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sSearch\": \"Search:\",\n\n\n\t\t/**\n\t\t * Assign a `placeholder` attribute to the search `input` element\n\t\t *  @type string\n\t\t *  @default \n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.searchPlaceholder\n\t\t */\n\t\t\"sSearchPlaceholder\": \"\",\n\n\n\t\t/**\n\t\t * All of the language information can be stored in a file on the\n\t\t * server-side, which DataTables will look up if this parameter is passed.\n\t\t * It must store the URL of the language file, which is in a JSON format,\n\t\t * and the object has the same properties as the oLanguage object in the\n\t\t * initialiser object (i.e. the above parameters). Please refer to one of\n\t\t * the example language files to see how this works in action.\n\t\t *  @type string\n\t\t *  @default <i>Empty string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.url\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"url\": \"http://www.sprymedia.co.uk/dataTables/lang.txt\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sUrl\": \"\",\n\n\n\t\t/**\n\t\t * Text shown inside the table records when the is no information to be\n\t\t * displayed after filtering. `emptyTable` is shown when there is simply no\n\t\t * information in the table at all (regardless of filtering).\n\t\t *  @type string\n\t\t *  @default No matching records found\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.zeroRecords\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"zeroRecords\": \"No records to display\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sZeroRecords\": \"No matching records found\"\n\t},\n\n\n\t/**\n\t * This parameter allows you to have define the global filtering state at\n\t * initialisation time. As an object the `search` parameter must be\n\t * defined, but all other parameters are optional. When `regex` is true,\n\t * the search string will be treated as a regular expression, when false\n\t * (default) it will be treated as a straight string. When `smart`\n\t * DataTables will use it's smart filtering methods (to word match at\n\t * any point in the data), when false this will not be done.\n\t *  @namespace\n\t *  @extends DataTable.models.oSearch\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.search\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"search\": {\"search\": \"Initial search\"}\n\t *      } );\n\t *    } )\n\t */\n\t\"oSearch\": $.extend( {}, DataTable.models.oSearch ),\n\n\n\t/**\n\t * __Deprecated__ The functionality provided by this parameter has now been\n\t * superseded by that provided through `ajax`, which should be used instead.\n\t *\n\t * By default DataTables will look for the property `data` (or `aaData` for\n\t * compatibility with DataTables 1.9-) when obtaining data from an Ajax\n\t * source or for server-side processing - this parameter allows that\n\t * property to be changed. You can use Javascript dotted object notation to\n\t * get a data source for multiple levels of nesting.\n\t *  @type string\n\t *  @default data\n\t *\n\t *  @dtopt Options\n\t *  @dtopt Server-side\n\t *  @name DataTable.defaults.ajaxDataProp\n\t *\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t */\n\t\"sAjaxDataProp\": \"data\",\n\n\n\t/**\n\t * __Deprecated__ The functionality provided by this parameter has now been\n\t * superseded by that provided through `ajax`, which should be used instead.\n\t *\n\t * You can instruct DataTables to load data from an external\n\t * source using this parameter (use aData if you want to pass data in you\n\t * already have). Simply provide a url a JSON object can be obtained from.\n\t *  @type string\n\t *  @default null\n\t *\n\t *  @dtopt Options\n\t *  @dtopt Server-side\n\t *  @name DataTable.defaults.ajaxSource\n\t *\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t */\n\t\"sAjaxSource\": null,\n\n\n\t/**\n\t * This initialisation variable allows you to specify exactly where in the\n\t * DOM you want DataTables to inject the various controls it adds to the page\n\t * (for example you might want the pagination controls at the top of the\n\t * table). DIV elements (with or without a custom class) can also be added to\n\t * aid styling. The follow syntax is used:\n\t *   <ul>\n\t *     <li>The following options are allowed:\n\t *       <ul>\n\t *         <li>'l' - Length changing</li>\n\t *         <li>'f' - Filtering input</li>\n\t *         <li>'t' - The table!</li>\n\t *         <li>'i' - Information</li>\n\t *         <li>'p' - Pagination</li>\n\t *         <li>'r' - pRocessing</li>\n\t *       </ul>\n\t *     </li>\n\t *     <li>The following constants are allowed:\n\t *       <ul>\n\t *         <li>'H' - jQueryUI theme \"header\" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>\n\t *         <li>'F' - jQueryUI theme \"footer\" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>\n\t *       </ul>\n\t *     </li>\n\t *     <li>The following syntax is expected:\n\t *       <ul>\n\t *         <li>'&lt;' and '&gt;' - div elements</li>\n\t *         <li>'&lt;\"class\" and '&gt;' - div with a class</li>\n\t *         <li>'&lt;\"#id\" and '&gt;' - div with an ID</li>\n\t *       </ul>\n\t *     </li>\n\t *     <li>Examples:\n\t *       <ul>\n\t *         <li>'&lt;\"wrapper\"flipt&gt;'</li>\n\t *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>\n\t *       </ul>\n\t *     </li>\n\t *   </ul>\n\t *  @type string\n\t *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>\n\t *    <\"H\"lfr>t<\"F\"ip> <i>(when `jQueryUI` is true)</i>\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.dom\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"dom\": '&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&gt;'\n\t *      } );\n\t *    } );\n\t */\n\t\"sDom\": \"lfrtip\",\n\n\n\t/**\n\t * Search delay option. This will throttle full table searches that use the\n\t * DataTables provided search input element (it does not effect calls to\n\t * `dt-api search()`, providing a delay before the search is made.\n\t *  @type integer\n\t *  @default 0\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.searchDelay\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"searchDelay\": 200\n\t *      } );\n\t *    } )\n\t */\n\t\"searchDelay\": null,\n\n\n\t/**\n\t * DataTables features six different built-in options for the buttons to\n\t * display for pagination control:\n\t *\n\t * * `numbers` - Page number buttons only\n\t * * `simple` - 'Previous' and 'Next' buttons only\n\t * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n\t * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n\t * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\n\t * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\n\t *  \n\t * Further methods can be added using {@link DataTable.ext.oPagination}.\n\t *  @type string\n\t *  @default simple_numbers\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.pagingType\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"pagingType\": \"full_numbers\"\n\t *      } );\n\t *    } )\n\t */\n\t\"sPaginationType\": \"simple_numbers\",\n\n\n\t/**\n\t * Enable horizontal scrolling. When a table is too wide to fit into a\n\t * certain layout, or you have a large number of columns in the table, you\n\t * can enable x-scrolling to show the table in a viewport, which can be\n\t * scrolled. This property can be `true` which will allow the table to\n\t * scroll horizontally when needed, or any CSS unit, or a number (in which\n\t * case it will be treated as a pixel measurement). Setting as simply `true`\n\t * is recommended.\n\t *  @type boolean|string\n\t *  @default <i>blank string - i.e. disabled</i>\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.scrollX\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"scrollX\": true,\n\t *        \"scrollCollapse\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"sScrollX\": \"\",\n\n\n\t/**\n\t * This property can be used to force a DataTable to use more width than it\n\t * might otherwise do when x-scrolling is enabled. For example if you have a\n\t * table which requires to be well spaced, this parameter is useful for\n\t * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n\t * any CSS unit, or a number (in which case it will be treated as a pixel\n\t * measurement).\n\t *  @type string\n\t *  @default <i>blank string - i.e. disabled</i>\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.scrollXInner\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"scrollX\": \"100%\",\n\t *        \"scrollXInner\": \"110%\"\n\t *      } );\n\t *    } );\n\t */\n\t\"sScrollXInner\": \"\",\n\n\n\t/**\n\t * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n\t * to the given height, and enable scrolling for any data which overflows the\n\t * current viewport. This can be used as an alternative to paging to display\n\t * a lot of data in a small area (although paging and scrolling can both be\n\t * enabled at the same time). This property can be any CSS unit, or a number\n\t * (in which case it will be treated as a pixel measurement).\n\t *  @type string\n\t *  @default <i>blank string - i.e. disabled</i>\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.scrollY\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"scrollY\": \"200px\",\n\t *        \"paginate\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"sScrollY\": \"\",\n\n\n\t/**\n\t * __Deprecated__ The functionality provided by this parameter has now been\n\t * superseded by that provided through `ajax`, which should be used instead.\n\t *\n\t * Set the HTTP method that is used to make the Ajax call for server-side\n\t * processing or Ajax sourced data.\n\t *  @type string\n\t *  @default GET\n\t *\n\t *  @dtopt Options\n\t *  @dtopt Server-side\n\t *  @name DataTable.defaults.serverMethod\n\t *\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t */\n\t\"sServerMethod\": \"GET\",\n\n\n\t/**\n\t * DataTables makes use of renderers when displaying HTML elements for\n\t * a table. These renderers can be added or modified by plug-ins to\n\t * generate suitable mark-up for a site. For example the Bootstrap\n\t * integration plug-in for DataTables uses a paging button renderer to\n\t * display pagination buttons in the mark-up required by Bootstrap.\n\t *\n\t * For further information about the renderers available see\n\t * DataTable.ext.renderer\n\t *  @type string|object\n\t *  @default null\n\t *\n\t *  @name DataTable.defaults.renderer\n\t *\n\t */\n\t\"renderer\": null,\n\n\n\t/**\n\t * Set the data property name that DataTables should use to get a row's id\n\t * to set as the `id` property in the node.\n\t *  @type string\n\t *  @default DT_RowId\n\t *\n\t *  @name DataTable.defaults.rowId\n\t */\n\t\"rowId\": \"DT_RowId\"\n};\n\n_fnHungarianMap( DataTable.defaults );\n\n\n\n/*\n * Developer note - See note in model.defaults.js about the use of Hungarian\n * notation and camel case.\n */\n\n/**\n * Column options that can be given to DataTables at initialisation time.\n *  @namespace\n */\nDataTable.defaults.column = {\n\t/**\n\t * Define which column(s) an order will occur on for this column. This\n\t * allows a column's ordering to take multiple columns into account when\n\t * doing a sort or use the data from a different column. For example first\n\t * name / last name columns make sense to do a multi-column sort over the\n\t * two columns.\n\t *  @type array|int\n\t *  @default null <i>Takes the value of the column index automatically</i>\n\t *\n\t *  @name DataTable.defaults.column.orderData\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"orderData\": [ 0, 1 ], \"targets\": [ 0 ] },\n\t *          { \"orderData\": [ 1, 0 ], \"targets\": [ 1 ] },\n\t *          { \"orderData\": 2, \"targets\": [ 2 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"orderData\": [ 0, 1 ] },\n\t *          { \"orderData\": [ 1, 0 ] },\n\t *          { \"orderData\": 2 },\n\t *          null,\n\t *          null\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"aDataSort\": null,\n\t\"iDataSort\": -1,\n\n\n\t/**\n\t * You can control the default ordering direction, and even alter the\n\t * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n\t * using this parameter.\n\t *  @type array\n\t *  @default [ 'asc', 'desc' ]\n\t *\n\t *  @name DataTable.defaults.column.orderSequence\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"orderSequence\": [ \"asc\" ], \"targets\": [ 1 ] },\n\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ], \"targets\": [ 2 ] },\n\t *          { \"orderSequence\": [ \"desc\" ], \"targets\": [ 3 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          null,\n\t *          { \"orderSequence\": [ \"asc\" ] },\n\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ] },\n\t *          { \"orderSequence\": [ \"desc\" ] },\n\t *          null\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"asSorting\": [ 'asc', 'desc' ],\n\n\n\t/**\n\t * Enable or disable filtering on the data in this column.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @name DataTable.defaults.column.searchable\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"searchable\": false, \"targets\": [ 0 ] }\n\t *        ] } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"searchable\": false },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ] } );\n\t *    } );\n\t */\n\t\"bSearchable\": true,\n\n\n\t/**\n\t * Enable or disable ordering on this column.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @name DataTable.defaults.column.orderable\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"orderable\": false, \"targets\": [ 0 ] }\n\t *        ] } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"orderable\": false },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ] } );\n\t *    } );\n\t */\n\t\"bSortable\": true,\n\n\n\t/**\n\t * Enable or disable the display of this column.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @name DataTable.defaults.column.visible\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"visible\": false, \"targets\": [ 0 ] }\n\t *        ] } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"visible\": false },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ] } );\n\t *    } );\n\t */\n\t\"bVisible\": true,\n\n\n\t/**\n\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t * allowing you to modify the DOM element (add background colour for example) when the\n\t * element is available.\n\t *  @type function\n\t *  @param {element} td The TD node that has been created\n\t *  @param {*} cellData The Data for the cell\n\t *  @param {array|object} rowData The data for the whole row\n\t *  @param {int} row The row index for the aoData data store\n\t *  @param {int} col The column index for aoColumns\n\t *\n\t *  @name DataTable.defaults.column.createdCell\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [3],\n\t *          \"createdCell\": function (td, cellData, rowData, row, col) {\n\t *            if ( cellData == \"1.7\" ) {\n\t *              $(td).css('color', 'blue')\n\t *            }\n\t *          }\n\t *        } ]\n\t *      });\n\t *    } );\n\t */\n\t\"fnCreatedCell\": null,\n\n\n\t/**\n\t * This parameter has been replaced by `data` in DataTables to ensure naming\n\t * consistency. `dataProp` can still be used, as there is backwards\n\t * compatibility in DataTables for this option, but it is strongly\n\t * recommended that you use `data` in preference to `dataProp`.\n\t *  @name DataTable.defaults.column.dataProp\n\t */\n\n\n\t/**\n\t * This property can be used to read data from any data source property,\n\t * including deeply nested objects / properties. `data` can be given in a\n\t * number of different ways which effect its behaviour:\n\t *\n\t * * `integer` - treated as an array index for the data source. This is the\n\t *   default that DataTables uses (incrementally increased for each column).\n\t * * `string` - read an object property from the data source. There are\n\t *   three 'special' options that can be used in the string to alter how\n\t *   DataTables reads the data from the source object:\n\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t *      Javascript to read from nested objects, so to can the options\n\t *      specified in `data`. For example: `browser.version` or\n\t *      `browser.name`. If your object parameter name contains a period, use\n\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t *      from and array source, joining the data with the characters provided\n\t *      between the two brackets. For example: `name[, ]` would provide a\n\t *      comma-space separated list from the source array. If no characters\n\t *      are provided between the brackets, the original array source is\n\t *      returned.\n\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t *      execute a function of the name given. For example: `browser()` for a\n\t *      simple function on the data source, `browser.version()` for a\n\t *      function in a nested property or even `browser().version` to get an\n\t *      object property if the function called returns an object. Note that\n\t *      function notation is recommended for use in `render` rather than\n\t *      `data` as it is much simpler to use as a renderer.\n\t * * `null` - use the original data source for the row rather than plucking\n\t *   data directly from it. This action has effects on two other\n\t *   initialisation options:\n\t *    * `defaultContent` - When null is given as the `data` option and\n\t *      `defaultContent` is specified for the column, the value defined by\n\t *      `defaultContent` will be used for the cell.\n\t *    * `render` - When null is used for the `data` option and the `render`\n\t *      option is specified for the column, the whole data source for the\n\t *      row is used for the renderer.\n\t * * `function` - the function given will be executed whenever DataTables\n\t *   needs to set or get the data for a cell in the column. The function\n\t *   takes three parameters:\n\t *    * Parameters:\n\t *      * `{array|object}` The data source for the row\n\t *      * `{string}` The type call data requested - this will be 'set' when\n\t *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n\t *        when gathering data. Note that when `undefined` is given for the\n\t *        type DataTables expects to get the raw data for the object back<\n\t *      * `{*}` Data to set when the second parameter is 'set'.\n\t *    * Return:\n\t *      * The return value from the function is not required when 'set' is\n\t *        the type of call, but otherwise the return is what will be used\n\t *        for the data requested.\n\t *\n\t * Note that `data` is a getter and setter option. If you just require\n\t * formatting of data for output, you will likely want to use `render` which\n\t * is simply a getter and thus simpler to use.\n\t *\n\t * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n\t * name change reflects the flexibility of this property and is consistent\n\t * with the naming of mRender. If 'mDataProp' is given, then it will still\n\t * be used by DataTables, as it automatically maps the old name to the new\n\t * if required.\n\t *\n\t *  @type string|int|function|null\n\t *  @default null <i>Use automatically calculated column index</i>\n\t *\n\t *  @name DataTable.defaults.column.data\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Read table data from objects\n\t *    // JSON structure for each row:\n\t *    //   {\n\t *    //      \"engine\": {value},\n\t *    //      \"browser\": {value},\n\t *    //      \"platform\": {value},\n\t *    //      \"version\": {value},\n\t *    //      \"grade\": {value}\n\t *    //   }\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"ajaxSource\": \"sources/objects.txt\",\n\t *        \"columns\": [\n\t *          { \"data\": \"engine\" },\n\t *          { \"data\": \"browser\" },\n\t *          { \"data\": \"platform\" },\n\t *          { \"data\": \"version\" },\n\t *          { \"data\": \"grade\" }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Read information from deeply nested objects\n\t *    // JSON structure for each row:\n\t *    //   {\n\t *    //      \"engine\": {value},\n\t *    //      \"browser\": {value},\n\t *    //      \"platform\": {\n\t *    //         \"inner\": {value}\n\t *    //      },\n\t *    //      \"details\": [\n\t *    //         {value}, {value}\n\t *    //      ]\n\t *    //   }\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t *        \"columns\": [\n\t *          { \"data\": \"engine\" },\n\t *          { \"data\": \"browser\" },\n\t *          { \"data\": \"platform.inner\" },\n\t *          { \"data\": \"details.0\" },\n\t *          { \"data\": \"details.1\" }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `data` as a function to provide different information for\n\t *    // sorting, filtering and display. In this case, currency (price)\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [ 0 ],\n\t *          \"data\": function ( source, type, val ) {\n\t *            if (type === 'set') {\n\t *              source.price = val;\n\t *              // Store the computed display and filter values for efficiency\n\t *              source.price_display = val==\"\" ? \"\" : \"$\"+numberFormat(val);\n\t *              source.price_filter  = val==\"\" ? \"\" : \"$\"+numberFormat(val)+\" \"+val;\n\t *              return;\n\t *            }\n\t *            else if (type === 'display') {\n\t *              return source.price_display;\n\t *            }\n\t *            else if (type === 'filter') {\n\t *              return source.price_filter;\n\t *            }\n\t *            // 'sort', 'type' and undefined all just use the integer\n\t *            return source.price;\n\t *          }\n\t *        } ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using default content\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [ 0 ],\n\t *          \"data\": null,\n\t *          \"defaultContent\": \"Click to edit\"\n\t *        } ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using array notation - outputting a list from an array\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [ 0 ],\n\t *          \"data\": \"name[, ]\"\n\t *        } ]\n\t *      } );\n\t *    } );\n\t *\n\t */\n\t\"mData\": null,\n\n\n\t/**\n\t * This property is the rendering partner to `data` and it is suggested that\n\t * when you want to manipulate data for display (including filtering,\n\t * sorting etc) without altering the underlying data for the table, use this\n\t * property. `render` can be considered to be the the read only companion to\n\t * `data` which is read / write (then as such more complex). Like `data`\n\t * this option can be given in a number of different ways to effect its\n\t * behaviour:\n\t *\n\t * * `integer` - treated as an array index for the data source. This is the\n\t *   default that DataTables uses (incrementally increased for each column).\n\t * * `string` - read an object property from the data source. There are\n\t *   three 'special' options that can be used in the string to alter how\n\t *   DataTables reads the data from the source object:\n\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t *      Javascript to read from nested objects, so to can the options\n\t *      specified in `data`. For example: `browser.version` or\n\t *      `browser.name`. If your object parameter name contains a period, use\n\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t *      from and array source, joining the data with the characters provided\n\t *      between the two brackets. For example: `name[, ]` would provide a\n\t *      comma-space separated list from the source array. If no characters\n\t *      are provided between the brackets, the original array source is\n\t *      returned.\n\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t *      execute a function of the name given. For example: `browser()` for a\n\t *      simple function on the data source, `browser.version()` for a\n\t *      function in a nested property or even `browser().version` to get an\n\t *      object property if the function called returns an object.\n\t * * `object` - use different data for the different data types requested by\n\t *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n\t *   of the object is the data type the property refers to and the value can\n\t *   defined using an integer, string or function using the same rules as\n\t *   `render` normally does. Note that an `_` option _must_ be specified.\n\t *   This is the default value to use if you haven't specified a value for\n\t *   the data type requested by DataTables.\n\t * * `function` - the function given will be executed whenever DataTables\n\t *   needs to set or get the data for a cell in the column. The function\n\t *   takes three parameters:\n\t *    * Parameters:\n\t *      * {array|object} The data source for the row (based on `data`)\n\t *      * {string} The type call data requested - this will be 'filter',\n\t *        'display', 'type' or 'sort'.\n\t *      * {array|object} The full data source for the row (not based on\n\t *        `data`)\n\t *    * Return:\n\t *      * The return value from the function is what will be used for the\n\t *        data requested.\n\t *\n\t *  @type string|int|function|object|null\n\t *  @default null Use the data source value.\n\t *\n\t *  @name DataTable.defaults.column.render\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Create a comma separated list from an array of objects\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t *        \"columns\": [\n\t *          { \"data\": \"engine\" },\n\t *          { \"data\": \"browser\" },\n\t *          {\n\t *            \"data\": \"platform\",\n\t *            \"render\": \"[, ].name\"\n\t *          }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Execute a function to obtain data\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [ 0 ],\n\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t *          \"render\": \"browserName()\"\n\t *        } ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // As an object, extracting different data for the different types\n\t *    // This would be used with a data source such as:\n\t *    //   { \"phone\": 5552368, \"phone_filter\": \"5552368 555-2368\", \"phone_display\": \"555-2368\" }\n\t *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`\n\t *    // (which has both forms) is used for filtering for if a user inputs either format, while\n\t *    // the formatted phone number is the one that is shown in the table.\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [ 0 ],\n\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t *          \"render\": {\n\t *            \"_\": \"phone\",\n\t *            \"filter\": \"phone_filter\",\n\t *            \"display\": \"phone_display\"\n\t *          }\n\t *        } ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Use as a function to create a link from the data source\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [ 0 ],\n\t *          \"data\": \"download_link\",\n\t *          \"render\": function ( data, type, full ) {\n\t *            return '<a href=\"'+data+'\">Download</a>';\n\t *          }\n\t *        } ]\n\t *      } );\n\t *    } );\n\t */\n\t\"mRender\": null,\n\n\n\t/**\n\t * Change the cell type created for the column - either TD cells or TH cells. This\n\t * can be useful as TH cells have semantic meaning in the table body, allowing them\n\t * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n\t *  @type string\n\t *  @default td\n\t *\n\t *  @name DataTable.defaults.column.cellType\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Make the first column use TH cells\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [ 0 ],\n\t *          \"cellType\": \"th\"\n\t *        } ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sCellType\": \"td\",\n\n\n\t/**\n\t * Class to give to each cell in this column.\n\t *  @type string\n\t *  @default <i>Empty string</i>\n\t *\n\t *  @name DataTable.defaults.column.class\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"class\": \"my_class\", \"targets\": [ 0 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"class\": \"my_class\" },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sClass\": \"\",\n\n\t/**\n\t * When DataTables calculates the column widths to assign to each column,\n\t * it finds the longest string in each column and then constructs a\n\t * temporary table and reads the widths from that. The problem with this\n\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t * string - thus the calculation can go wrong (doing it properly and putting\n\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t * a \"work around\" we provide this option. It will append its value to the\n\t * text that is found to be the longest string for the column - i.e. padding.\n\t * Generally you shouldn't need this!\n\t *  @type string\n\t *  @default <i>Empty string<i>\n\t *\n\t *  @name DataTable.defaults.column.contentPadding\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          {\n\t *            \"contentPadding\": \"mmm\"\n\t *          }\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sContentPadding\": \"\",\n\n\n\t/**\n\t * Allows a default value to be given for a column's data, and will be used\n\t * whenever a null data source is encountered (this can be because `data`\n\t * is set to null, or because the data source itself is null).\n\t *  @type string\n\t *  @default null\n\t *\n\t *  @name DataTable.defaults.column.defaultContent\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          {\n\t *            \"data\": null,\n\t *            \"defaultContent\": \"Edit\",\n\t *            \"targets\": [ -1 ]\n\t *          }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          {\n\t *            \"data\": null,\n\t *            \"defaultContent\": \"Edit\"\n\t *          }\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sDefaultContent\": null,\n\n\n\t/**\n\t * This parameter is only used in DataTables' server-side processing. It can\n\t * be exceptionally useful to know what columns are being displayed on the\n\t * client side, and to map these to database fields. When defined, the names\n\t * also allow DataTables to reorder information from the server if it comes\n\t * back in an unexpected order (i.e. if you switch your columns around on the\n\t * client-side, your server-side code does not also need updating).\n\t *  @type string\n\t *  @default <i>Empty string</i>\n\t *\n\t *  @name DataTable.defaults.column.name\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"name\": \"engine\", \"targets\": [ 0 ] },\n\t *          { \"name\": \"browser\", \"targets\": [ 1 ] },\n\t *          { \"name\": \"platform\", \"targets\": [ 2 ] },\n\t *          { \"name\": \"version\", \"targets\": [ 3 ] },\n\t *          { \"name\": \"grade\", \"targets\": [ 4 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"name\": \"engine\" },\n\t *          { \"name\": \"browser\" },\n\t *          { \"name\": \"platform\" },\n\t *          { \"name\": \"version\" },\n\t *          { \"name\": \"grade\" }\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sName\": \"\",\n\n\n\t/**\n\t * Defines a data source type for the ordering which can be used to read\n\t * real-time information from the table (updating the internally cached\n\t * version) prior to ordering. This allows ordering to occur on user\n\t * editable elements such as form inputs.\n\t *  @type string\n\t *  @default std\n\t *\n\t *  @name DataTable.defaults.column.orderDataType\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"orderDataType\": \"dom-text\", \"targets\": [ 2, 3 ] },\n\t *          { \"type\": \"numeric\", \"targets\": [ 3 ] },\n\t *          { \"orderDataType\": \"dom-select\", \"targets\": [ 4 ] },\n\t *          { \"orderDataType\": \"dom-checkbox\", \"targets\": [ 5 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          null,\n\t *          null,\n\t *          { \"orderDataType\": \"dom-text\" },\n\t *          { \"orderDataType\": \"dom-text\", \"type\": \"numeric\" },\n\t *          { \"orderDataType\": \"dom-select\" },\n\t *          { \"orderDataType\": \"dom-checkbox\" }\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sSortDataType\": \"std\",\n\n\n\t/**\n\t * The title of this column.\n\t *  @type string\n\t *  @default null <i>Derived from the 'TH' value for this column in the\n\t *    original HTML table.</i>\n\t *\n\t *  @name DataTable.defaults.column.title\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"title\": \"My column title\", \"targets\": [ 0 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"title\": \"My column title\" },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sTitle\": null,\n\n\n\t/**\n\t * The type allows you to specify how the data for this column will be\n\t * ordered. Four types (string, numeric, date and html (which will strip\n\t * HTML tags before ordering)) are currently available. Note that only date\n\t * formats understood by Javascript's Date() object will be accepted as type\n\t * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n\t * 'numeric', 'date' or 'html' (by default). Further types can be adding\n\t * through plug-ins.\n\t *  @type string\n\t *  @default null <i>Auto-detected from raw data</i>\n\t *\n\t *  @name DataTable.defaults.column.type\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"type\": \"html\", \"targets\": [ 0 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"type\": \"html\" },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sType\": null,\n\n\n\t/**\n\t * Defining the width of the column, this parameter may take any CSS value\n\t * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n\t * been given a specific width through this interface ensuring that the table\n\t * remains readable.\n\t *  @type string\n\t *  @default null <i>Automatic</i>\n\t *\n\t *  @name DataTable.defaults.column.width\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"width\": \"20%\", \"targets\": [ 0 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"width\": \"20%\" },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sWidth\": null\n};\n\n_fnHungarianMap( DataTable.defaults.column );\n\n\n\n/**\n * DataTables settings object - this holds all the information needed for a\n * given table, including configuration, data and current application of the\n * table options. DataTables does not have a single instance for each DataTable\n * with the settings attached to that instance, but rather instances of the\n * DataTable \"class\" are created on-the-fly as needed (typically by a\n * $().dataTable() call) and the settings object is then applied to that\n * instance.\n *\n * Note that this object is related to {@link DataTable.defaults} but this\n * one is the internal data store for DataTables's cache of columns. It should\n * NOT be manipulated outside of DataTables. Any configuration should be done\n * through the initialisation options.\n *  @namespace\n *  @todo Really should attach the settings object to individual instances so we\n *    don't need to create new instances on each $().dataTable() call (if the\n *    table already exists). It would also save passing oSettings around and\n *    into every single function. However, this is a very significant\n *    architecture change for DataTables and will almost certainly break\n *    backwards compatibility with older installations. This is something that\n *    will be done in 2.0.\n */\nDataTable.models.oSettings = {\n\t/**\n\t * Primary features of DataTables and their enablement state.\n\t *  @namespace\n\t */\n\t\"oFeatures\": {\n\n\t\t/**\n\t\t * Flag to say if DataTables should automatically try to calculate the\n\t\t * optimum table and columns widths (true) or not (false).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bAutoWidth\": null,\n\n\t\t/**\n\t\t * Delay the creation of TR and TD elements until they are actually\n\t\t * needed by a driven page draw. This can give a significant speed\n\t\t * increase for Ajax source and Javascript source data, but makes no\n\t\t * difference at all for DOM and server-side processing tables.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bDeferRender\": null,\n\n\t\t/**\n\t\t * Enable filtering on the table or not. Note that if this is disabled\n\t\t * then there is no filtering at all on the table, including fnFilter.\n\t\t * To just remove the filtering input use sDom and remove the 'f' option.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bFilter\": null,\n\n\t\t/**\n\t\t * Table information element (the 'Showing x of y records' div) enable\n\t\t * flag.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bInfo\": null,\n\n\t\t/**\n\t\t * Present a user control allowing the end user to change the page size\n\t\t * when pagination is enabled.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bLengthChange\": null,\n\n\t\t/**\n\t\t * Pagination enabled or not. Note that if this is disabled then length\n\t\t * changing must also be disabled.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bPaginate\": null,\n\n\t\t/**\n\t\t * Processing indicator enable flag whenever DataTables is enacting a\n\t\t * user request - typically an Ajax request for server-side processing.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bProcessing\": null,\n\n\t\t/**\n\t\t * Server-side processing enabled flag - when enabled DataTables will\n\t\t * get all data from the server for every draw - there is no filtering,\n\t\t * sorting or paging done on the client-side.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bServerSide\": null,\n\n\t\t/**\n\t\t * Sorting enablement flag.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSort\": null,\n\n\t\t/**\n\t\t * Multi-column sorting\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortMulti\": null,\n\n\t\t/**\n\t\t * Apply a class to the columns which are being sorted to provide a\n\t\t * visual highlight or not. This can slow things down when enabled since\n\t\t * there is a lot of DOM interaction.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortClasses\": null,\n\n\t\t/**\n\t\t * State saving enablement flag.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bStateSave\": null\n\t},\n\n\n\t/**\n\t * Scrolling settings for a table.\n\t *  @namespace\n\t */\n\t\"oScroll\": {\n\t\t/**\n\t\t * When the table is shorter in height than sScrollY, collapse the\n\t\t * table container down to the height of the table (when true).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bCollapse\": null,\n\n\t\t/**\n\t\t * Width of the scrollbar for the web-browser's platform. Calculated\n\t\t * during table initialisation.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"iBarWidth\": 0,\n\n\t\t/**\n\t\t * Viewport width for horizontal scrolling. Horizontal scrolling is\n\t\t * disabled if an empty string.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sX\": null,\n\n\t\t/**\n\t\t * Width to expand the table to when using x-scrolling. Typically you\n\t\t * should not need to use this.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @deprecated\n\t\t */\n\t\t\"sXInner\": null,\n\n\t\t/**\n\t\t * Viewport height for vertical scrolling. Vertical scrolling is disabled\n\t\t * if an empty string.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sY\": null\n\t},\n\n\t/**\n\t * Language information for the table.\n\t *  @namespace\n\t *  @extends DataTable.defaults.oLanguage\n\t */\n\t\"oLanguage\": {\n\t\t/**\n\t\t * Information callback function. See\n\t\t * {@link DataTable.defaults.fnInfoCallback}\n\t\t *  @type function\n\t\t *  @default null\n\t\t */\n\t\t\"fnInfoCallback\": null\n\t},\n\n\t/**\n\t * Browser support parameters\n\t *  @namespace\n\t */\n\t\"oBrowser\": {\n\t\t/**\n\t\t * Indicate if the browser incorrectly calculates width:100% inside a\n\t\t * scrolling element (IE6/7)\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bScrollOversize\": false,\n\n\t\t/**\n\t\t * Determine if the vertical scrollbar is on the right or left of the\n\t\t * scrolling container - needed for rtl language layout, although not\n\t\t * all browsers move the scrollbar (Safari).\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bScrollbarLeft\": false,\n\n\t\t/**\n\t\t * Flag for if `getBoundingClientRect` is fully supported or not\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bBounding\": false,\n\n\t\t/**\n\t\t * Browser scrollbar width\n\t\t *  @type integer\n\t\t *  @default 0\n\t\t */\n\t\t\"barWidth\": 0\n\t},\n\n\n\t\"ajax\": null,\n\n\n\t/**\n\t * Array referencing the nodes which are used for the features. The\n\t * parameters of this object match what is allowed by sDom - i.e.\n\t *   <ul>\n\t *     <li>'l' - Length changing</li>\n\t *     <li>'f' - Filtering input</li>\n\t *     <li>'t' - The table!</li>\n\t *     <li>'i' - Information</li>\n\t *     <li>'p' - Pagination</li>\n\t *     <li>'r' - pRocessing</li>\n\t *   </ul>\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aanFeatures\": [],\n\n\t/**\n\t * Store data information - see {@link DataTable.models.oRow} for detailed\n\t * information.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoData\": [],\n\n\t/**\n\t * Array of indexes which are in the current display (after filtering etc)\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aiDisplay\": [],\n\n\t/**\n\t * Array of indexes for display - no filtering\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aiDisplayMaster\": [],\n\n\t/**\n\t * Map of row ids to data indexes\n\t *  @type object\n\t *  @default {}\n\t */\n\t\"aIds\": {},\n\n\t/**\n\t * Store information about each column that is in use\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoColumns\": [],\n\n\t/**\n\t * Store information about the table's header\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoHeader\": [],\n\n\t/**\n\t * Store information about the table's footer\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoFooter\": [],\n\n\t/**\n\t * Store the applied global search information in case we want to force a\n\t * research or compare the old search to a new one.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @namespace\n\t *  @extends DataTable.models.oSearch\n\t */\n\t\"oPreviousSearch\": {},\n\n\t/**\n\t * Store the applied search for each column - see\n\t * {@link DataTable.models.oSearch} for the format that is used for the\n\t * filtering information for each column.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoPreSearchCols\": [],\n\n\t/**\n\t * Sorting that is applied to the table. Note that the inner arrays are\n\t * used in the following manner:\n\t * <ul>\n\t *   <li>Index 0 - column number</li>\n\t *   <li>Index 1 - current sorting direction</li>\n\t * </ul>\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type array\n\t *  @todo These inner arrays should really be objects\n\t */\n\t\"aaSorting\": null,\n\n\t/**\n\t * Sorting that is always applied to the table (i.e. prefixed in front of\n\t * aaSorting).\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aaSortingFixed\": [],\n\n\t/**\n\t * Classes to use for the striping of a table.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"asStripeClasses\": null,\n\n\t/**\n\t * If restoring a table - we should restore its striping classes as well\n\t *  @type array\n\t *  @default []\n\t */\n\t\"asDestroyStripes\": [],\n\n\t/**\n\t * If restoring a table - we should restore its width\n\t *  @type int\n\t *  @default 0\n\t */\n\t\"sDestroyWidth\": 0,\n\n\t/**\n\t * Callback functions array for every time a row is inserted (i.e. on a draw).\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoRowCallback\": [],\n\n\t/**\n\t * Callback functions for the header on each draw.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoHeaderCallback\": [],\n\n\t/**\n\t * Callback function for the footer on each draw.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoFooterCallback\": [],\n\n\t/**\n\t * Array of callback functions for draw callback functions\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoDrawCallback\": [],\n\n\t/**\n\t * Array of callback functions for row created function\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoRowCreatedCallback\": [],\n\n\t/**\n\t * Callback functions for just before the table is redrawn. A return of\n\t * false will be used to cancel the draw.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoPreDrawCallback\": [],\n\n\t/**\n\t * Callback functions for when the table has been initialised.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoInitComplete\": [],\n\n\n\t/**\n\t * Callbacks for modifying the settings to be stored for state saving, prior to\n\t * saving state.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoStateSaveParams\": [],\n\n\t/**\n\t * Callbacks for modifying the settings that have been stored for state saving\n\t * prior to using the stored values to restore the state.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoStateLoadParams\": [],\n\n\t/**\n\t * Callbacks for operating on the settings object once the saved state has been\n\t * loaded\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoStateLoaded\": [],\n\n\t/**\n\t * Cache the table ID for quick access\n\t *  @type string\n\t *  @default <i>Empty string</i>\n\t */\n\t\"sTableId\": \"\",\n\n\t/**\n\t * The TABLE node for the main table\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTable\": null,\n\n\t/**\n\t * Permanent ref to the thead element\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTHead\": null,\n\n\t/**\n\t * Permanent ref to the tfoot element - if it exists\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTFoot\": null,\n\n\t/**\n\t * Permanent ref to the tbody element\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTBody\": null,\n\n\t/**\n\t * Cache the wrapper node (contains all DataTables controlled elements)\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTableWrapper\": null,\n\n\t/**\n\t * Indicate if when using server-side processing the loading of data\n\t * should be deferred until the second draw.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type boolean\n\t *  @default false\n\t */\n\t\"bDeferLoading\": false,\n\n\t/**\n\t * Indicate if all required information has been read in\n\t *  @type boolean\n\t *  @default false\n\t */\n\t\"bInitialised\": false,\n\n\t/**\n\t * Information about open rows. Each object in the array has the parameters\n\t * 'nTr' and 'nParent'\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoOpenRows\": [],\n\n\t/**\n\t * Dictate the positioning of DataTables' control elements - see\n\t * {@link DataTable.model.oInit.sDom}.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sDom\": null,\n\n\t/**\n\t * Search delay (in mS)\n\t *  @type integer\n\t *  @default null\n\t */\n\t\"searchDelay\": null,\n\n\t/**\n\t * Which type of pagination should be used.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type string\n\t *  @default two_button\n\t */\n\t\"sPaginationType\": \"two_button\",\n\n\t/**\n\t * The state duration (for `stateSave`) in seconds.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type int\n\t *  @default 0\n\t */\n\t\"iStateDuration\": 0,\n\n\t/**\n\t * Array of callback functions for state saving. Each array element is an\n\t * object with the following parameters:\n\t *   <ul>\n\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t *       and the JSON string to save that has been thus far created. Returns\n\t *       a JSON string to be inserted into a json object\n\t *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n\t *     <li>string:sName - name of callback</li>\n\t *   </ul>\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoStateSave\": [],\n\n\t/**\n\t * Array of callback functions for state loading. Each array element is an\n\t * object with the following parameters:\n\t *   <ul>\n\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t *       and the object stored. May return false to cancel state loading</li>\n\t *     <li>string:sName - name of callback</li>\n\t *   </ul>\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoStateLoad\": [],\n\n\t/**\n\t * State that was saved. Useful for back reference\n\t *  @type object\n\t *  @default null\n\t */\n\t\"oSavedState\": null,\n\n\t/**\n\t * State that was loaded. Useful for back reference\n\t *  @type object\n\t *  @default null\n\t */\n\t\"oLoadedState\": null,\n\n\t/**\n\t * Source url for AJAX data for the table.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sAjaxSource\": null,\n\n\t/**\n\t * Property from a given object from which to read the table data from. This\n\t * can be an empty string (when not server-side processing), in which case\n\t * it is  assumed an an array is given directly.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type string\n\t */\n\t\"sAjaxDataProp\": null,\n\n\t/**\n\t * The last jQuery XHR object that was used for server-side data gathering.\n\t * This can be used for working with the XHR information in one of the\n\t * callbacks\n\t *  @type object\n\t *  @default null\n\t */\n\t\"jqXHR\": null,\n\n\t/**\n\t * JSON returned from the server in the last Ajax request\n\t *  @type object\n\t *  @default undefined\n\t */\n\t\"json\": undefined,\n\n\t/**\n\t * Data submitted as part of the last Ajax request\n\t *  @type object\n\t *  @default undefined\n\t */\n\t\"oAjaxData\": undefined,\n\n\t/**\n\t * Function to get the server-side data.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type function\n\t */\n\t\"fnServerData\": null,\n\n\t/**\n\t * Functions which are called prior to sending an Ajax request so extra\n\t * parameters can easily be sent to the server\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoServerParams\": [],\n\n\t/**\n\t * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n\t * required).\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type string\n\t */\n\t\"sServerMethod\": null,\n\n\t/**\n\t * Format numbers for display.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type function\n\t */\n\t\"fnFormatNumber\": null,\n\n\t/**\n\t * List of options that can be used for the user selectable length menu.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aLengthMenu\": null,\n\n\t/**\n\t * Counter for the draws that the table does. Also used as a tracker for\n\t * server-side processing\n\t *  @type int\n\t *  @default 0\n\t */\n\t\"iDraw\": 0,\n\n\t/**\n\t * Indicate if a redraw is being done - useful for Ajax\n\t *  @type boolean\n\t *  @default false\n\t */\n\t\"bDrawing\": false,\n\n\t/**\n\t * Draw index (iDraw) of the last error when parsing the returned data\n\t *  @type int\n\t *  @default -1\n\t */\n\t\"iDrawError\": -1,\n\n\t/**\n\t * Paging display length\n\t *  @type int\n\t *  @default 10\n\t */\n\t\"_iDisplayLength\": 10,\n\n\t/**\n\t * Paging start point - aiDisplay index\n\t *  @type int\n\t *  @default 0\n\t */\n\t\"_iDisplayStart\": 0,\n\n\t/**\n\t * Server-side processing - number of records in the result set\n\t * (i.e. before filtering), Use fnRecordsTotal rather than\n\t * this property to get the value of the number of records, regardless of\n\t * the server-side processing setting.\n\t *  @type int\n\t *  @default 0\n\t *  @private\n\t */\n\t\"_iRecordsTotal\": 0,\n\n\t/**\n\t * Server-side processing - number of records in the current display set\n\t * (i.e. after filtering). Use fnRecordsDisplay rather than\n\t * this property to get the value of the number of records, regardless of\n\t * the server-side processing setting.\n\t *  @type boolean\n\t *  @default 0\n\t *  @private\n\t */\n\t\"_iRecordsDisplay\": 0,\n\n\t/**\n\t * The classes to use for the table\n\t *  @type object\n\t *  @default {}\n\t */\n\t\"oClasses\": {},\n\n\t/**\n\t * Flag attached to the settings object so you can check in the draw\n\t * callback if filtering has been done in the draw. Deprecated in favour of\n\t * events.\n\t *  @type boolean\n\t *  @default false\n\t *  @deprecated\n\t */\n\t\"bFiltered\": false,\n\n\t/**\n\t * Flag attached to the settings object so you can check in the draw\n\t * callback if sorting has been done in the draw. Deprecated in favour of\n\t * events.\n\t *  @type boolean\n\t *  @default false\n\t *  @deprecated\n\t */\n\t\"bSorted\": false,\n\n\t/**\n\t * Indicate that if multiple rows are in the header and there is more than\n\t * one unique cell per column, if the top one (true) or bottom one (false)\n\t * should be used for sorting / title by DataTables.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type boolean\n\t */\n\t\"bSortCellsTop\": null,\n\n\t/**\n\t * Initialisation object that is used for the table\n\t *  @type object\n\t *  @default null\n\t */\n\t\"oInit\": null,\n\n\t/**\n\t * Destroy callback functions - for plug-ins to attach themselves to the\n\t * destroy so they can clean up markup and events.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoDestroyCallback\": [],\n\n\n\t/**\n\t * Get the number of records in the current record set, before filtering\n\t *  @type function\n\t */\n\t\"fnRecordsTotal\": function ()\n\t{\n\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\tthis._iRecordsTotal * 1 :\n\t\t\tthis.aiDisplayMaster.length;\n\t},\n\n\t/**\n\t * Get the number of records in the current record set, after filtering\n\t *  @type function\n\t */\n\t\"fnRecordsDisplay\": function ()\n\t{\n\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\tthis._iRecordsDisplay * 1 :\n\t\t\tthis.aiDisplay.length;\n\t},\n\n\t/**\n\t * Get the display end point - aiDisplay index\n\t *  @type function\n\t */\n\t\"fnDisplayEnd\": function ()\n\t{\n\t\tvar\n\t\t\tlen      = this._iDisplayLength,\n\t\t\tstart    = this._iDisplayStart,\n\t\t\tcalc     = start + len,\n\t\t\trecords  = this.aiDisplay.length,\n\t\t\tfeatures = this.oFeatures,\n\t\t\tpaginate = features.bPaginate;\n\n\t\tif ( features.bServerSide ) {\n\t\t\treturn paginate === false || len === -1 ?\n\t\t\t\tstart + records :\n\t\t\t\tMath.min( start+len, this._iRecordsDisplay );\n\t\t}\n\t\telse {\n\t\t\treturn ! paginate || calc>records || len===-1 ?\n\t\t\t\trecords :\n\t\t\t\tcalc;\n\t\t}\n\t},\n\n\t/**\n\t * The DataTables object for this table\n\t *  @type object\n\t *  @default null\n\t */\n\t\"oInstance\": null,\n\n\t/**\n\t * Unique identifier for each instance of the DataTables object. If there\n\t * is an ID on the table node, then it takes that value, otherwise an\n\t * incrementing internal counter is used.\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sInstance\": null,\n\n\t/**\n\t * tabindex attribute value that is added to DataTables control elements, allowing\n\t * keyboard navigation of the table and its controls.\n\t */\n\t\"iTabIndex\": 0,\n\n\t/**\n\t * DIV container for the footer scrolling table if scrolling\n\t */\n\t\"nScrollHead\": null,\n\n\t/**\n\t * DIV container for the footer scrolling table if scrolling\n\t */\n\t\"nScrollFoot\": null,\n\n\t/**\n\t * Last applied sort\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aLastSort\": [],\n\n\t/**\n\t * Stored plug-in instances\n\t *  @type object\n\t *  @default {}\n\t */\n\t\"oPlugins\": {},\n\n\t/**\n\t * Function used to get a row's id from the row's data\n\t *  @type function\n\t *  @default null\n\t */\n\t\"rowIdFn\": null,\n\n\t/**\n\t * Data location where to store a row's id\n\t *  @type string\n\t *  @default null\n\t */\n\t\"rowId\": null\n};\n\n/**\n * Extension object for DataTables that is used to provide all extension\n * options.\n *\n * Note that the `DataTable.ext` object is available through\n * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n *  @namespace\n *  @extends DataTable.models.ext\n */\n\n\n/**\n * DataTables extensions\n * \n * This namespace acts as a collection area for plug-ins that can be used to\n * extend DataTables capabilities. Indeed many of the build in methods\n * use this method to provide their own capabilities (sorting methods for\n * example).\n *\n * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n * reasons\n *\n *  @namespace\n */\nDataTable.ext = _ext = {\n\t/**\n\t * Buttons. For use with the Buttons extension for DataTables. This is\n\t * defined here so other extensions can define buttons regardless of load\n\t * order. It is _not_ used by DataTables core.\n\t *\n\t *  @type object\n\t *  @default {}\n\t */\n\tbuttons: {},\n\n\n\t/**\n\t * Element class names\n\t *\n\t *  @type object\n\t *  @default {}\n\t */\n\tclasses: {},\n\n\n\t/**\n\t * DataTables build type (expanded by the download builder)\n\t *\n\t *  @type string\n\t */\n\tbuilder: \"-source-\",\n\n\n\t/**\n\t * Error reporting.\n\t * \n\t * How should DataTables report an error. Can take the value 'alert',\n\t * 'throw', 'none' or a function.\n\t *\n\t *  @type string|function\n\t *  @default alert\n\t */\n\terrMode: \"alert\",\n\n\n\t/**\n\t * Feature plug-ins.\n\t * \n\t * This is an array of objects which describe the feature plug-ins that are\n\t * available to DataTables. These feature plug-ins are then available for\n\t * use through the `dom` initialisation option.\n\t * \n\t * Each feature plug-in is described by an object which must have the\n\t * following properties:\n\t * \n\t * * `fnInit` - function that is used to initialise the plug-in,\n\t * * `cFeature` - a character so the feature can be enabled by the `dom`\n\t *   instillation option. This is case sensitive.\n\t *\n\t * The `fnInit` function has the following input parameters:\n\t *\n\t * 1. `{object}` DataTables settings object: see\n\t *    {@link DataTable.models.oSettings}\n\t *\n\t * And the following return is expected:\n\t * \n\t * * {node|null} The element which contains your feature. Note that the\n\t *   return may also be void if your plug-in does not require to inject any\n\t *   DOM elements into DataTables control (`dom`) - for example this might\n\t *   be useful when developing a plug-in which allows table control via\n\t *   keyboard entry\n\t *\n\t *  @type array\n\t *\n\t *  @example\n\t *    $.fn.dataTable.ext.features.push( {\n\t *      \"fnInit\": function( oSettings ) {\n\t *        return new TableTools( { \"oDTSettings\": oSettings } );\n\t *      },\n\t *      \"cFeature\": \"T\"\n\t *    } );\n\t */\n\tfeature: [],\n\n\n\t/**\n\t * Row searching.\n\t * \n\t * This method of searching is complimentary to the default type based\n\t * searching, and a lot more comprehensive as it allows you complete control\n\t * over the searching logic. Each element in this array is a function\n\t * (parameters described below) that is called for every row in the table,\n\t * and your logic decides if it should be included in the searching data set\n\t * or not.\n\t *\n\t * Searching functions have the following input parameters:\n\t *\n\t * 1. `{object}` DataTables settings object: see\n\t *    {@link DataTable.models.oSettings}\n\t * 2. `{array|object}` Data for the row to be processed (same as the\n\t *    original format that was passed in as the data source, or an array\n\t *    from a DOM data source\n\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n\t *    can be useful to retrieve the `TR` element if you need DOM interaction.\n\t *\n\t * And the following return is expected:\n\t *\n\t * * {boolean} Include the row in the searched result set (true) or not\n\t *   (false)\n\t *\n\t * Note that as with the main search ability in DataTables, technically this\n\t * is \"filtering\", since it is subtractive. However, for consistency in\n\t * naming we call it searching here.\n\t *\n\t *  @type array\n\t *  @default []\n\t *\n\t *  @example\n\t *    // The following example shows custom search being applied to the\n\t *    // fourth column (i.e. the data[3] index) based on two input values\n\t *    // from the end-user, matching the data in a certain range.\n\t *    $.fn.dataTable.ext.search.push(\n\t *      function( settings, data, dataIndex ) {\n\t *        var min = document.getElementById('min').value * 1;\n\t *        var max = document.getElementById('max').value * 1;\n\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n\t *\n\t *        if ( min == \"\" && max == \"\" ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min == \"\" && version < max ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min < version && \"\" == max ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min < version && version < max ) {\n\t *          return true;\n\t *        }\n\t *        return false;\n\t *      }\n\t *    );\n\t */\n\tsearch: [],\n\n\n\t/**\n\t * Selector extensions\n\t *\n\t * The `selector` option can be used to extend the options available for the\n\t * selector modifier options (`selector-modifier` object data type) that\n\t * each of the three built in selector types offer (row, column and cell +\n\t * their plural counterparts). For example the Select extension uses this\n\t * mechanism to provide an option to select only rows, columns and cells\n\t * that have been marked as selected by the end user (`{selected: true}`),\n\t * which can be used in conjunction with the existing built in selector\n\t * options.\n\t *\n\t * Each property is an array to which functions can be pushed. The functions\n\t * take three attributes:\n\t *\n\t * * Settings object for the host table\n\t * * Options object (`selector-modifier` object type)\n\t * * Array of selected item indexes\n\t *\n\t * The return is an array of the resulting item indexes after the custom\n\t * selector has been applied.\n\t *\n\t *  @type object\n\t */\n\tselector: {\n\t\tcell: [],\n\t\tcolumn: [],\n\t\trow: []\n\t},\n\n\n\t/**\n\t * Internal functions, exposed for used in plug-ins.\n\t * \n\t * Please note that you should not need to use the internal methods for\n\t * anything other than a plug-in (and even then, try to avoid if possible).\n\t * The internal function may change between releases.\n\t *\n\t *  @type object\n\t *  @default {}\n\t */\n\tinternal: {},\n\n\n\t/**\n\t * Legacy configuration options. Enable and disable legacy options that\n\t * are available in DataTables.\n\t *\n\t *  @type object\n\t */\n\tlegacy: {\n\t\t/**\n\t\t * Enable / disable DataTables 1.9 compatible server-side processing\n\t\t * requests\n\t\t *\n\t\t *  @type boolean\n\t\t *  @default null\n\t\t */\n\t\tajax: null\n\t},\n\n\n\t/**\n\t * Pagination plug-in methods.\n\t * \n\t * Each entry in this object is a function and defines which buttons should\n\t * be shown by the pagination rendering method that is used for the table:\n\t * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n\t * buttons are displayed in the document, while the functions here tell it\n\t * what buttons to display. This is done by returning an array of button\n\t * descriptions (what each button will do).\n\t *\n\t * Pagination types (the four built in options and any additional plug-in\n\t * options defined here) can be used through the `paginationType`\n\t * initialisation parameter.\n\t *\n\t * The functions defined take two parameters:\n\t *\n\t * 1. `{int} page` The current page index\n\t * 2. `{int} pages` The number of pages in the table\n\t *\n\t * Each function is expected to return an array where each element of the\n\t * array can be one of:\n\t *\n\t * * `first` - Jump to first page when activated\n\t * * `last` - Jump to last page when activated\n\t * * `previous` - Show previous page when activated\n\t * * `next` - Show next page when activated\n\t * * `{int}` - Show page of the index given\n\t * * `{array}` - A nested array containing the above elements to add a\n\t *   containing 'DIV' element (might be useful for styling).\n\t *\n\t * Note that DataTables v1.9- used this object slightly differently whereby\n\t * an object with two functions would be defined for each plug-in. That\n\t * ability is still supported by DataTables 1.10+ to provide backwards\n\t * compatibility, but this option of use is now decremented and no longer\n\t * documented in DataTables 1.10+.\n\t *\n\t *  @type object\n\t *  @default {}\n\t *\n\t *  @example\n\t *    // Show previous, next and current page buttons only\n\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n\t *      return [ 'previous', page, 'next' ];\n\t *    };\n\t */\n\tpager: {},\n\n\n\trenderer: {\n\t\tpageButton: {},\n\t\theader: {}\n\t},\n\n\n\t/**\n\t * Ordering plug-ins - custom data source\n\t * \n\t * The extension options for ordering of data available here is complimentary\n\t * to the default type based ordering that DataTables typically uses. It\n\t * allows much greater control over the the data that is being used to\n\t * order a column, but is necessarily therefore more complex.\n\t * \n\t * This type of ordering is useful if you want to do ordering based on data\n\t * live from the DOM (for example the contents of an 'input' element) rather\n\t * than just the static string that DataTables knows of.\n\t * \n\t * The way these plug-ins work is that you create an array of the values you\n\t * wish to be ordering for the column in question and then return that\n\t * array. The data in the array much be in the index order of the rows in\n\t * the table (not the currently ordering order!). Which order data gathering\n\t * function is run here depends on the `dt-init columns.orderDataType`\n\t * parameter that is used for the column (if any).\n\t *\n\t * The functions defined take two parameters:\n\t *\n\t * 1. `{object}` DataTables settings object: see\n\t *    {@link DataTable.models.oSettings}\n\t * 2. `{int}` Target column index\n\t *\n\t * Each function is expected to return an array:\n\t *\n\t * * `{array}` Data for the column to be ordering upon\n\t *\n\t *  @type array\n\t *\n\t *  @example\n\t *    // Ordering using `input` node values\n\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n\t *    {\n\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n\t *        return $('input', td).val();\n\t *      } );\n\t *    }\n\t */\n\torder: {},\n\n\n\t/**\n\t * Type based plug-ins.\n\t *\n\t * Each column in DataTables has a type assigned to it, either by automatic\n\t * detection or by direct assignment using the `type` option for the column.\n\t * The type of a column will effect how it is ordering and search (plug-ins\n\t * can also make use of the column type if required).\n\t *\n\t * @namespace\n\t */\n\ttype: {\n\t\t/**\n\t\t * Type detection functions.\n\t\t *\n\t\t * The functions defined in this object are used to automatically detect\n\t\t * a column's type, making initialisation of DataTables super easy, even\n\t\t * when complex data is in the table.\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be analysed\n\t     *  2. `{settings}` DataTables settings object. This can be used to\n\t     *     perform context specific type detection - for example detection\n\t     *     based on language settings such as using a comma for a decimal\n\t     *     place. Generally speaking the options from the settings will not\n\t     *     be required\n\t\t *\n\t\t * Each function is expected to return:\n\t\t *\n\t\t * * `{string|null}` Data type detected, or null if unknown (and thus\n\t\t *   pass it on to the other type detection functions.\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    // Currency type detection plug-in:\n\t\t *    $.fn.dataTable.ext.type.detect.push(\n\t\t *      function ( data, settings ) {\n\t\t *        // Check the numeric part\n\t\t *        if ( ! data.substring(1).match(/[0-9]/) ) {\n\t\t *          return null;\n\t\t *        }\n\t\t *\n\t\t *        // Check prefixed by currency\n\t\t *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n\t\t *          return 'currency';\n\t\t *        }\n\t\t *        return null;\n\t\t *      }\n\t\t *    );\n\t\t */\n\t\tdetect: [],\n\n\n\t\t/**\n\t\t * Type based search formatting.\n\t\t *\n\t\t * The type based searching functions can be used to pre-format the\n\t\t * data to be search on. For example, it can be used to strip HTML\n\t\t * tags or to de-format telephone numbers for numeric only searching.\n\t\t *\n\t\t * Note that is a search is not defined for a column of a given type,\n\t\t * no search formatting will be performed.\n\t\t * \n\t\t * Pre-processing of searching data plug-ins - When you assign the sType\n\t\t * for a column (or have it automatically detected for you by DataTables\n\t\t * or a type detection plug-in), you will typically be using this for\n\t\t * custom sorting, but it can also be used to provide custom searching\n\t\t * by allowing you to pre-processing the data and returning the data in\n\t\t * the format that should be searched upon. This is done by adding\n\t\t * functions this object with a parameter name which matches the sType\n\t\t * for that target column. This is the corollary of <i>afnSortData</i>\n\t\t * for searching data.\n\t\t *\n\t\t * The functions defined take a single parameter:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be prepared for searching\n\t\t *\n\t\t * Each function is expected to return:\n\t\t *\n\t\t * * `{string|null}` Formatted string that will be used for the searching.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n\t\t *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n\t\t *    }\n\t\t */\n\t\tsearch: {},\n\n\n\t\t/**\n\t\t * Type based ordering.\n\t\t *\n\t\t * The column type tells DataTables what ordering to apply to the table\n\t\t * when a column is sorted upon. The order for each type that is defined,\n\t\t * is defined by the functions available in this object.\n\t\t *\n\t\t * Each ordering option can be described by three properties added to\n\t\t * this object:\n\t\t *\n\t\t * * `{type}-pre` - Pre-formatting function\n\t\t * * `{type}-asc` - Ascending order function\n\t\t * * `{type}-desc` - Descending order function\n\t\t *\n\t\t * All three can be used together, only `{type}-pre` or only\n\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended\n\t\t * that only `{type}-pre` is used, as this provides the optimal\n\t\t * implementation in terms of speed, although the others are provided\n\t\t * for compatibility with existing Javascript sort functions.\n\t\t *\n\t\t * `{type}-pre`: Functions defined take a single parameter:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be prepared for ordering\n\t\t *\n\t\t * And return:\n\t\t *\n\t\t * * `{*}` Data to be sorted upon\n\t\t *\n\t\t * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n\t\t * functions, taking two parameters:\n\t\t *\n\t     *  1. `{*}` Data to compare to the second parameter\n\t     *  2. `{*}` Data to compare to the first parameter\n\t\t *\n\t\t * And returning:\n\t\t *\n\t\t * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n\t\t *   than the second parameter, ===0 if the two parameters are equal and\n\t\t *   >0 if the first parameter should be sorted height than the second\n\t\t *   parameter.\n\t\t * \n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    // Numeric ordering of formatted numbers with a pre-formatter\n\t\t *    $.extend( $.fn.dataTable.ext.type.order, {\n\t\t *      \"string-pre\": function(x) {\n\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n\t\t *        return parseFloat( a );\n\t\t *      }\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Case-sensitive string ordering, with no pre-formatting method\n\t\t *    $.extend( $.fn.dataTable.ext.order, {\n\t\t *      \"string-case-asc\": function(x,y) {\n\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t *      },\n\t\t *      \"string-case-desc\": function(x,y) {\n\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t *      }\n\t\t *    } );\n\t\t */\n\t\torder: {}\n\t},\n\n\t/**\n\t * Unique DataTables instance counter\n\t *\n\t * @type int\n\t * @private\n\t */\n\t_unique: 0,\n\n\n\t//\n\t// Depreciated\n\t// The following properties are retained for backwards compatibility only.\n\t// The should not be used in new projects and will be removed in a future\n\t// version\n\t//\n\n\t/**\n\t * Version check function.\n\t *  @type function\n\t *  @depreciated Since 1.10\n\t */\n\tfnVersionCheck: DataTable.fnVersionCheck,\n\n\n\t/**\n\t * Index for what 'this' index API functions should use\n\t *  @type int\n\t *  @deprecated Since v1.10\n\t */\n\tiApiIndex: 0,\n\n\n\t/**\n\t * jQuery UI class container\n\t *  @type object\n\t *  @deprecated Since v1.10\n\t */\n\toJUIClasses: {},\n\n\n\t/**\n\t * Software version\n\t *  @type string\n\t *  @deprecated Since v1.10\n\t */\n\tsVersion: DataTable.version\n};\n\n\n//\n// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n//\n$.extend( _ext, {\n\tafnFiltering: _ext.search,\n\taTypes:       _ext.type.detect,\n\tofnSearch:    _ext.type.search,\n\toSort:        _ext.type.order,\n\tafnSortData:  _ext.order,\n\taoFeatures:   _ext.feature,\n\toApi:         _ext.internal,\n\toStdClasses:  _ext.classes,\n\toPagination:  _ext.pager\n} );\n\n\n$.extend( DataTable.ext.classes, {\n\t\"sTable\": \"dataTable\",\n\t\"sNoFooter\": \"no-footer\",\n\n\t/* Paging buttons */\n\t\"sPageButton\": \"paginate_button\",\n\t\"sPageButtonActive\": \"current\",\n\t\"sPageButtonDisabled\": \"disabled\",\n\n\t/* Striping classes */\n\t\"sStripeOdd\": \"odd\",\n\t\"sStripeEven\": \"even\",\n\n\t/* Empty row */\n\t\"sRowEmpty\": \"dataTables_empty\",\n\n\t/* Features */\n\t\"sWrapper\": \"dataTables_wrapper\",\n\t\"sFilter\": \"dataTables_filter\",\n\t\"sInfo\": \"dataTables_info\",\n\t\"sPaging\": \"dataTables_paginate paging_\", /* Note that the type is postfixed */\n\t\"sLength\": \"dataTables_length\",\n\t\"sProcessing\": \"dataTables_processing\",\n\n\t/* Sorting */\n\t\"sSortAsc\": \"sorting_asc\",\n\t\"sSortDesc\": \"sorting_desc\",\n\t\"sSortable\": \"sorting\", /* Sortable in both directions */\n\t\"sSortableAsc\": \"sorting_desc_disabled\",\n\t\"sSortableDesc\": \"sorting_asc_disabled\",\n\t\"sSortableNone\": \"sorting_disabled\",\n\t\"sSortColumn\": \"sorting_\", /* Note that an int is postfixed for the sorting order */\n\n\t/* Filtering */\n\t\"sFilterInput\": \"\",\n\n\t/* Page length */\n\t\"sLengthSelect\": \"\",\n\n\t/* Scrolling */\n\t\"sScrollWrapper\": \"dataTables_scroll\",\n\t\"sScrollHead\": \"dataTables_scrollHead\",\n\t\"sScrollHeadInner\": \"dataTables_scrollHeadInner\",\n\t\"sScrollBody\": \"dataTables_scrollBody\",\n\t\"sScrollFoot\": \"dataTables_scrollFoot\",\n\t\"sScrollFootInner\": \"dataTables_scrollFootInner\",\n\n\t/* Misc */\n\t\"sHeaderTH\": \"\",\n\t\"sFooterTH\": \"\",\n\n\t// Deprecated\n\t\"sSortJUIAsc\": \"\",\n\t\"sSortJUIDesc\": \"\",\n\t\"sSortJUI\": \"\",\n\t\"sSortJUIAscAllowed\": \"\",\n\t\"sSortJUIDescAllowed\": \"\",\n\t\"sSortJUIWrapper\": \"\",\n\t\"sSortIcon\": \"\",\n\t\"sJUIHeader\": \"\",\n\t\"sJUIFooter\": \"\"\n} );\n\n\nvar extPagination = DataTable.ext.pager;\n\nfunction _numbers ( page, pages ) {\n\tvar\n\t\tnumbers = [],\n\t\tbuttons = extPagination.numbers_length,\n\t\thalf = Math.floor( buttons / 2 ),\n\t\ti = 1;\n\n\tif ( pages <= buttons ) {\n\t\tnumbers = _range( 0, pages );\n\t}\n\telse if ( page <= half ) {\n\t\tnumbers = _range( 0, buttons-2 );\n\t\tnumbers.push( 'ellipsis' );\n\t\tnumbers.push( pages-1 );\n\t}\n\telse if ( page >= pages - 1 - half ) {\n\t\tnumbers = _range( pages-(buttons-2), pages );\n\t\tnumbers.splice( 0, 0, 'ellipsis' ); // no unshift in ie6\n\t\tnumbers.splice( 0, 0, 0 );\n\t}\n\telse {\n\t\tnumbers = _range( page-half+2, page+half-1 );\n\t\tnumbers.push( 'ellipsis' );\n\t\tnumbers.push( pages-1 );\n\t\tnumbers.splice( 0, 0, 'ellipsis' );\n\t\tnumbers.splice( 0, 0, 0 );\n\t}\n\n\tnumbers.DT_el = 'span';\n\treturn numbers;\n}\n\n\n$.extend( extPagination, {\n\tsimple: function ( page, pages ) {\n\t\treturn [ 'previous', 'next' ];\n\t},\n\n\tfull: function ( page, pages ) {\n\t\treturn [  'first', 'previous', 'next', 'last' ];\n\t},\n\n\tnumbers: function ( page, pages ) {\n\t\treturn [ _numbers(page, pages) ];\n\t},\n\n\tsimple_numbers: function ( page, pages ) {\n\t\treturn [ 'previous', _numbers(page, pages), 'next' ];\n\t},\n\n\tfull_numbers: function ( page, pages ) {\n\t\treturn [ 'first', 'previous', _numbers(page, pages), 'next', 'last' ];\n\t},\n\t\n\tfirst_last_numbers: function (page, pages) {\n \t\treturn ['first', _numbers(page, pages), 'last'];\n \t},\n\n\t// For testing and plug-ins to use\n\t_numbers: _numbers,\n\n\t// Number of number buttons (including ellipsis) to show. _Must be odd!_\n\tnumbers_length: 7\n} );\n\n\n$.extend( true, DataTable.ext.renderer, {\n\tpageButton: {\n\t\t_: function ( settings, host, idx, buttons, page, pages ) {\n\t\t\tvar classes = settings.oClasses;\n\t\t\tvar lang = settings.oLanguage.oPaginate;\n\t\t\tvar aria = settings.oLanguage.oAria.paginate || {};\n\t\t\tvar btnDisplay, btnClass;\n\n\t\t\tvar attach = function( container, buttons ) {\n\t\t\t\tvar i, ien, node, button, tabIndex;\n\t\t\t\tvar disabledClass = classes.sPageButtonDisabled;\n\t\t\t\tvar clickHandler = function ( e ) {\n\t\t\t\t\t_fnPageChange( settings, e.data.action, true );\n\t\t\t\t};\n\n\t\t\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\t\t\tbutton = buttons[i];\n\n\t\t\t\t\tif ( Array.isArray( button ) ) {\n\t\t\t\t\t\tvar inner = $( '<'+(button.DT_el || 'div')+'/>' )\n\t\t\t\t\t\t\t.appendTo( container );\n\t\t\t\t\t\tattach( inner, button );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbtnDisplay = null;\n\t\t\t\t\t\tbtnClass = button;\n\t\t\t\t\t\ttabIndex = settings.iTabIndex;\n\n\t\t\t\t\t\tswitch ( button ) {\n\t\t\t\t\t\t\tcase 'ellipsis':\n\t\t\t\t\t\t\t\tcontainer.append('<span class=\"ellipsis\">&#x2026;</span>');\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'first':\n\t\t\t\t\t\t\t\tbtnDisplay = lang.sFirst;\n\n\t\t\t\t\t\t\t\tif ( page === 0 ) {\n\t\t\t\t\t\t\t\t\ttabIndex = -1;\n\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'previous':\n\t\t\t\t\t\t\t\tbtnDisplay = lang.sPrevious;\n\n\t\t\t\t\t\t\t\tif ( page === 0 ) {\n\t\t\t\t\t\t\t\t\ttabIndex = -1;\n\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'next':\n\t\t\t\t\t\t\t\tbtnDisplay = lang.sNext;\n\n\t\t\t\t\t\t\t\tif ( pages === 0 || page === pages-1 ) {\n\t\t\t\t\t\t\t\t\ttabIndex = -1;\n\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'last':\n\t\t\t\t\t\t\t\tbtnDisplay = lang.sLast;\n\n\t\t\t\t\t\t\t\tif ( pages === 0 || page === pages-1 ) {\n\t\t\t\t\t\t\t\t\ttabIndex = -1;\n\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tbtnDisplay = settings.fnFormatNumber( button + 1 );\n\t\t\t\t\t\t\t\tbtnClass = page === button ?\n\t\t\t\t\t\t\t\t\tclasses.sPageButtonActive : '';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( btnDisplay !== null ) {\n\t\t\t\t\t\t\tvar tag = settings.oInit.pagingTag || 'a';\n\t\t\t\t\t\t\tvar disabled = btnClass.indexOf(disabledClass) !== -1;\n\t\t\n\n\t\t\t\t\t\t\tnode = $('<'+tag+'>', {\n\t\t\t\t\t\t\t\t\t'class': classes.sPageButton+' '+btnClass,\n\t\t\t\t\t\t\t\t\t'aria-controls': settings.sTableId,\n\t\t\t\t\t\t\t\t\t'aria-disabled': disabled ? 'true' : null,\n\t\t\t\t\t\t\t\t\t'aria-label': aria[ button ],\n\t\t\t\t\t\t\t\t\t'aria-role': 'link',\n\t\t\t\t\t\t\t\t\t'aria-current': btnClass === classes.sPageButtonActive ? 'page' : null,\n\t\t\t\t\t\t\t\t\t'data-dt-idx': button,\n\t\t\t\t\t\t\t\t\t'tabindex': tabIndex,\n\t\t\t\t\t\t\t\t\t'id': idx === 0 && typeof button === 'string' ?\n\t\t\t\t\t\t\t\t\t\tsettings.sTableId +'_'+ button :\n\t\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.html( btnDisplay )\n\t\t\t\t\t\t\t\t.appendTo( container );\n\n\t\t\t\t\t\t\t_fnBindAction(\n\t\t\t\t\t\t\t\tnode, {action: button}, clickHandler\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t// inside an iframe or frame. Try / catch the error. Not good for\n\t\t\t// accessibility, but neither are frames.\n\t\t\tvar activeEl;\n\n\t\t\ttry {\n\t\t\t\t// Because this approach is destroying and recreating the paging\n\t\t\t\t// elements, focus is lost on the select button which is bad for\n\t\t\t\t// accessibility. So we want to restore focus once the draw has\n\t\t\t\t// completed\n\t\t\t\tactiveEl = $(host).find(document.activeElement).data('dt-idx');\n\t\t\t}\n\t\t\tcatch (e) {}\n\n\t\t\tattach( $(host).empty(), buttons );\n\n\t\t\tif ( activeEl !== undefined ) {\n\t\t\t\t$(host).find( '[data-dt-idx='+activeEl+']' ).trigger('focus');\n\t\t\t}\n\t\t}\n\t}\n} );\n\n\n\n// Built in type detection. See model.ext.aTypes for information about\n// what is required from this methods.\n$.extend( DataTable.ext.type.detect, [\n\t// Plain numbers - first since V8 detects some plain numbers as dates\n\t// e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).\n\tfunction ( d, settings )\n\t{\n\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\treturn _isNumber( d, decimal ) ? 'num'+decimal : null;\n\t},\n\n\t// Dates (only those recognised by the browser's Date.parse)\n\tfunction ( d, settings )\n\t{\n\t\t// V8 tries _very_ hard to make a string passed into `Date.parse()`\n\t\t// valid, so we need to use a regex to restrict date formats. Use a\n\t\t// plug-in for anything other than ISO8601 style strings\n\t\tif ( d && !(d instanceof Date) && ! _re_date.test(d) ) {\n\t\t\treturn null;\n\t\t}\n\t\tvar parsed = Date.parse(d);\n\t\treturn (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;\n\t},\n\n\t// Formatted numbers\n\tfunction ( d, settings )\n\t{\n\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\treturn _isNumber( d, decimal, true ) ? 'num-fmt'+decimal : null;\n\t},\n\n\t// HTML numeric\n\tfunction ( d, settings )\n\t{\n\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\treturn _htmlNumeric( d, decimal ) ? 'html-num'+decimal : null;\n\t},\n\n\t// HTML numeric, formatted\n\tfunction ( d, settings )\n\t{\n\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\treturn _htmlNumeric( d, decimal, true ) ? 'html-num-fmt'+decimal : null;\n\t},\n\n\t// HTML (this is strict checking - there must be html)\n\tfunction ( d, settings )\n\t{\n\t\treturn _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1) ?\n\t\t\t'html' : null;\n\t}\n] );\n\n\n\n// Filter formatting functions. See model.ext.ofnSearch for information about\n// what is required from these methods.\n// \n// Note that additional search methods are added for the html numbers and\n// html formatted numbers by `_addNumericSort()` when we know what the decimal\n// place is\n\n\n$.extend( DataTable.ext.type.search, {\n\thtml: function ( data ) {\n\t\treturn _empty(data) ?\n\t\t\tdata :\n\t\t\ttypeof data === 'string' ?\n\t\t\t\tdata\n\t\t\t\t\t.replace( _re_new_lines, \" \" )\n\t\t\t\t\t.replace( _re_html, \"\" ) :\n\t\t\t\t'';\n\t},\n\n\tstring: function ( data ) {\n\t\treturn _empty(data) ?\n\t\t\tdata :\n\t\t\ttypeof data === 'string' ?\n\t\t\t\tdata.replace( _re_new_lines, \" \" ) :\n\t\t\t\tdata;\n\t}\n} );\n\n\n\nvar __numericReplace = function ( d, decimalPlace, re1, re2 ) {\n\tif ( d !== 0 && (!d || d === '-') ) {\n\t\treturn -Infinity;\n\t}\n\t\n\tlet type = typeof d;\n\n\tif (type === 'number' || type === 'bigint') {\n\t\treturn d;\n\t}\n\n\t// If a decimal place other than `.` is used, it needs to be given to the\n\t// function so we can detect it and replace with a `.` which is the only\n\t// decimal place Javascript recognises - it is not locale aware.\n\tif ( decimalPlace ) {\n\t\td = _numToDecimal( d, decimalPlace );\n\t}\n\n\tif ( d.replace ) {\n\t\tif ( re1 ) {\n\t\t\td = d.replace( re1, '' );\n\t\t}\n\n\t\tif ( re2 ) {\n\t\t\td = d.replace( re2, '' );\n\t\t}\n\t}\n\n\treturn d * 1;\n};\n\n\n// Add the numeric 'deformatting' functions for sorting and search. This is done\n// in a function to provide an easy ability for the language options to add\n// additional methods if a non-period decimal place is used.\nfunction _addNumericSort ( decimalPlace ) {\n\t$.each(\n\t\t{\n\t\t\t// Plain numbers\n\t\t\t\"num\": function ( d ) {\n\t\t\t\treturn __numericReplace( d, decimalPlace );\n\t\t\t},\n\n\t\t\t// Formatted numbers\n\t\t\t\"num-fmt\": function ( d ) {\n\t\t\t\treturn __numericReplace( d, decimalPlace, _re_formatted_numeric );\n\t\t\t},\n\n\t\t\t// HTML numeric\n\t\t\t\"html-num\": function ( d ) {\n\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html );\n\t\t\t},\n\n\t\t\t// HTML numeric, formatted\n\t\t\t\"html-num-fmt\": function ( d ) {\n\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html, _re_formatted_numeric );\n\t\t\t}\n\t\t},\n\t\tfunction ( key, fn ) {\n\t\t\t// Add the ordering method\n\t\t\t_ext.type.order[ key+decimalPlace+'-pre' ] = fn;\n\n\t\t\t// For HTML types add a search formatter that will strip the HTML\n\t\t\tif ( key.match(/^html\\-/) ) {\n\t\t\t\t_ext.type.search[ key+decimalPlace ] = _ext.type.search.html;\n\t\t\t}\n\t\t}\n\t);\n}\n\n\n// Default sort methods\n$.extend( _ext.type.order, {\n\t// Dates\n\t\"date-pre\": function ( d ) {\n\t\tvar ts = Date.parse( d );\n\t\treturn isNaN(ts) ? -Infinity : ts;\n\t},\n\n\t// html\n\t\"html-pre\": function ( a ) {\n\t\treturn _empty(a) ?\n\t\t\t'' :\n\t\t\ta.replace ?\n\t\t\t\ta.replace( /<.*?>/g, \"\" ).toLowerCase() :\n\t\t\t\ta+'';\n\t},\n\n\t// string\n\t\"string-pre\": function ( a ) {\n\t\t// This is a little complex, but faster than always calling toString,\n\t\t// http://jsperf.com/tostring-v-check\n\t\treturn _empty(a) ?\n\t\t\t'' :\n\t\t\ttypeof a === 'string' ?\n\t\t\t\ta.toLowerCase() :\n\t\t\t\t! a.toString ?\n\t\t\t\t\t'' :\n\t\t\t\t\ta.toString();\n\t},\n\n\t// string-asc and -desc are retained only for compatibility with the old\n\t// sort methods\n\t\"string-asc\": function ( x, y ) {\n\t\treturn ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t},\n\n\t\"string-desc\": function ( x, y ) {\n\t\treturn ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t}\n} );\n\n\n// Numeric sorting types - order doesn't matter here\n_addNumericSort( '' );\n\n\n$.extend( true, DataTable.ext.renderer, {\n\theader: {\n\t\t_: function ( settings, cell, column, classes ) {\n\t\t\t// No additional mark-up required\n\t\t\t// Attach a sort listener to update on sort - note that using the\n\t\t\t// `DT` namespace will allow the event to be removed automatically\n\t\t\t// on destroy, while the `dt` namespaced event is the one we are\n\t\t\t// listening for\n\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\n\t\t\t\tif ( settings !== ctx ) { // need to check this this is the host\n\t\t\t\t\treturn;               // table, not a nested one\n\t\t\t\t}\n\n\t\t\t\tvar colIdx = column.idx;\n\n\t\t\t\tcell\n\t\t\t\t\t.removeClass(\n\t\t\t\t\t\tclasses.sSortAsc +' '+\n\t\t\t\t\t\tclasses.sSortDesc\n\t\t\t\t\t)\n\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t);\n\t\t\t} );\n\t\t},\n\n\t\tjqueryui: function ( settings, cell, column, classes ) {\n\t\t\t$('<div/>')\n\t\t\t\t.addClass( classes.sSortJUIWrapper )\n\t\t\t\t.append( cell.contents() )\n\t\t\t\t.append( $('<span/>')\n\t\t\t\t\t.addClass( classes.sSortIcon+' '+column.sSortingClassJUI )\n\t\t\t\t)\n\t\t\t\t.appendTo( cell );\n\n\t\t\t// Attach a sort listener to update on sort\n\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar colIdx = column.idx;\n\n\t\t\t\tcell\n\t\t\t\t\t.removeClass( classes.sSortAsc +\" \"+classes.sSortDesc )\n\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t);\n\n\t\t\t\tcell\n\t\t\t\t\t.find( 'span.'+classes.sSortIcon )\n\t\t\t\t\t.removeClass(\n\t\t\t\t\t\tclasses.sSortJUIAsc +\" \"+\n\t\t\t\t\t\tclasses.sSortJUIDesc +\" \"+\n\t\t\t\t\t\tclasses.sSortJUI +\" \"+\n\t\t\t\t\t\tclasses.sSortJUIAscAllowed +\" \"+\n\t\t\t\t\t\tclasses.sSortJUIDescAllowed\n\t\t\t\t\t)\n\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\tclasses.sSortJUIAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\tclasses.sSortJUIDesc :\n\t\t\t\t\t\t\tcolumn.sSortingClassJUI\n\t\t\t\t\t);\n\t\t\t} );\n\t\t}\n\t}\n} );\n\n/*\n * Public helper functions. These aren't used internally by DataTables, or\n * called by any of the options passed into DataTables, but they can be used\n * externally by developers working with DataTables. They are helper functions\n * to make working with DataTables a little bit easier.\n */\n\nvar __htmlEscapeEntities = function ( d ) {\n\tif (Array.isArray(d)) {\n\t\td = d.join(',');\n\t}\n\n\treturn typeof d === 'string' ?\n\t\td\n\t\t\t.replace(/&/g, '&amp;')\n\t\t\t.replace(/</g, '&lt;')\n\t\t\t.replace(/>/g, '&gt;')\n\t\t\t.replace(/\"/g, '&quot;') :\n\t\td;\n};\n\n// Common logic for moment, luxon or a date action\nfunction __mld( dt, momentFn, luxonFn, dateFn, arg1 ) {\n\tif (window.moment) {\n\t\treturn dt[momentFn]( arg1 );\n\t}\n\telse if (window.luxon) {\n\t\treturn dt[luxonFn]( arg1 );\n\t}\n\t\n\treturn dateFn ? dt[dateFn]( arg1 ) : dt;\n}\n\n\nvar __mlWarning = false;\nfunction __mldObj (d, format, locale) {\n\tvar dt;\n\n\tif (window.moment) {\n\t\tdt = window.moment.utc( d, format, locale, true );\n\n\t\tif (! dt.isValid()) {\n\t\t\treturn null;\n\t\t}\n\t}\n\telse if (window.luxon) {\n\t\tdt = format && typeof d === 'string'\n\t\t\t? window.luxon.DateTime.fromFormat( d, format )\n\t\t\t: window.luxon.DateTime.fromISO( d );\n\n\t\tif (! dt.isValid) {\n\t\t\treturn null;\n\t\t}\n\n\t\tdt.setLocale(locale);\n\t}\n\telse if (! format) {\n\t\t// No format given, must be ISO\n\t\tdt = new Date(d);\n\t}\n\telse {\n\t\tif (! __mlWarning) {\n\t\t\talert('DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17');\n\t\t}\n\n\t\t__mlWarning = true;\n\t}\n\n\treturn dt;\n}\n\n// Wrapper for date, datetime and time which all operate the same way with the exception of\n// the output string for auto locale support\nfunction __mlHelper (localeString) {\n\treturn function ( from, to, locale, def ) {\n\t\t// Luxon and Moment support\n\t\t// Argument shifting\n\t\tif ( arguments.length === 0 ) {\n\t\t\tlocale = 'en';\n\t\t\tto = null; // means toLocaleString\n\t\t\tfrom = null; // means iso8601\n\t\t}\n\t\telse if ( arguments.length === 1 ) {\n\t\t\tlocale = 'en';\n\t\t\tto = from;\n\t\t\tfrom = null;\n\t\t}\n\t\telse if ( arguments.length === 2 ) {\n\t\t\tlocale = to;\n\t\t\tto = from;\n\t\t\tfrom = null;\n\t\t}\n\n\t\tvar typeName = 'datetime-' + to;\n\n\t\t// Add type detection and sorting specific to this date format - we need to be able to identify\n\t\t// date type columns as such, rather than as numbers in extensions. Hence the need for this.\n\t\tif (! DataTable.ext.type.order[typeName]) {\n\t\t\t// The renderer will give the value to type detect as the type!\n\t\t\tDataTable.ext.type.detect.unshift(function (d) {\n\t\t\t\treturn d === typeName ? typeName : false;\n\t\t\t});\n\n\t\t\t// The renderer gives us Moment, Luxon or Date obects for the sorting, all of which have a\n\t\t\t// `valueOf` which gives milliseconds epoch\n\t\t\tDataTable.ext.type.order[typeName + '-asc'] = function (a, b) {\n\t\t\t\tvar x = a.valueOf();\n\t\t\t\tvar y = b.valueOf();\n\n\t\t\t\treturn x === y\n\t\t\t\t\t? 0\n\t\t\t\t\t: x < y\n\t\t\t\t\t\t? -1\n\t\t\t\t\t\t: 1;\n\t\t\t}\n\n\t\t\tDataTable.ext.type.order[typeName + '-desc'] = function (a, b) {\n\t\t\t\tvar x = a.valueOf();\n\t\t\t\tvar y = b.valueOf();\n\n\t\t\t\treturn x === y\n\t\t\t\t\t? 0\n\t\t\t\t\t: x > y\n\t\t\t\t\t\t? -1\n\t\t\t\t\t\t: 1;\n\t\t\t}\n\t\t}\n\t\n\t\treturn function ( d, type ) {\n\t\t\t// Allow for a default value\n\t\t\tif (d === null || d === undefined) {\n\t\t\t\tif (def === '--now') {\n\t\t\t\t\t// We treat everything as UTC further down, so no changes are\n\t\t\t\t\t// made, as such need to get the local date / time as if it were\n\t\t\t\t\t// UTC\n\t\t\t\t\tvar local = new Date();\n\t\t\t\t\td = new Date( Date.UTC(\n\t\t\t\t\t\tlocal.getFullYear(), local.getMonth(), local.getDate(),\n\t\t\t\t\t\tlocal.getHours(), local.getMinutes(), local.getSeconds()\n\t\t\t\t\t) );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\td = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (type === 'type') {\n\t\t\t\t// Typing uses the type name for fast matching\n\t\t\t\treturn typeName;\n\t\t\t}\n\n\t\t\tif (d === '') {\n\t\t\t\treturn type !== 'sort'\n\t\t\t\t\t? ''\n\t\t\t\t\t: __mldObj('0000-01-01 00:00:00', null, locale);\n\t\t\t}\n\n\t\t\t// Shortcut. If `from` and `to` are the same, we are using the renderer to\n\t\t\t// format for ordering, not display - its already in the display format.\n\t\t\tif ( to !== null && from === to && type !== 'sort' && type !== 'type' && ! (d instanceof Date) ) {\n\t\t\t\treturn d;\n\t\t\t}\n\n\t\t\tvar dt = __mldObj(d, from, locale);\n\n\t\t\tif (dt === null) {\n\t\t\t\treturn d;\n\t\t\t}\n\n\t\t\tif (type === 'sort') {\n\t\t\t\treturn dt;\n\t\t\t}\n\t\t\t\n\t\t\tvar formatted = to === null\n\t\t\t\t? __mld(dt, 'toDate', 'toJSDate', '')[localeString]()\n\t\t\t\t: __mld(dt, 'format', 'toFormat', 'toISOString', to);\n\n\t\t\t// XSS protection\n\t\t\treturn type === 'display' ?\n\t\t\t\t__htmlEscapeEntities( formatted ) :\n\t\t\t\tformatted;\n\t\t};\n\t}\n}\n\n// Based on locale, determine standard number formatting\n// Fallback for legacy browsers is US English\nvar __thousands = ',';\nvar __decimal = '.';\n\nif (Intl) {\n\ttry {\n\t\tvar num = new Intl.NumberFormat().formatToParts(100000.1);\n\t\n\t\tfor (var i=0 ; i<num.length ; i++) {\n\t\t\tif (num[i].type === 'group') {\n\t\t\t\t__thousands = num[i].value;\n\t\t\t}\n\t\t\telse if (num[i].type === 'decimal') {\n\t\t\t\t__decimal = num[i].value;\n\t\t\t}\n\t\t}\n\t}\n\tcatch (e) {\n\t\t// noop\n\t}\n}\n\n// Formatted date time detection - use by declaring the formats you are going to use\nDataTable.datetime = function ( format, locale ) {\n\tvar typeName = 'datetime-detect-' + format;\n\n\tif (! locale) {\n\t\tlocale = 'en';\n\t}\n\n\tif (! DataTable.ext.type.order[typeName]) {\n\t\tDataTable.ext.type.detect.unshift(function (d) {\n\t\t\tvar dt = __mldObj(d, format, locale);\n\t\t\treturn d === '' || dt ? typeName : false;\n\t\t});\n\n\t\tDataTable.ext.type.order[typeName + '-pre'] = function (d) {\n\t\t\treturn __mldObj(d, format, locale) || 0;\n\t\t}\n\t}\n}\n\n/**\n * Helpers for `columns.render`.\n *\n * The options defined here can be used with the `columns.render` initialisation\n * option to provide a display renderer. The following functions are defined:\n *\n * * `number` - Will format numeric data (defined by `columns.data`) for\n *   display, retaining the original unformatted data for sorting and filtering.\n *   It takes 5 parameters:\n *   * `string` - Thousands grouping separator\n *   * `string` - Decimal point indicator\n *   * `integer` - Number of decimal points to show\n *   * `string` (optional) - Prefix.\n *   * `string` (optional) - Postfix (/suffix).\n * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\n *   parameters.\n *\n * @example\n *   // Column definition using the number renderer\n *   {\n *     data: \"salary\",\n *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n *   }\n *\n * @namespace\n */\nDataTable.render = {\n\tdate: __mlHelper('toLocaleDateString'),\n\tdatetime: __mlHelper('toLocaleString'),\n\ttime: __mlHelper('toLocaleTimeString'),\n\tnumber: function ( thousands, decimal, precision, prefix, postfix ) {\n\t\t// Auto locale detection\n\t\tif (thousands === null || thousands === undefined) {\n\t\t\tthousands = __thousands;\n\t\t}\n\n\t\tif (decimal === null || decimal === undefined) {\n\t\t\tdecimal = __decimal;\n\t\t}\n\n\t\treturn {\n\t\t\tdisplay: function ( d ) {\n\t\t\t\tif ( typeof d !== 'number' && typeof d !== 'string' ) {\n\t\t\t\t\treturn d;\n\t\t\t\t}\n\n\t\t\t\tif (d === '' || d === null) {\n\t\t\t\t\treturn d;\n\t\t\t\t}\n\n\t\t\t\tvar negative = d < 0 ? '-' : '';\n\t\t\t\tvar flo = parseFloat( d );\n\n\t\t\t\t// If NaN then there isn't much formatting that we can do - just\n\t\t\t\t// return immediately, escaping any HTML (this was supposed to\n\t\t\t\t// be a number after all)\n\t\t\t\tif ( isNaN( flo ) ) {\n\t\t\t\t\treturn __htmlEscapeEntities( d );\n\t\t\t\t}\n\n\t\t\t\tflo = flo.toFixed( precision );\n\t\t\t\td = Math.abs( flo );\n\n\t\t\t\tvar intPart = parseInt( d, 10 );\n\t\t\t\tvar floatPart = precision ?\n\t\t\t\t\tdecimal+(d - intPart).toFixed( precision ).substring( 2 ):\n\t\t\t\t\t'';\n\n\t\t\t\t// If zero, then can't have a negative prefix\n\t\t\t\tif (intPart === 0 && parseFloat(floatPart) === 0) {\n\t\t\t\t\tnegative = '';\n\t\t\t\t}\n\n\t\t\t\treturn negative + (prefix||'') +\n\t\t\t\t\tintPart.toString().replace(\n\t\t\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g, thousands\n\t\t\t\t\t) +\n\t\t\t\t\tfloatPart +\n\t\t\t\t\t(postfix||'');\n\t\t\t}\n\t\t};\n\t},\n\n\ttext: function () {\n\t\treturn {\n\t\t\tdisplay: __htmlEscapeEntities,\n\t\t\tfilter: __htmlEscapeEntities\n\t\t};\n\t}\n};\n\n\n/*\n * This is really a good bit rubbish this method of exposing the internal methods\n * publicly... - To be fixed in 2.0 using methods on the prototype\n */\n\n\n/**\n * Create a wrapper function for exporting an internal functions to an external API.\n *  @param {string} fn API function name\n *  @returns {function} wrapped function\n *  @memberof DataTable#internal\n */\nfunction _fnExternApiFunc (fn)\n{\n\treturn function() {\n\t\tvar args = [_fnSettingsFromNode( this[DataTable.ext.iApiIndex] )].concat(\n\t\t\tArray.prototype.slice.call(arguments)\n\t\t);\n\t\treturn DataTable.ext.internal[fn].apply( this, args );\n\t};\n}\n\n\n/**\n * Reference to internal functions for use by plug-in developers. Note that\n * these methods are references to internal functions and are considered to be\n * private. If you use these methods, be aware that they are liable to change\n * between versions.\n *  @namespace\n */\n$.extend( DataTable.ext.internal, {\n\t_fnExternApiFunc: _fnExternApiFunc,\n\t_fnBuildAjax: _fnBuildAjax,\n\t_fnAjaxUpdate: _fnAjaxUpdate,\n\t_fnAjaxParameters: _fnAjaxParameters,\n\t_fnAjaxUpdateDraw: _fnAjaxUpdateDraw,\n\t_fnAjaxDataSrc: _fnAjaxDataSrc,\n\t_fnAddColumn: _fnAddColumn,\n\t_fnColumnOptions: _fnColumnOptions,\n\t_fnAdjustColumnSizing: _fnAdjustColumnSizing,\n\t_fnVisibleToColumnIndex: _fnVisibleToColumnIndex,\n\t_fnColumnIndexToVisible: _fnColumnIndexToVisible,\n\t_fnVisbleColumns: _fnVisbleColumns,\n\t_fnGetColumns: _fnGetColumns,\n\t_fnColumnTypes: _fnColumnTypes,\n\t_fnApplyColumnDefs: _fnApplyColumnDefs,\n\t_fnHungarianMap: _fnHungarianMap,\n\t_fnCamelToHungarian: _fnCamelToHungarian,\n\t_fnLanguageCompat: _fnLanguageCompat,\n\t_fnBrowserDetect: _fnBrowserDetect,\n\t_fnAddData: _fnAddData,\n\t_fnAddTr: _fnAddTr,\n\t_fnNodeToDataIndex: _fnNodeToDataIndex,\n\t_fnNodeToColumnIndex: _fnNodeToColumnIndex,\n\t_fnGetCellData: _fnGetCellData,\n\t_fnSetCellData: _fnSetCellData,\n\t_fnSplitObjNotation: _fnSplitObjNotation,\n\t_fnGetObjectDataFn: _fnGetObjectDataFn,\n\t_fnSetObjectDataFn: _fnSetObjectDataFn,\n\t_fnGetDataMaster: _fnGetDataMaster,\n\t_fnClearTable: _fnClearTable,\n\t_fnDeleteIndex: _fnDeleteIndex,\n\t_fnInvalidate: _fnInvalidate,\n\t_fnGetRowElements: _fnGetRowElements,\n\t_fnCreateTr: _fnCreateTr,\n\t_fnBuildHead: _fnBuildHead,\n\t_fnDrawHead: _fnDrawHead,\n\t_fnDraw: _fnDraw,\n\t_fnReDraw: _fnReDraw,\n\t_fnAddOptionsHtml: _fnAddOptionsHtml,\n\t_fnDetectHeader: _fnDetectHeader,\n\t_fnGetUniqueThs: _fnGetUniqueThs,\n\t_fnFeatureHtmlFilter: _fnFeatureHtmlFilter,\n\t_fnFilterComplete: _fnFilterComplete,\n\t_fnFilterCustom: _fnFilterCustom,\n\t_fnFilterColumn: _fnFilterColumn,\n\t_fnFilter: _fnFilter,\n\t_fnFilterCreateSearch: _fnFilterCreateSearch,\n\t_fnEscapeRegex: _fnEscapeRegex,\n\t_fnFilterData: _fnFilterData,\n\t_fnFeatureHtmlInfo: _fnFeatureHtmlInfo,\n\t_fnUpdateInfo: _fnUpdateInfo,\n\t_fnInfoMacros: _fnInfoMacros,\n\t_fnInitialise: _fnInitialise,\n\t_fnInitComplete: _fnInitComplete,\n\t_fnLengthChange: _fnLengthChange,\n\t_fnFeatureHtmlLength: _fnFeatureHtmlLength,\n\t_fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,\n\t_fnPageChange: _fnPageChange,\n\t_fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,\n\t_fnProcessingDisplay: _fnProcessingDisplay,\n\t_fnFeatureHtmlTable: _fnFeatureHtmlTable,\n\t_fnScrollDraw: _fnScrollDraw,\n\t_fnApplyToChildren: _fnApplyToChildren,\n\t_fnCalculateColumnWidths: _fnCalculateColumnWidths,\n\t_fnThrottle: _fnThrottle,\n\t_fnConvertToWidth: _fnConvertToWidth,\n\t_fnGetWidestNode: _fnGetWidestNode,\n\t_fnGetMaxLenString: _fnGetMaxLenString,\n\t_fnStringToCss: _fnStringToCss,\n\t_fnSortFlatten: _fnSortFlatten,\n\t_fnSort: _fnSort,\n\t_fnSortAria: _fnSortAria,\n\t_fnSortListener: _fnSortListener,\n\t_fnSortAttachListener: _fnSortAttachListener,\n\t_fnSortingClasses: _fnSortingClasses,\n\t_fnSortData: _fnSortData,\n\t_fnSaveState: _fnSaveState,\n\t_fnLoadState: _fnLoadState,\n\t_fnImplementState: _fnImplementState,\n\t_fnSettingsFromNode: _fnSettingsFromNode,\n\t_fnLog: _fnLog,\n\t_fnMap: _fnMap,\n\t_fnBindAction: _fnBindAction,\n\t_fnCallbackReg: _fnCallbackReg,\n\t_fnCallbackFire: _fnCallbackFire,\n\t_fnLengthOverflow: _fnLengthOverflow,\n\t_fnRenderer: _fnRenderer,\n\t_fnDataSource: _fnDataSource,\n\t_fnRowAttributes: _fnRowAttributes,\n\t_fnExtend: _fnExtend,\n\t_fnCalculateEnd: function () {} // Used by a lot of plug-ins, but redundant\n\t                                // in 1.10, so this dead-end function is\n\t                                // added to prevent errors\n} );\n\n\n// jQuery access\n$.fn.dataTable = DataTable;\n\n// Provide access to the host jQuery object (circular reference)\nDataTable.$ = $;\n\n// Legacy aliases\n$.fn.dataTableSettings = DataTable.settings;\n$.fn.dataTableExt = DataTable.ext;\n\n// With a capital `D` we return a DataTables API instance rather than a\n// jQuery object\n$.fn.DataTable = function ( opts ) {\n\treturn $(this).dataTable( opts ).api();\n};\n\n// All properties that are available to $.fn.dataTable should also be\n// available on $.fn.DataTable\n$.each( DataTable, function ( prop, val ) {\n\t$.fn.DataTable[ prop ] = val;\n} );\n\nexport default DataTable;\n"],"sourceRoot":""}